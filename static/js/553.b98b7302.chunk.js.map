{"version":3,"file":"static/js/553.b98b7302.chunk.js","mappings":"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","sources":["components/RegisterForm/RegStepOne.styled.js","components/RegisterForm/RegisterForm.styled.js","components/Ui-Kit/Button/Button.styled.js","components/Ui-Kit/Button/Button.jsx","components/Ui-Kit/Input/Input.jsx","components/Ui-Kit/Input/Input.styled.js","components/RegisterForm/Validation.jsx","components/RegisterForm/RegStepOne.jsx","components/RegisterForm/RegStepTwo.styled.js","components/RegisterForm/RegStepTwo.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n  padding: 0;\n`;\n\nexport const PasswordToggle = styled.button`\n  position: absolute;\n  right: 10px;\n  bottom: 8px;\n  transform: translateY(-15%);\n  border: none;\n  background: none;\n  font-size: 20px;\n  color: ${theme.colors.secondaryText};\n  cursor: pointer;\n  z-index: 100;\n`;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\n\nexport const ModalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 85%;\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  overflow-y: auto;\n  background-color: ${theme.colors.cardBackground};\n  border-radius: 40px;\n  padding: 60px 80px 40px 80px;\n  width: 618px;\n\n  box-shadow: ${theme.boxShadow.second};\n  ${theme.mq.desktop} {\n    margin-top: 0;\n  }\n  ${theme.mq.tabletOnly} {\n    margin-top: 110px;\n  }\n  ${theme.mq.mobileOnly} {\n    background-color: transparent;\n    box-shadow: none;\n    width: 100%;\n    padding: 0 0 20px 0;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.medium};\n  font-size: 36px;\n  line-height: 49px;\n  text-align: center;\n  align-items: center;\n  color: ${theme.colors.mainText};\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.l};\n    line-height: 32px;\n  }\n`;\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  /* margin-bottom: 40px;  */\n  /* gap: 30px; */\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 50px;\n  margin-top: 40px;\n  width: 100%;\n`;\n\nexport const Paragraph = styled.p`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.normal};\n  font-size: ${theme.fontSizes.xxxs};\n  line-height: 16px;\n  align-items: center;\n  text-align: center;\n  color: ${theme.colors.secondaryText};\n`;\n\nexport const LoginLink = styled(NavLink)`\n  color: #3091eb;\n  text-decoration: none;\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  color: red;\n  font-size: 14px;\n  text-align: center;\n  width: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  top: 120px;\n  ${theme.mq.mobileOnly} {\n    top: 50px;\n    font-size: 12px;\n  }\n`;\n\n\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { breakpoints } from 'constants/theme';\n\nexport const ButtonStyled = styled(motion.button)`\n  height: 40px;\n  display: block;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  cursor: pointer;\n  width: ${({ theme, width }) => (width ? width : 'auto')};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  border-radius: 40px;\n  border: 2px solid ${({ theme }) => theme.colors.accent};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${({ name }) => name === 'contacts' && '12px'};\n  /* background-color: ${({ theme, name, selected }) =>\n      name === 'filled' || selected ? theme.colors.accent : 'transparent'}; */\n\n  background-color: ${({ theme, name, selected }) => {\n      switch (name) {\n         case 'filter':\n            return selected ? theme.colors.accent : 'transparent';\n         case 'filled':\n            return theme.colors.accent;\n         case 'contacts':\n            return theme.colors.accent;\n         default:\n            return 'transparent';\n      }\n   }};\n  color: ${({ theme, name, selected }) => {\n      switch (name) {\n         case 'transparent':\n            return theme.colors.mainText;\n         case 'filled':\n            return theme.colors.lightText;\n         case 'learnMore':\n            return theme.colors.accent;\n         case 'filter':\n            return selected ? theme.colors.lightText : theme.colors.mainText;\n         case 'addToFavorite':\n            return theme.colors.mainText;\n         default:\n            return theme.colors.lightText;\n      }\n   }};\n\n  transition: color ${({ theme }) => theme.transitionTiming},\n    background-color ${({ theme }) => theme.transitionTiming},\n    border-color ${({ theme }) => theme.transitionTiming};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme, name }) =>\n      name === 'learnMore' && 'contacts' ? 'transparent' : theme.colors.hover};\n    border-color: ${({ theme, name }) =>\n      name === 'learnMore' ? theme.colors.secondaryHover : theme.colors.hover};\n    color: ${({ theme, name }) =>\n      name === 'learnMore'\n         ? theme.colors.secondaryHover\n         : theme.colors.lightText};\n  }\n\n\n    @media (min-width: ${breakpoints[1]}px) {\n      margin-left: ${({ name }) => name === 'contacts' && '12px'};\n      margin-bottom: ${({ name }) => name === 'contacts' && '0px'};\n   }\n`;\n","import React from 'react';\nimport { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\n// name: 'transparent' | 'filled' | 'learnMore'\nconst Button = ({\n  type = 'button',\n  onClick,\n  children,\n  name,\n  width,\n  selected,\n}) => {\n  return (\n    <ButtonStyled\n      name={name}\n      type={type}\n      onClick={onClick}\n      width={width}\n      selected={selected}\n      whileTap={{ scale: 0.95 }}\n    >\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  width: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  selected: PropTypes.bool,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ErrorStyle,\n  FieldStyle,\n  StyledSpan,\n  Label,\n  FieldWrapper,\n} from './Input.styled';\n\nconst InputField = ({\n  label,\n  name,\n  type,\n  placeholder,\n  id,\n  span,\n  autocomplete,\n  children,\n  as,\n}) => {\n  return (\n    <FieldWrapper>\n      <Label htmlFor={name}>\n        {label}\n        <StyledSpan>{span}</StyledSpan>\n      </Label>\n      <FieldStyle\n        type={type}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        autoComplete={autocomplete}\n        as={as}\n      />\n      <ErrorStyle name={name} component=\"div\" />\n      {children}\n    </FieldWrapper>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  span: PropTypes.string,\n  autocomplete: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { theme, breakpoints } from 'constants/theme';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FieldStyle = styled(Field)`\n  width: 100%;\n  border-radius: 40px;\n  cursor: pointer;\n  margin-bottom: 8px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  background-color: ${theme.colors.mainBackground};\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.primaryText};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxs};\n    padding: 12px 14px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 12px;\n  ${theme.mq.mobileOnly} {\n    margin-bottom: 8px;\n  }\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.s};\n  line-height: 1.44;\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.l};\n    line-height: 1.08;\n    margin-top: 12px;\n  } ;\n`;\n\nexport const ErrorStyle = styled(ErrorMessage)`\n  position: absolute;\n  left: 0;\n  bottom: -3px;\n  font-size: 8px;\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  color: ${theme.colors.accent};\n`;\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// Formik initials\nexport const initialValues = {\n  name: '',\n  city: '',\n  phone: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\n// Yup Validation\nexport const validationSchemaStepOne = Yup.object().shape({\n  email: Yup.string()\n    .email('Please enter a valid email address, example: \"mail@mail.com\"')\n    .matches(\n      /^([a-zA-Z][\\w+-]+(?:\\.\\w+)?)@([\\w-]+(?:\\.[a-zA-Z]{2,10})+)$/,\n      'Please enter a valid email address, example: \"mail@mail.com\"'\n    )\n    .required('Email is required')\n    .min(12, 'Email should be at least 12 characters long')\n    .max(63, 'Email should be up to 63 characters long'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{7,}$/,\n      '7 characters, 1 uppercase, 1 lowercase, 1 number'\n    )\n    .min(7, 'Password should be at least 7 characters long')\n    .max(32, 'Password should be up to 32 characters long')\n    .required('Password is required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n\nexport const validationSchemaStepTwo = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Name should have at least 3 characters')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(?: [a-zA-Zа-яА-Я]+)*$/,\n      'Only letters can be accepted'\n    )\n    .max(12, 'Name should be up to 12 characters long')\n    .required('Name is required'),\n  city: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-ЯіІїЇ]+(?:[-\\s]?[a-zA-Zа-яА-ЯіІїЇ]+)*,\\s*[a-zA-Zа-яА-ЯіІїЇ'’\\s-]+$/,\n      'Should be \"City, Region\" separated by comma, only letters can be accepted'\n    )\n    .min(3, 'City should have at least 3 characters')\n    .required('City is required'),\n  phone: Yup.string()\n    .matches(\n      /^\\+380\\d{9}$/,\n      'Number should begin with +380 and contain 13 digits'\n    )\n    .min(13, 'Phone number should be 13 digits')\n    .max(13, 'Phone number should be 13 digits')\n    .required('Phone number is required'),\n});\n\n// name without space ^[a-zA-Zа-яА-Я]+(?: [a-zA-Zа-яА-Я]+)*$\n","import React, { useState } from 'react';\nimport InputField from 'components/Ui-Kit/Input';\nimport { PasswordToggle, PasswordWrapper } from './RegStepOne.styled';\nimport { RxEyeOpen, RxEyeClosed } from 'react-icons/rx';\n\nconst RegStepOne = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const passwordInputType = showPassword ? 'text' : 'password';\n\n  return (\n    <>\n      <InputField\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Email\"\n        autocomplete=\"email\"\n      />\n\n      <InputField\n        name=\"password\"\n        type={passwordInputType}\n        placeholder=\"Password\"\n        autocomplete=\"new-password\"\n      >\n        <PasswordToggle type=\"button\" onClick={toggleShowPassword}>\n          {showPassword ? <RxEyeOpen /> : <RxEyeClosed />}\n        </PasswordToggle>\n      </InputField>\n\n      <InputField\n        name=\"confirmPassword\"\n        type={passwordInputType}\n        placeholder=\"Confirm Password\"\n        autocomplete=\"new-password\"\n      />\n    </>\n  );\n};\n\nexport default RegStepOne;\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nexport const List = styled.ul`\n  position: absolute;\n  top: 269px;\n  left: 100px;\n/* list-style-type: none; */\n    max-height: 96px;\n    min-height: 20px;\n    overflow-y: scroll;\n  width: 420px;\n  /* list-style: none; */\n  background-color: ${theme.colors.cardBackground};\n  border: 2px solid #74c16a;\n  border-radius: 8px;\n  box-shadow: ${theme.boxShadow.notice};\n  z-index: 1;\n  ${theme.mq.mobileOnly} {\n    top: 187px;\n    left: 16px;\n    width: 250px;\n    max-width: 420px;\n    border: 1px solid ${theme.colors.borderColor};\n    box-shadow: ${theme.boxShadow.notice};\n    \n  }\n`;\n\nexport const ListItem = styled.li`\n  padding: 4px 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  color: ${theme.colors.secondaryText};\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(34,139,34,0.2);\n  }\n`;","import React, {useState, useEffect} from 'react';\nimport InputField from 'components/Ui-Kit/Input';\nimport PropTypes from 'prop-types';\nimport cities from '../../assets/files/uaCities.json';\nimport { List, ListItem } from './RegStepTwo.styled';\n\n\nconst RegStepTwo = ({value, setFieldValue}) => {\nconst [filteredCities, setFilteredCities] = useState([]);\n useEffect(() => {\n    const inputValue = value || '';\n    if (inputValue) {\n      const filtered = cities\n        .filter((city) => city.city.toLowerCase().startsWith(value.toLowerCase()))\n        .map(({ city, admin_name }) => `${city}, ${admin_name}`);\n      \n      setFilteredCities(filtered);\n    } else {\n      setFilteredCities([]);\n    }\n  }, [value]);\n\n  const handleCityClick = (city) => {\n    setFieldValue('city', city);\n    setFilteredCities([]);\n  };\n\n  const onClickHandle = (e) => {\n   console.log(e.target.innerText)\n }\n  return (\n    <>\n      <InputField name=\"name\" type=\"name\" placeholder=\"Name\" />\n      \n      <InputField name=\"city\" type=\"city\" placeholder=\"City, Region\" />\n      {filteredCities.length > 0 && (\n        <List>\n          {filteredCities.map((city, index) => (\n            <ListItem onClick={() => handleCityClick(city) } key={index}>{city}</ListItem>\n          ))}\n        </List>\n        )}\n       \n      <InputField name=\"phone\" type=\"phone\" placeholder=\"Phone +380123456789\" />\n    </>\n  );\n};\n\nRegStepTwo.propTypes = {\n  value: PropTypes.string,\n  setFieldValue: PropTypes.func,\n};\n\nexport default RegStepTwo;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useSignupUserMutation } from 'redux/api/userApi';\n\nimport { Formik } from 'formik';\n\nimport {\n  initialValues,\n  validationSchemaStepOne,\n  validationSchemaStepTwo,\n} from './Validation';\nimport RegStepOne from './RegStepOne';\nimport RegStepTwo from './RegStepTwo';\nimport {\n  ModalContent,\n  ModalWrapper,\n  FormWrapper,\n  ButtonWrapper,\n  FormTitle,\n  Paragraph,\n  LoginLink,\n  ErrorMessage,\n} from './RegisterForm.styled';\nimport Button from 'components/Ui-Kit/Button';\n\nconst RegistrationForm = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [signupUser, { isError, error }] = useSignupUserMutation();\n  const navigate = useNavigate();\n  const { isAuth } = useSelector(state => state.user);\n\n  const handleNextClick = () => {\n    setCurrentStep(currentStep + 1);\n  };\n\n  const handleBackClick = () => {\n    setCurrentStep(currentStep - 1);\n  };\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n\n    if (currentStep < 2) {\n      handleNextClick();\n    } else {\n      const credentials = {\n        name: values.name,\n        city: values.city,\n        phone: values.phone,\n        email: values.email,\n        password: values.password,\n      };\n\n      signupUser(credentials);\n    }\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      console.log('Congratulations! You are successfully signed up!');\n      navigate('/user');\n    }\n  });\n\n  return (\n    <ModalWrapper>\n      <ModalContent>\n        <FormTitle>Registration</FormTitle>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={\n            currentStep === 1\n              ? validationSchemaStepOne\n              : validationSchemaStepTwo\n          }\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting, values, setFieldValue }) => {\n            return (\n              <FormWrapper>\n                {currentStep === 1 && <RegStepOne />}\n                {currentStep === 2 && (\n                  <RegStepTwo\n                    value={values.city}\n                    setFieldValue={setFieldValue}\n                  />\n                )}\n                <ButtonWrapper>\n                  <Button name=\"filled\" type=\"submit\" disabled={isSubmitting}>\n                    {currentStep < 2 ? 'Next' : 'Register'}\n                  </Button>\n                  {currentStep > 1 && (\n                    <Button name=\"transparent\" onClick={handleBackClick}>\n                      Back\n                    </Button>\n                  )}\n                </ButtonWrapper>\n              </FormWrapper>\n            );\n          }}\n        </Formik>\n        <Paragraph>\n          Already have an account? <LoginLink to=\"/login\">Login</LoginLink>\n        </Paragraph>\n        {isError && <ErrorMessage>{error.data.message}</ErrorMessage>}\n      </ModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport RegistrationForm from 'components/RegisterForm/RegisterForm';\nimport AuthPageContainer from 'components/AuthPageContainer';\nimport Section from 'components/Section';\n\nconst Register = () => {\n  return (\n    <AuthPageContainer>\n      <Section>\n        <RegistrationForm />\n      </Section>\n    </AuthPageContainer>\n  );\n};\n\nexport default Register;\n"],"names":["PasswordToggle","styled","theme","ModalWrapper","ModalContent","FormTitle","FormWrapper","Form","ButtonWrapper","Paragraph","LoginLink","NavLink","ErrorMessage","ButtonStyled","motion","width","colors","accent","name","selected","mainText","lightText","transitionTiming","hover","secondaryHover","breakpoints","type","onClick","children","whileTap","scale","label","placeholder","id","span","autocomplete","as","htmlFor","autoComplete","component","FieldStyle","Field","Label","ErrorStyle","StyledSpan","FieldWrapper","initialValues","city","phone","email","password","confirmPassword","validationSchemaStepOne","Yup","shape","matches","required","min","max","oneOf","validationSchemaStepTwo","useState","showPassword","setShowPassword","passwordInputType","Input","List","ListItem","value","setFieldValue","filteredCities","setFilteredCities","useEffect","filtered","cities","toLowerCase","startsWith","map","admin_name","length","index","handleCityClick","currentStep","setCurrentStep","useSignupUserMutation","signupUser","isError","error","navigate","useNavigate","isAuth","useSelector","state","user","handleBackClick","console","log","validationSchema","onSubmit","values","setSubmitting","credentials","isSubmitting","Button","disabled","to","data","message","AuthPageContainer","Section"],"sourceRoot":""}