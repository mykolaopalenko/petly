{"version":3,"file":"static/js/587.390575be.chunk.js","mappings":"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","sources":["components/RegisterForm/RegStepOne.styled.js","components/RegisterForm/RegisterForm.styled.js","components/Ui-Kit/Button/Button.styled.js","components/Ui-Kit/Button/Button.jsx","components/Ui-Kit/Input/Input.styled.js","components/Ui-Kit/Input/Input.jsx","components/RegisterForm/Validation.jsx","components/RegisterForm/RegStepOne.jsx","components/RegisterForm/RegStepTwo.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n  padding: 0;\n`;\n\nexport const PasswordToggle = styled.button`\n  position: absolute;\n  right: 10px;\n  bottom: 20px;\n  transform: translateY(-15%);\n  border: none;\n  background: none;\n  font-size: 20px;\n  color: ${theme.colors.secondaryText};\n  cursor: pointer;\n  z-index: 100;\n`;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\n\nexport const ModalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 85%;\n`;\n\nexport const ModalContent = styled.div`\n  // position: relative;\n  overflow-y: auto;\n  background-color: ${theme.colors.cardBackground};\n  border-radius: 40px;\n  padding: 60px 80px 40px 80px;\n  width: 618px;\n\n  box-shadow: ${theme.boxShadow.second};\n  ${theme.mq.desktop} {\n    margin-top: 0;\n  }\n  ${theme.mq.tabletOnly} {\n    margin-top: 110px;\n  }\n  ${theme.mq.mobileOnly} {\n    background-color: transparent;\n    box-shadow: none;\n    width: 100%;\n    padding: 0 0 20px 0;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.medium};\n  font-size: 36px;\n  line-height: 49px;\n  text-align: center;\n  align-items: center;\n  color: ${theme.colors.mainText};\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.l};\n    line-height: 32px;\n  }\n`;\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  // gap: 30px;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 100%;\n`;\n\nexport const Paragraph = styled.p`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.normal};\n  font-size: ${theme.fontSizes.xxxs};\n  line-height: 16px;\n  align-items: center;\n  text-align: center;\n  color: ${theme.colors.secondaryText};\n`;\n\nexport const LoginLink = styled(NavLink)`\n  color: #3091eb;\n  text-decoration: none;\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  color: red;\n  font-size: 14px;\n  text-align: center;\n  width: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  top: 120px;\n  ${theme.mq.mobileOnly} {\n    top: 50px;\n    font-size: 12px;\n  }\n`;\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const ButtonStyled = styled(motion.button)`\n  display: block;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  cursor: pointer;\n  width: ${({ theme, width }) => (width ? width : 'auto')};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  border-radius: 40px;\n  border: 2px solid ${({ theme }) => theme.colors.accent};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* background-color: ${({ theme, name, selected }) =>\n    name === 'filled' || selected ? theme.colors.accent : 'transparent'}; */\n\n  background-color: ${({ theme, name, selected }) => {\n    switch (name) {\n      case 'filter':\n        return selected ? theme.colors.accent : 'transparent';\n      case 'filled':\n        return theme.colors.accent;\n      case 'contacts':\n        return theme.colors.accent;\n      default:\n        return 'transparent';\n    }\n  }};\n  color: ${({ theme, name, selected }) => {\n    switch (name) {\n      case 'transparent':\n        return theme.colors.mainText;\n      case 'filled':\n        return theme.colors.lightText;\n      case 'learnMore':\n        return theme.colors.accent;\n      case 'filter':\n        return selected ? theme.colors.lightText : theme.colors.mainText;\n      case 'addToFavorite':\n        return theme.colors.mainText;\n      default:\n        return theme.colors.lightText;\n    }\n  }};\n\n  transition: color ${({ theme }) => theme.transitionTiming},\n    background-color ${({ theme }) => theme.transitionTiming},\n    border-color ${({ theme }) => theme.transitionTiming};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme, name }) =>\n      name === 'learnMore' && 'contacts' ? 'transparent' : theme.colors.hover};\n    border-color: ${({ theme, name }) =>\n      name === 'learnMore' ? theme.colors.secondaryHover : theme.colors.hover};\n    color: ${({ theme, name }) =>\n      name === 'learnMore'\n        ? theme.colors.secondaryHover\n        : theme.colors.lightText};\n  }\n`;\n","import React from 'react';\nimport { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\n// name: 'transparent' | 'filled' | 'learnMore'\nconst Button = ({\n  type = 'button',\n  onClick,\n  children,\n  name,\n  width,\n  selected,\n}) => {\n  return (\n    <ButtonStyled\n      name={name}\n      type={type}\n      onClick={onClick}\n      width={width}\n      selected={selected}\n      whileTap={{ scale: 0.95 }}\n    >\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  width: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  selected: PropTypes.bool,\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FieldStyle = styled(Field)`\n  position: relative;\n  width: 100%;\n  border-radius: 40px;\n\n  cursor: pointer;\n\n  margin-bottom: 16px;\n\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  background-color: ${theme.colors.mainBackground};\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.primaryText};\n\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxs};\n    padding: 12px 14px;\n  }\n`;\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 12px;\n  ${theme.mq.mobileOnly} {\n    margin-bottom: 8px;\n  }\n  // position: relative;\n`;\nexport const ErrorStyle = styled(ErrorMessage)`\n  position: absolute;\n  bottom: 0px;\n  left: 30px;\n  font-size: ${theme.fontSizes.xxxs};\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  color: ${theme.colors.accent};\n`;\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport {\n  ErrorStyle,\n  FieldStyle,\n  StyledSpan,\n  Label,\n  FieldWrapper,\n} from './Input.styled';\n\nconst InputField = ({\n  label,\n  name,\n  type,\n  placeholder,\n  id,\n  span,\n  autocomplete,\n  children,\n}) => {\n  return (\n    <FieldWrapper>\n      <Label htmlFor={name}>\n        {label}\n        <StyledSpan>{span}</StyledSpan>\n      </Label>\n      <FieldStyle\n        type={type}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        autoComplete={autocomplete}\n      />\n      <ErrorStyle name={name} component=\"div\" />\n      {children}\n    </FieldWrapper>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  span: PropTypes.string,\n  autocomplete: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\n// Formik initials \nexport const initialValues = {\n  name: '',\n  city: '',\n  phone: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\n\n// Yup Validation\nexport const validationSchemaStepOne = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address')\n    .matches(\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n      'Please enter a valid email address, example: \"mail@mail.com\"'\n    )\n    .required('Email is required')\n    .min(10, 'Email should be at least 10 characters long')\n    .max(63, 'Email should be up to 63 characters long'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{7,}$/,\n      '7 characters, 1 uppercase, 1 lowercase, 1 number'\n    )\n    .min(7, 'Password should be at least 7 characters long')\n    .max(32, 'Password should be up to 32 characters long')\n    .required('Password is required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Please confirm your password')\n});\n\n\nexport const validationSchemaStepTwo = Yup.object().shape({\n  name: Yup.string().min(4, 'Name should have at least 4 characters').required('Name is required'),\n  city: Yup.string()\n    .matches(\n      /^\\s*(?:\\w+\\s*,\\s*){1,}(?:\\w+\\s*)$/,\n      'Should be at least 2 words separated by comma'\n     )\n    .min(3, 'City should have at least 3 characters')\n    .required('City is required'),\n  phone: Yup.string()\n    .matches(\n      /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/,\n      'Number should begin with +380 and contain 13 digits'\n    )\n    .min(13, 'Phone number should be 13 digits')\n    .max(13, 'Phone number should be 13 digits')\n    .required('Phone number is required'),\n});","import React, { useState } from 'react';\nimport InputField from 'components/Ui-Kit/Input';\nimport { PasswordToggle, PasswordWrapper } from './RegStepOne.styled';\nimport { RxEyeOpen, RxEyeClosed } from 'react-icons/rx';\n\nconst RegStepOne = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const passwordInputType = showPassword ? 'text' : 'password';\n\n  return (\n    <>\n      <InputField\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Email\"\n        autocomplete=\"email\"\n      />\n\n      <InputField\n        name=\"password\"\n        type={passwordInputType}\n        placeholder=\"Password\"\n        autocomplete=\"new-password\"\n      >\n        <PasswordToggle type=\"button\" onClick={toggleShowPassword}>\n          {showPassword ? <RxEyeOpen /> : <RxEyeClosed />}\n        </PasswordToggle>\n      </InputField>\n\n      <InputField\n        name=\"confirmPassword\"\n        type={passwordInputType}\n        placeholder=\"Confirm Password\"\n        autocomplete=\"new-password\"\n      />\n    </>\n  );\n};\n\nexport default RegStepOne;\n","import React from 'react';\nimport InputField from 'components/Ui-Kit/Input';\n\nconst RegStepTwo = () => {\n  return (\n    <>\n      <InputField name=\"name\" type=\"name\" placeholder=\"Name\" />\n      <InputField name=\"city\" type=\"city\" placeholder=\"City, Region\" />\n      <InputField name=\"phone\" type=\"phone\" placeholder=\"Phone +380123456789\" />\n    </>\n  );\n};\n\nexport default RegStepTwo;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useSignupUserMutation } from 'redux/api/userApi';\n\nimport { Formik } from 'formik';\n\nimport {\n  initialValues,\n  validationSchemaStepOne,\n  validationSchemaStepTwo,\n} from './Validation';\nimport RegStepOne from './RegStepOne';\nimport RegStepTwo from './RegStepTwo';\nimport {\n  ModalContent,\n  ModalWrapper,\n  FormWrapper,\n  ButtonWrapper,\n  FormTitle,\n  Paragraph,\n  LoginLink,\n} from './RegisterForm.styled';\nimport Button from 'components/Ui-Kit/Button';\n\nconst RegistrationForm = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [signupUser, { isError }] = useSignupUserMutation();\n  const navigate = useNavigate();\n  const { isAuth } = useSelector(state => state.user);\n\n  const handleNextClick = () => {\n    setCurrentStep(currentStep + 1);\n  };\n\n  const handleBackClick = () => {\n    setCurrentStep(currentStep - 1);\n  };\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n\n    if (currentStep < 2) {\n      handleNextClick();\n    } else {\n      const credentials = {\n        name: values.name,\n        city: values.city,\n        phone: values.phone,\n        email: values.email,\n        password: values.password,\n      };\n\n      signupUser(credentials);\n    }\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      console.log('Congratulations! You are successfully signed up!');\n      navigate('/notices');\n    }\n  });\n\n  return (\n    <ModalWrapper>\n      <ModalContent>\n        <FormTitle>Registration</FormTitle>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={\n            currentStep === 1\n              ? validationSchemaStepOne\n              : validationSchemaStepTwo\n          }\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => {\n            return (\n              <FormWrapper>\n                {currentStep === 1 && <RegStepOne />}\n                {currentStep === 2 && <RegStepTwo />}\n                <ButtonWrapper>\n                  <Button name=\"filled\" type=\"submit\" disabled={isSubmitting}>\n                    {currentStep < 2 ? 'Next' : 'Register'}\n                  </Button>\n                  {currentStep > 1 && (\n                    <Button name=\"transparent\" onClick={handleBackClick}>\n                      Back\n                    </Button>\n                  )}\n                </ButtonWrapper>\n              </FormWrapper>\n            );\n          }}\n        </Formik>\n        <Paragraph>\n          Already have an account? <LoginLink to=\"/login\">Login</LoginLink>\n        </Paragraph>\n      </ModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport RegistrationForm from 'components/RegisterForm/RegisterForm';\nimport AuthPageContainer from 'components/AuthPageContainer';\nimport Section from 'components/Section';\n\nconst Register = () => {\n  return (\n    <AuthPageContainer>\n      <Section>\n        <RegistrationForm />\n      </Section>\n    </AuthPageContainer>\n  );\n};\n\nexport default Register;\n"],"names":["PasswordToggle","styled","theme","ModalWrapper","ModalContent","FormTitle","FormWrapper","Form","ButtonWrapper","Paragraph","LoginLink","NavLink","ErrorMessage","ButtonStyled","motion","width","colors","accent","name","selected","mainText","lightText","transitionTiming","hover","secondaryHover","type","onClick","children","whileTap","scale","FieldStyle","Field","Label","ErrorStyle","StyledSpan","FieldWrapper","label","placeholder","id","span","autocomplete","htmlFor","autoComplete","component","initialValues","city","phone","email","password","confirmPassword","validationSchemaStepOne","Yup","shape","matches","required","min","max","oneOf","validationSchemaStepTwo","useState","showPassword","setShowPassword","passwordInputType","Input","currentStep","setCurrentStep","useSignupUserMutation","signupUser","navigate","isError","useNavigate","isAuth","useSelector","state","user","handleBackClick","useEffect","console","log","validationSchema","onSubmit","values","setSubmitting","credentials","isSubmitting","Button","disabled","to","AuthPageContainer","Section"],"sourceRoot":""}