{"version":3,"file":"static/js/605.bcfa1950.chunk.js","mappings":"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","sources":["components/Auth/RegisterForm/RegStepOne.styled.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Ui-Kit/Button/Button.styled.js","components/Ui-Kit/Button/Button.jsx","components/Ui-Kit/Input/Input.jsx","components/Ui-Kit/Input/Input.styled.js","components/Auth/LoginForm/LoginInputs.jsx","components/Auth/LoginForm/LoginValidation.jsx","components/Auth/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n  padding: 0;\n`;\n\nexport const PasswordToggle = styled.button`\n  position: absolute;\n  right: 10px;\n  bottom: 8px;\n  transform: translateY(-15%);\n  border: none;\n  background: none;\n  font-size: 20px;\n  color: ${theme.colors.secondaryText};\n  cursor: pointer;\n  z-index: 100;\n`;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\n\nexport const ModalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 85%;\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  overflow-y: auto;\n  background-color: ${theme.colors.cardBackground};\n  border-radius: 40px;\n  padding: 60px 80px 40px 80px;\n  width: 618px;\n\n  box-shadow: ${theme.boxShadow.second};\n  ${theme.mq.desktop} {\n    margin-top: 0;\n  }\n  ${theme.mq.tabletOnly} {\n    margin-top: 110px;\n  }\n  ${theme.mq.mobileOnly} {\n    background-color: transparent;\n    box-shadow: none;\n    width: 100%;\n    padding: 0 0 20px 0;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.medium};\n  font-size: 36px;\n  line-height: 49px;\n  text-align: center;\n  align-items: center;\n  color: ${theme.colors.mainText};\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.l};\n    line-height: 32px;\n  }\n`;\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  /* margin-bottom: 40px;  */\n  /* gap: 30px; */\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 50px;\n  margin-top: 40px;\n  width: 100%;\n`;\n\nexport const Paragraph = styled.p`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.normal};\n  font-size: ${theme.fontSizes.xxxs};\n  line-height: 16px;\n  align-items: center;\n  text-align: center;\n  color: ${theme.colors.secondaryText};\n`;\n\nexport const LoginLink = styled(NavLink)`\n  color: #3091eb;\n  text-decoration: none;\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  color: red;\n  font-size: 14px;\n  text-align: center;\n  width: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  top: 120px;\n  ${theme.mq.mobileOnly} {\n    top: 50px;\n    font-size: 12px;\n  }\n`;\n\n\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { breakpoints } from 'constants/theme';\n\nexport const ButtonStyled = styled(motion.button)`\n  height: 40px;\n  display: block;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  cursor: pointer;\n  width: ${({ theme, width }) => (width ? width : 'auto')};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  border-radius: 40px;\n  border: 2px solid ${({ theme }) => theme.colors.accent};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${({ name }) => name === 'contacts' && '12px'};\n  /* background-color: ${({ theme, name, selected }) =>\n      name === 'filled' || selected ? theme.colors.accent : 'transparent'}; */\n\n  background-color: ${({ theme, name, selected }) => {\n      switch (name) {\n         case 'filter':\n            return selected ? theme.colors.accent : 'transparent';\n         case 'filled':\n            return theme.colors.accent;\n         case 'contacts':\n            return theme.colors.accent;\n         default:\n            return 'transparent';\n      }\n   }};\n  color: ${({ theme, name, selected }) => {\n      switch (name) {\n         case 'transparent':\n            return theme.colors.mainText;\n         case 'filled':\n            return theme.colors.lightText;\n         case 'learnMore':\n            return theme.colors.accent;\n         case 'filter':\n            return selected ? theme.colors.lightText : theme.colors.mainText;\n         case 'addToFavorite':\n            return theme.colors.mainText;\n         default:\n            return theme.colors.lightText;\n      }\n   }};\n\n  transition: color ${({ theme }) => theme.transitionTiming},\n    background-color ${({ theme }) => theme.transitionTiming},\n    border-color ${({ theme }) => theme.transitionTiming};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme, name }) =>\n      name === 'learnMore' && 'contacts' ? 'transparent' : theme.colors.hover};\n    border-color: ${({ theme, name }) =>\n      name === 'learnMore' ? theme.colors.secondaryHover : theme.colors.hover};\n    color: ${({ theme, name }) =>\n      name === 'learnMore'\n         ? theme.colors.secondaryHover\n         : theme.colors.lightText};\n  }\n\n\n    @media (min-width: ${breakpoints[1]}px) {\n      margin-left: ${({ name }) => name === 'contacts' && '12px'};\n      margin-bottom: ${({ name }) => name === 'contacts' && '0px'};\n   }\n`;\n","import React from 'react';\nimport { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\n// name: 'transparent' | 'filled' | 'learnMore'\nconst Button = ({\n  type = 'button',\n  onClick,\n  children,\n  name,\n  width,\n  selected,\n}) => {\n  return (\n    <ButtonStyled\n      name={name}\n      type={type}\n      onClick={onClick}\n      width={width}\n      selected={selected}\n      whileTap={{ scale: 0.95 }}\n    >\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  width: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  selected: PropTypes.bool,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ErrorStyle,\n  FieldStyle,\n  StyledSpan,\n  Label,\n  FieldWrapper,\n} from './Input.styled';\n\nconst InputField = ({\n  label,\n  name,\n  type,\n  placeholder,\n  id,\n  span,\n  autocomplete,\n  children,\n  as,\n}) => {\n  return (\n    <FieldWrapper>\n      <Label htmlFor={name}>\n        {label}\n        <StyledSpan>{span}</StyledSpan>\n      </Label>\n      <FieldStyle\n        type={type}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        autoComplete={autocomplete}\n        as={as}\n      />\n      <ErrorStyle name={name} component=\"div\" />\n      {children}\n    </FieldWrapper>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  span: PropTypes.string,\n  autocomplete: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { theme, breakpoints } from 'constants/theme';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FieldStyle = styled(Field)`\n  width: 100%;\n  border-radius: 40px;\n  cursor: pointer;\n  margin-bottom: 8px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  background-color: ${theme.colors.mainBackground};\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.primaryText};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxs};\n    padding: 12px 14px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 12px;\n  ${theme.mq.mobileOnly} {\n    margin-bottom: 8px;\n  }\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.s};\n  line-height: 1.44;\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.l};\n    line-height: 1.08;\n    margin-top: 12px;\n  } ;\n`;\n\nexport const ErrorStyle = styled(ErrorMessage)`\n  position: absolute;\n  left: 0;\n  bottom: -3px;\n  font-size: 8px;\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  color: ${theme.colors.accent};\n`;\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n","import React, { useState } from 'react';\nimport InputField from 'components/Ui-Kit/Input';\nimport {\n  PasswordToggle,\n  PasswordWrapper,\n} from 'components/Auth/RegisterForm/RegStepOne.styled';\nimport { RxEyeOpen, RxEyeClosed } from 'react-icons/rx';\n\nconst LoginInputs = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const passwordInputType = showPassword ? 'text' : 'password';\n  return (\n    <>\n      <InputField\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Email\"\n        autocomplete=\"email\"\n      />\n\n      <InputField\n        name=\"password\"\n        type={passwordInputType}\n        placeholder=\"Password\"\n        autocomplete=\"current-password\"\n      >\n        <PasswordToggle type=\"button\" onClick={toggleShowPassword}>\n          {showPassword ? <RxEyeOpen /> : <RxEyeClosed />}\n        </PasswordToggle>\n      </InputField>\n\n      {/* <PasswordToggle type=\"button\" onClick={toggleShowPassword}>\n        {showPassword ? <RxEyeOpen /> : <RxEyeClosed />}\n      </PasswordToggle> */}\n    </>\n  );\n};\n\nexport default LoginInputs;\n","import * as Yup from 'yup';\n\n// Values for Formik\n\nexport const loginInitialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\n// Yup validation\n\nexport const loginValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Email is required')\n    .email('Please enter a valid email address, example: \"mail@mail.com\"')\n    .matches(\n      /^([a-zA-Z][\\w+-]+(?:\\.\\w+)?)@([\\w-]+(?:\\.[a-zA-Z]{2,3})+)$/,\n      'Please enter a valid email address, example: \"mail@mail.com\"'\n    ),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{7,}$/,\n      '7 characters, 1 uppercase, 1 lowercase, 1 number'\n    )\n    .min(7, 'Password should be at least 7 characters long')\n    .max(32, 'Password should be up to 32 characters long')\n    .required('Password is required'),\n});\n","import React from 'react';\nimport { useEffect } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useLoginUserMutation } from 'redux/api/userApi';\n\nimport { Formik } from 'formik';\nimport LoginInputs from './LoginInputs';\nimport {\n  loginInitialValues as initialValues,\n  loginValidationSchema as validationSchema,\n} from './LoginValidation';\n// styles from RegisterForm\nimport {\n  ModalContent,\n  ModalWrapper,\n  FormWrapper,\n  ButtonWrapper,\n  FormTitle,\n  LoginLink,\n  Paragraph,\n  ErrorMessage,\n} from '../RegisterForm/RegisterForm.styled';\n\nimport Button from 'components/Ui-Kit/Button';\n\n// main function\n\nconst LoginForm = () => {\n  const [loginUser, { isError, error }] = useLoginUserMutation();\n  const navigate = useNavigate();\n  const { isAuth } = useSelector(state => state.user);\n\n  const handleSubmit = values => {\n    const credentials = {\n      email: values.email,\n      password: values.password,\n    };\n    loginUser(credentials);\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      console.log('Congratulations! You are successfully signed up!');\n      navigate('/user');\n    }\n  });\n\n  return (\n    <ModalWrapper>\n      <ModalContent>\n        <FormTitle>Login</FormTitle>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => {\n            return (\n              <FormWrapper>\n                <LoginInputs />\n                <ButtonWrapper>\n                  <Button name=\"filled\" type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                  </Button>\n                </ButtonWrapper>\n              </FormWrapper>\n            );\n          }}\n        </Formik>\n        <Paragraph>\n          Don&apos;t have an account?{' '}\n          <LoginLink to=\"/register\">Register</LoginLink>\n        </Paragraph>\n        {isError && <ErrorMessage>{error.data.message}</ErrorMessage>}\n      </ModalContent>\n    </ModalWrapper>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from 'components/Auth/LoginForm/LoginForm';\nimport AuthPageContainer from 'components/Auth/AuthPageContainer';\nimport Section from 'components/Section';\n\nconst Login = () => {\n  return (\n    <AuthPageContainer>\n      <Section>\n        <LoginForm />\n      </Section>\n    </AuthPageContainer>\n  );\n};\n\nexport default Login;\n"],"names":["PasswordToggle","styled","theme","ModalWrapper","ModalContent","FormTitle","FormWrapper","Form","ButtonWrapper","Paragraph","LoginLink","NavLink","ErrorMessage","ButtonStyled","motion","width","colors","accent","name","selected","mainText","lightText","transitionTiming","hover","secondaryHover","breakpoints","type","onClick","children","whileTap","scale","label","placeholder","id","span","autocomplete","as","htmlFor","autoComplete","component","FieldStyle","Field","Label","ErrorStyle","StyledSpan","FieldWrapper","useState","showPassword","setShowPassword","passwordInputType","Input","loginInitialValues","email","password","confirmPassword","loginValidationSchema","Yup","shape","required","matches","min","max","useLoginUserMutation","loginUser","isError","error","navigate","useNavigate","isAuth","useSelector","state","user","useEffect","console","log","initialValues","validationSchema","onSubmit","values","credentials","isSubmitting","Button","disabled","to","data","message","AuthPageContainer","Section"],"sourceRoot":""}