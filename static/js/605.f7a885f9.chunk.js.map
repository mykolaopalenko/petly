{"version":3,"file":"static/js/605.f7a885f9.chunk.js","mappings":"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","sources":["components/Auth/RegisterForm/RegStepOne.styled.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Box/Box.js","components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Ui-Kit/Button/Button.styled.js","components/Ui-Kit/Button/Button.jsx","components/Ui-Kit/Input/Input.jsx","components/Ui-Kit/Input/Input.styled.js","constants/animation.js","components/Auth/LoginForm/LoginInputs.jsx","components/Auth/LoginForm/LoginValidation.jsx","components/Auth/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n  padding: 0;\n`;\n\nexport const PasswordToggle = styled.button`\n  position: absolute;\n  right: 10px;\n  bottom: 8px;\n  transform: translateY(-15%);\n  border: none;\n  background: none;\n  font-size: 20px;\n  color: ${theme.colors.secondaryText};\n  cursor: pointer;\n  z-index: 10;\n`;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\n\nexport const ModalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 85%;\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  overflow-y: auto;\n  background-color: ${theme.colors.cardBackground};\n  border-radius: 40px;\n  padding: 60px 80px 40px 80px;\n  width: 618px;\n\n  box-shadow: ${theme.boxShadow.second};\n  ${theme.mq.desktop} {\n    margin-top: 0;\n  }\n  ${theme.mq.tabletOnly} {\n    margin-top: 110px;\n  }\n  ${theme.mq.mobileOnly} {\n    background-color: transparent;\n    box-shadow: none;\n    width: 100%;\n    padding: 0 0 20px 0;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.medium};\n  font-size: 36px;\n  line-height: 49px;\n  text-align: center;\n  align-items: center;\n  color: ${theme.colors.mainText};\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.l};\n    line-height: 32px;\n  }\n`;\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  /* margin-bottom: 40px;  */\n  /* gap: 30px; */\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 50px;\n  margin-top: 40px;\n  width: 100%;\n`;\n\nexport const Paragraph = styled.p`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.normal};\n  font-size: ${theme.fontSizes.xxxs};\n  line-height: 16px;\n  align-items: center;\n  text-align: center;\n  color: ${theme.colors.secondaryText};\n`;\n\nexport const LoginLink = styled(NavLink)`\n  color: #3091eb;\n  text-decoration: none;\n`;\n\nexport const ErrorMessage = styled.div`\n  position: absolute;\n  color: red;\n  font-size: 14px;\n  text-align: center;\n  width: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  top: 120px;\n  ${theme.mq.mobileOnly} {\n    top: 50px;\n    font-size: 12px;\n  }\n`;\n","import styled from 'styled-components';\nimport {\n  typography,\n  color,\n  space,\n  layout,\n  shadow,\n  border,\n  flexbox,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  typography,\n  color,\n  space,\n  layout,\n  shadow,\n  border,\n  flexbox,\n  grid\n);\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 480px;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  ${theme.mq.tablet} {\n    width: ${({ theme }) => theme.breakpoints[1]};\n    max-width: 100%;\n    padding-right: ${({ theme }) => theme.space[6]};\n    padding-left: ${({ theme }) => theme.space[6]};\n  }\n\n  ${theme.mq.desktop} {\n    width: ${({ theme }) => theme.breakpoints[2]};\n    max-width: 100%;\n    padding-right: ${({ theme }) => theme.space[3]};\n    padding-left: ${({ theme }) => theme.space[3]};\n  }\n`;\n","import { Box } from 'components/Box/Box';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContainerStyled } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerStyled>{children}</ContainerStyled>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { theme } from 'constants/theme';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const SectionStyled = styled(motion.section)`\n  margin: 0 auto;\n  padding-top: 42px;\n  padding-bottom: 100px;\n\n  ${theme.mq.tablet} {\n    padding-top: 90px;\n  }\n  ${theme.mq.desktop} {\n    padding-top: 60px;\n    padding-bottom: 200px;\n  }\n`;\n","import React from 'react';\nimport Container from 'components/Container';\nimport PropTypes from 'prop-types';\nimport { SectionStyled } from './Section.styled';\nimport { pageAnimation } from 'constants/animation';\n\nconst Section = ({ children }) => {\n  return (\n    <SectionStyled {...pageAnimation} transition={{ duration: 0.3 }}>\n      <Container>{children}</Container>\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { breakpoints } from 'constants/theme';\n\nexport const ButtonStyled = styled(motion.button)`\n  height: 40px;\n  display: block;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  cursor: pointer;\n  width: ${({ theme, width }) => (width ? width : 'auto')};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  border-radius: 40px;\n  border: 2px solid ${({ theme }) => theme.colors.accent};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${({ name }) => name === 'contacts' && '12px'};\n  /* background-color: ${({ theme, name, selected }) =>\n    name === 'filled' || selected ? theme.colors.accent : 'transparent'}; */\n\n  background-color: ${({ theme, name, selected }) => {\n    switch (name) {\n      case 'filter':\n        return selected ? theme.colors.accent : 'transparent';\n      case 'filled':\n        return theme.colors.accent;\n      case 'contacts':\n        return theme.colors.accent;\n      default:\n        return 'transparent';\n    }\n  }};\n  color: ${({ theme, name, selected }) => {\n    switch (name) {\n      case 'transparent':\n        return theme.colors.mainText;\n      case 'filled':\n        return theme.colors.lightText;\n      case 'learnMore':\n        return theme.colors.accent;\n      case 'filter':\n        return selected ? theme.colors.lightText : theme.colors.mainText;\n      case 'addToFavorite':\n        return theme.colors.mainText;\n      default:\n        return theme.colors.lightText;\n    }\n  }};\n\n  transition: color ${({ theme }) => theme.transitionTiming},\n    background-color ${({ theme }) => theme.transitionTiming},\n    border-color ${({ theme }) => theme.transitionTiming};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme, name }) =>\n      name === 'contacts' ? 'transparent' : theme.colors.hover};\n    color: ${({ theme, name }) =>\n      name === 'learnMore' || 'filter'\n        ? theme.colors.lightText\n        : theme.colors.secondaryHover};\n  }\n\n  @media (min-width: ${breakpoints[1]}px) {\n    margin-left: ${({ name }) => name === 'contacts' && '12px'};\n    margin-bottom: ${({ name }) => name === 'contacts' && '0px'};\n  }\n`;\n","import React from 'react';\nimport { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\n// name: 'transparent' | 'filled' | 'learnMore'\nconst Button = ({\n  type = 'button',\n  onClick,\n  children,\n  name,\n  width,\n  selected,\n}) => {\n  return (\n    <ButtonStyled\n      name={name}\n      type={type}\n      onClick={onClick}\n      width={width}\n      selected={selected}\n      whileTap={{ scale: 0.95 }}\n    >\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  width: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  selected: PropTypes.bool,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ErrorStyle,\n  FieldStyle,\n  StyledSpan,\n  Label,\n  FieldWrapper,\n} from './Input.styled';\n\nconst InputField = ({\n  label,\n  name,\n  type,\n  placeholder,\n  id,\n  span,\n  autocomplete,\n  children,\n  as,\n}) => {\n  return (\n    <FieldWrapper>\n      <Label htmlFor={name}>\n        {label}\n        <StyledSpan>{span}</StyledSpan>\n      </Label>\n      <FieldStyle\n        type={type}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        autoComplete={autocomplete}\n        as={as}\n      />\n      <ErrorStyle name={name} component=\"div\" />\n      {children}\n    </FieldWrapper>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  span: PropTypes.string,\n  autocomplete: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { theme, breakpoints } from 'constants/theme';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FieldStyle = styled(Field)`\n  width: 100%;\n  border-radius: 40px;\n  cursor: pointer;\n  margin-bottom: 8px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  background-color: ${theme.colors.mainBackground};\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.primaryText};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxs};\n    padding: 12px 14px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 12px;\n  ${theme.mq.mobileOnly} {\n    margin-bottom: 8px;\n  }\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.s};\n  line-height: 1.44;\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.l};\n    line-height: 1.08;\n    margin-top: 12px;\n  } ;\n`;\n\nexport const ErrorStyle = styled(ErrorMessage)`\n  position: absolute;\n  left: 0;\n  bottom: -3px;\n  font-size: 8px;\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  color: ${theme.colors.accent};\n`;\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n","const pageAnimationType = {\n  hidden: { opacity: 0 },\n  show: { opacity: 1 },\n};\n\nexport const pageAnimation = {\n  variants: pageAnimationType,\n  initial: 'hidden',\n  animate: 'show',\n  exit: 'hidden',\n};\n\nconst mobileAnimationType = {\n  hidden: { opacity: 0, translateX: '-100px' },\n  show: { opacity: 1, translateX: 0 },\n};\n\nexport const mobileMenuAnimation = {\n  variants: mobileAnimationType,\n  initial: 'hidden',\n  animate: 'show',\n  exit: 'hidden',\n};\n\nconst popUpAnimationType = {\n  hidden: { opacity: 0, scale: 0.5 },\n  show: { opacity: 1, scale: 1 },\n};\n\nexport const popUpMenuAnimation = {\n  variants: popUpAnimationType,\n  initial: 'hidden',\n  animate: 'show',\n  exit: 'hidden',\n};\n","import React, { useState } from 'react';\nimport InputField from 'components/Ui-Kit/Input';\nimport {\n  PasswordToggle,\n  PasswordWrapper,\n} from 'components/Auth/RegisterForm/RegStepOne.styled';\nimport { RxEyeOpen, RxEyeClosed } from 'react-icons/rx';\n\nconst LoginInputs = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const passwordInputType = showPassword ? 'text' : 'password';\n  return (\n    <>\n      <InputField\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Email\"\n        autocomplete=\"email\"\n      />\n\n      <InputField\n        name=\"password\"\n        type={passwordInputType}\n        placeholder=\"Password\"\n        autocomplete=\"current-password\"\n      >\n        <PasswordToggle type=\"button\" onClick={toggleShowPassword}>\n          {showPassword ? <RxEyeOpen /> : <RxEyeClosed />}\n        </PasswordToggle>\n      </InputField>\n    </>\n  );\n};\n\nexport default LoginInputs;\n","import * as Yup from 'yup';\n\n// Values for Formik\n\nexport const loginInitialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\n// Yup validation\n\nexport const loginValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Please enter a valid email address, example: \"mail@mail.com\"')\n    .matches(\n      /^(?=.{1,63}$)(?=.{2,}@)[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n      'Please enter a valid email address, example: \"mail@mail.com\"'\n    )\n    .required('Email is required')\n    .min(12, 'Email should be at least 12 characters long')\n    .max(63, 'Email should be up to 63 characters long'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{7,}$/,\n      '7 characters, 1 uppercase, 1 lowercase, 1 number'\n    )\n    .min(7, 'Password should be at least 7 characters long')\n    .max(32, 'Password should be up to 32 characters long')\n    .required('Password is required'),\n});\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useLoginUserMutation } from 'redux/api/userApi';\nimport { Formik } from 'formik';\nimport LoginInputs from './LoginInputs';\nimport {\n  loginInitialValues as initialValues,\n  loginValidationSchema as validationSchema,\n} from './LoginValidation';\n// styles from RegisterForm\nimport {\n  ModalContent,\n  ModalWrapper,\n  FormWrapper,\n  ButtonWrapper,\n  FormTitle,\n  LoginLink,\n  Paragraph,\n  ErrorMessage,\n} from '../RegisterForm/RegisterForm.styled';\nimport Button from 'components/Ui-Kit/Button';\nimport Loader from 'components/Loader';\n\n// main function\n\nconst LoginForm = () => {\n  const [loginUser, { isLoading, isError, error }] = useLoginUserMutation();\n\n  const handleSubmit = values => {\n    const credentials = {\n      email: values.email,\n      password: values.password,\n    };\n    loginUser(credentials);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ModalWrapper>\n        <ModalContent>\n          <FormTitle>Login</FormTitle>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n          >\n            {({ isSubmitting }) => {\n              return (\n                <FormWrapper>\n                  <LoginInputs />\n                  <ButtonWrapper>\n                    <Button name=\"filled\" type=\"submit\" disabled={isSubmitting}>\n                      Submit\n                    </Button>\n                  </ButtonWrapper>\n                </FormWrapper>\n              );\n            }}\n          </Formik>\n          <Paragraph>\n            Don&apos;t have an account?{' '}\n            <LoginLink to=\"/register\">Register</LoginLink>\n          </Paragraph>\n          {isError && <ErrorMessage>{error.data.message}</ErrorMessage>}\n        </ModalContent>\n      </ModalWrapper>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from 'components/Auth/LoginForm/LoginForm';\nimport AuthPageContainer from 'components/Auth/AuthPageContainer';\nimport Section from 'components/Section';\n\nconst Login = () => {\n  return (\n    <AuthPageContainer>\n      <Section>\n        <LoginForm />\n      </Section>\n    </AuthPageContainer>\n  );\n};\n\nexport default Login;\n"],"names":["PasswordToggle","styled","theme","ModalWrapper","ModalContent","FormTitle","FormWrapper","Form","ButtonWrapper","Paragraph","LoginLink","NavLink","ErrorMessage","Box","typography","color","space","layout","shadow","border","flexbox","grid","ContainerStyled","breakpoints","children","SectionStyled","motion","pageAnimation","transition","duration","Container","ButtonStyled","width","colors","accent","name","selected","mainText","lightText","transitionTiming","hover","type","onClick","whileTap","scale","label","placeholder","id","span","autocomplete","as","htmlFor","autoComplete","component","FieldStyle","Field","Label","ErrorStyle","StyledSpan","FieldWrapper","variants","hidden","opacity","show","initial","animate","exit","mobileMenuAnimation","translateX","popUpMenuAnimation","useState","showPassword","setShowPassword","passwordInputType","Input","loginInitialValues","email","password","confirmPassword","loginValidationSchema","Yup","shape","matches","required","min","max","useLoginUserMutation","loginUser","isLoading","isError","error","Loader","initialValues","validationSchema","onSubmit","values","credentials","isSubmitting","Button","disabled","to","data","message","AuthPageContainer","Section"],"sourceRoot":""}