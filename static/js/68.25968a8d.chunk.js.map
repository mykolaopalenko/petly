{"version":3,"file":"static/js/68.25968a8d.chunk.js","mappings":"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","sources":["components/UserPetsList/UserPetsList.styled.js","components/UserAddPetForm/UserAddPetForm.styled.js","components/UserAddPetForm/PartFirst.jsx","components/UserAddPetForm/PartSecond.jsx","components/UserUploadImg/UserUploadImg.styled.js","components/UserUploadImg/UserUploadImg.jsx","components/UserAddPetForm/Validation.jsx","components/UserAddPetForm/UserAddPetForm.jsx","components/UserPetsList/UserPetsListItem/UserPetsListItem.styled.js","components/UserPetsList/UserPetsListItem/UserPetsListItem.jsx","components/UserPetsList/UserPetsList.jsx","pages/User/User.styled.js","components/Ui-Kit/UserInput/UserInput.styled.js","components/Ui-Kit/UserInput/UserInput.jsx","components/Ui-Kit/UserupdateButton/UserupdateButton.styled.js","components/Ui-Kit/UserupdateButton/UserUpdateButton.js","components/UserData/UserField.styled.js","components/UserData/UserPhone/validation.js","components/UserData/UserPhone/UserPhone.jsx","components/UserData/UserBirthday/UserBirthday.styled.js","components/UserData/UserBirthday/validation.js","components/UserData/UserBirthday/UserBirthday.jsx","components/UserData/UserData.styled.js","components/UserData/UserPhoto/UserPhoto.styled.js","components/UserData/UserPhoto/validation.js","components/UserData/UserPhoto/UserPhoto.jsx","components/UserData/UserName/validation.js","components/UserData/UserName/UserName.jsx","components/UserData/UserEmail/validation.js","components/UserData/UserEmail/UserEmail.jsx","components/UserData/UserCity/validation.js","components/UserData/UserCity/UserCity.jsx","components/UserData/UserData.jsx","pages/User/User.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme, breakpoints } from '../../constants/theme';\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  box-sizing: border-box;\n  margin-right: auto;\n  margin-left: auto;\n  @media (min-width: ${breakpoints[1]}px) {\n    max-width: ${breakpoints[1]}px;\n  }\n  @media (min-width: ${breakpoints[2]}px) {\n    max-width: 820px;\n    margin-top: 0px;\n    margin-left: 32px;\n    padding: 0 0 0 0;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  margin-right: auto;\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.m};\n  line-height: 1.35;\n  color: ${theme.colors.mainText};\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.xl};\n  }\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const iconStyle = {\n  height: '20px',\n  width: '20px',\n  fill: theme.colors.lightText,\n};\n","import styled from \"styled-components\";\nimport { Field, Form, ErrorMessage } from \"formik\";\nimport { theme, breakpoints } from \"constants/theme\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 280px;\n    margin: 40px 0 40px 0;\n    @media (min-width: ${breakpoints[1]}px) {\n       width: 610px;\n   }\n`;\n\nexport const Title = styled.h2`\n    font-family: ${theme.fontFamily.manrope};\n    font-style: normal;\n    font-weight: ${theme.fontWeight.medium};\n    font-size: ${theme.fontSizes.l};\n    line-height: 1.37;\n    margin-bottom: 20px;\n    @media(min-width: ${breakpoints[1]}px) {\n        font-size: 36px;\n    }\n`;\n\nexport const FormStyled = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    min-width: 240px;\n    @media(min-width: ${breakpoints[1]}px) {\n        min-width: 448px;\n    }\n`;\n\nexport const CommentsBox = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 8px;\n`;\n\nexport const ControlBox = styled.div`\n    height: 92px;\n    margin-top: 32px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    @media(min-width: ${breakpoints[1]}px) {\n        height: 44px;\n        display: flex;\n        flex-direction: row;\n        flex: grid;\n        gap: 0 20px;\n        width: 380px;\n        margin-left: auto;\n        margin-right: auto;\n    }\n`;\n\nexport const FieldStyled = styled(Field)`\n    min-height: 100px;\n    border-radius: 20px;\n    padding: 10px 20px 10px 14px;\n    background-color: ${theme.colors.mainBackground};\n    border: 1px solid ${theme.colors.borderColor};\n    font-family: ${theme.fontFamily.manrope};\n    font-style: normal;\n    font-weight: ${theme.fontWeight.normal};\n    font-size: ${theme.fontSizes.xxs};\n    line-height: 19px;\n    @media(min-width: ${breakpoints[1]}px) {\n        font-size: ${theme.fontSizes.xs};\n    }\n`;\n\nexport const DateBox = styled.div`\n    position: relative;\n`;\n\nexport const Label = styled.label`\n    display: block;\n    margin-bottom: 8px;\n    margin-top: 6px;\n    font-family: ${theme.fontFamily.manrope};\n    font-style: normal;\n    font-weight: ${theme.fontWeight.medium};\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.44;\n    @media(min-width: ${breakpoints[1]}px) {\n        font-size: ${theme.fontSizes.l};\n        margin-bottom: 12px;\n        margin-top: 20px;\n    };\n`;\n\nexport const LabelStyled = styled.label`\n    margin-right: auto;\n    margin-left: auto;\n    font-family: ${theme.fontFamily.manrope};\n    font-style: normal;\n    font-weight: ${theme.fontWeight.medium};\n    font-size: ${theme.fontSizes.xs};\n    line-height: 1.44;\n    @media(min-width: ${breakpoints[1]}px) {\n        font-size: ${theme.fontSizes.m};\n    };\n`;\n\nexport const Span = styled.span`\n    font-family: ${theme.fontFamily.manrope};\n    font-style: normal;\n    font-weight: ${theme.fontWeight.medium};\n    font-size: ${theme.fontSizes.xs};\n    line-height: 1.37;\n    @media(min-width: ${breakpoints[1]}px) {\n        font-size: ${theme.fontSizes.m};\n    }\n`;\n\nexport const InputFile = styled(Field)`\n\n`;\n\nexport const ErrorStyle = styled(ErrorMessage)`\n  bottom: -20px;\n  position: absolute;\n  font-size: ${theme.fontSizes.xxxs};\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  };\n  @media(min-width: ${breakpoints[1]}) {\n    left: 30px;\n  };\n`;\n\nexport const ErrorData = styled(ErrorMessage)`\n  left: 30px;\n  bottom: -5px;\n  position: absolute;\n  font-size: ${theme.fontSizes.xxxs};\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  }\n  @media(min-width: ${breakpoints[1]}) {\n    bottom: -10px\n  }\n`;","import React from \"react\";\nimport InputField from \"components/Ui-Kit/Input/Input\";\nimport MyDataPicker from \"components/AddNoticeForm/AddPetForm/StepOne/DatePicker\";\nimport { Label, DateBox, ErrorData } from \"./UserAddPetForm.styled\";\nimport { StyledSpan } from \"components/Ui-Kit/Input/Input.styled\";\n\nconst PartFirst = () => {\n    return (\n        <>\n            <InputField label=\"Name pet\" id=\"name\" type=\"text\" name=\"name\" placeholder=\"Type pet name\" span=\"*\"/>\n            <DateBox>\n                <Label>\n                    Date of birth\n                    <StyledSpan>*</StyledSpan>\n                </Label>\n                <MyDataPicker\n                    name=\"birthDate\"\n                    label=\"Date of birth*\"\n                    placeholder=\"Type date of birth\"\n                />\n                <ErrorData name=\"birthDate\" component=\"div\" />\n            </DateBox>\n            <InputField label=\"Breed\" id=\"breed\" type=\"text\" name=\"breed\" placeholder=\"Type breed\" span=\"*\"/>\n        </>\n    );\n};\n\nexport default PartFirst;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst PartSecond = ({ children }) => {\n    return (\n        <>\n            {children}\n        </>\n    );\n};\n\nexport default PartSecond;\n\nPartSecond.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\nimport { theme, breakpoints } from 'constants/theme';\n\nexport const LoadImageCont = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 208px;\n  height: 208px;\n  border-radius: 20px;\n  background: ${theme.colors.mainBackground};\n  color: ${theme.colors.mainText};\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 182px;\n    height: 182px;\n  }\n`;\n\nexport const LoadImgLabel = styled.label`\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  @media (min-width: ${breakpoints[1]}px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const LoadImgInput = styled.input`\n  display: none;\n`;\nexport const LoadImgPlus = styled.img`\n  width: 47px;\n  height: 47px;\n`;\nexport const ImagePreview = styled.img`\n  width: 208px;\n  height: 208px;\n  border-radius: 20px;\n  background: ${theme.colors.mainBackground};\n  object-fit: cover;\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 182px;\n    height: 182px;\n  }\n`;\n","import React from 'react';\nimport Plus from '../../assets/images/desktop/plus.svg';\nimport PropTypes from 'prop-types';\nimport {\n  LoadImgLabel,\n  LoadImageCont,\n  ImagePreview,\n  LoadImgPlus,\n  LoadImgInput,\n} from './UserUploadImg.styled';\n\nconst UserUploadImg = ({ handleChange, fileDataURL }) => {\n  return (\n    <LoadImgLabel>\n      {fileDataURL ? (\n        <LoadImageCont>\n          <ImagePreview\n            src={fileDataURL}\n            alt=\"Preview\"\n            width=\"47px\"\n            height=\"47px\"\n          />\n        </LoadImageCont>\n      ) : (\n        <>\n          <LoadImageCont>\n            <LoadImgPlus src={Plus} alt=\"upload\" width=\"47px\" height=\"47px\" />\n          </LoadImageCont>\n          <LoadImgInput\n            name=\"imageFile\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleChange}\n          />\n        </>\n      )}\n    </LoadImgLabel>\n  );\n};\n\nUserUploadImg.propTypes = {\n  handleChange: PropTypes.func,\n  fileDataURL: PropTypes.string,\n};\n\nexport default UserUploadImg;\n","import * as Yup from 'yup';\n\n// Values for Formik\n\nexport const initialValues = {\n  name: '',\n  birthDate: '',\n  breed: '',\n  imageFile: '',\n  comments: '',\n};\n\n// Yup validation\n\nexport const validationSchemaPartOne = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .min(2, 'Name should be at least 2 characters long')\n    .max(16, 'Name should be up to 48 characters long'),\n  birthDate: Yup.mixed().required('Birth date is required'),\n  breed: Yup.string()\n    .required('Breed is required')\n    .min(2, 'Breed should be at least 2 characters long')\n    .max(16, 'Breed should be up to 48 characters long'),\n});\n\nexport const validationSchemaPartTwo = Yup.object().shape({\n  imageFile: Yup.mixed().required('Please add the picture'),\n  comments: Yup.string()\n    .required('Comment is required')\n    .min(8, 'Title should be at least 8 characters long')\n    .max(200, 'Title should be up to 120 characters long'),\n});\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport {\n  Container,\n  Title,\n  FormStyled,\n  LabelStyled,\n  ControlBox,\n  Span,\n  Label,\n  FieldStyled,\n  CommentsBox,\n  ErrorStyle,\n} from './UserAddPetForm.styled';\nimport PropTypes from 'prop-types';\nimport PartFirst from './PartFirst';\nimport PartSecond from './PartSecond';\nimport UserUploadImg from 'components/UserUploadImg';\nimport Button from 'components/Ui-Kit/Button';\nimport { petsApi } from 'redux/api/petsApi';\nimport Loader from 'components/Loader';\nimport { convertDateToString } from '../../helpers/date';\n\nimport {\n  initialValues,\n  validationSchemaPartOne,\n  validationSchemaPartTwo,\n} from './Validation';\n\nconst UserAddPetForm = ({ closeModal }) => {\n  const [currentPart, setCurrentPart] = useState(1);\n  const [image, setImage] = useState(null);\n  const [file, setFile] = useState(null);\n  const [fileDataURL, setFileDataURL] = useState(null);\n  const [addPetMutation, { isLoading }] = petsApi.useAddPetMutation();\n\n  useEffect(() => {\n    let fileReader,\n      isCancel = false;\n    if (file) {\n      fileReader = new FileReader();\n      fileReader.onload = e => {\n        const { result } = e.target;\n        if (result && !isCancel) {\n          setFileDataURL(result);\n        }\n      };\n      fileReader.readAsDataURL(file);\n    }\n    return () => {\n      isCancel = true;\n      if (fileReader && fileReader.readyState === 1) {\n        fileReader.abort();\n      }\n    };\n  }, [file]);\n\n  function getFullMonth(date) {\n    return date < 10 ? '0' + date : date;\n  };\n  \n  const handleSubmit = async (values, { setSubmitting }) => {\n    if (currentPart < 2) {\n      setCurrentPart(2);\n    } else {\n      const dateMDY = convertDateToString(values.birthDate);\n\n      const data = new FormData();\n      data.append('name', values.name);\n      data.append('birthDate', dateMDY);\n      data.append('breed', values.breed);\n      data.append('petImage', values.imageFile);\n      data.append('comments', values.comments);\n      console.log(data);\n      try {\n        const response = await addPetMutation(data);\n      } catch (error) {\n        console.error('Failed to add pet:', error);\n      }\n      closeModal();\n    }\n    setSubmitting(false);\n  };\n\n  const handleNext = () => {\n    setCurrentPart(2);\n  };\n\n  const handleBack = () => {\n    setCurrentPart(1);\n  };\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      <Title>Add pet</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={\n          currentPart === 1 ? validationSchemaPartOne : validationSchemaPartTwo\n        }\n        onSubmit={handleSubmit}\n        encType=\"multipart/form-data\"\n      >\n        {({ isSubmitting, values, setFieldValue }) => (\n          <FormStyled>\n            {currentPart === 1 && (\n              <PartFirst handleNext={handleNext} closeModal={closeModal} />\n            )}\n            {currentPart === 2 && (\n              <PartSecond>\n                <>\n                  <LabelStyled htmlFor=\"imageFile\">\n                    Add photo and some comments\n                  </LabelStyled>\n                  <UserUploadImg\n                    name=\"imageFile\"\n                    fileDataURL={fileDataURL}\n                    handleChange={e => {\n                      setFile(e.currentTarget.files[0]);\n                      setFieldValue('imageFile', e.currentTarget.files[0]);\n                    }}\n                  />\n                  <CommentsBox>\n                    <Label htmlFor=\"comments\">Comments</Label>\n                    <FieldStyled\n                      id=\"comments\"\n                      name=\"comments\"\n                      type=\"text\"\n                      as=\"textarea\"\n                      placeholder=\"Type comments\"\n                      onChange={e => {\n                        setFieldValue('comments', e.target.value);\n                      }}\n                    />\n                    <ErrorStyle name=\"comments\" component=\"div\" />\n                  </CommentsBox>\n                </>\n              </PartSecond>\n            )}\n            <ControlBox>\n              {currentPart === 1 && (\n                <Button\n                  name=\"transparent\"\n                  type=\"button\"\n                  width=\"100%\"\n                  onClick={closeModal}\n                >\n                  <Span>Cancel</Span>\n                </Button>\n              )}\n              {currentPart === 2 && (\n                <Button\n                  name=\"transparent\"\n                  type=\"button\"\n                  width=\"100%\"\n                  onClick={handleBack}\n                >\n                  <Span>Back</Span>\n                </Button>\n              )}\n              <Button\n                name=\"filled\"\n                type=\"submit\"\n                width=\"100%\"\n                disabled={isSubmitting}\n              >\n                {currentPart < 2 ? <Span>Next</Span> : <Span>Done</Span>}\n              </Button>\n            </ControlBox>\n          </FormStyled>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nUserAddPetForm.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default UserAddPetForm;\n","import styled from 'styled-components';\nimport { theme, breakpoints } from '../../../constants/theme';\n\nexport const Item = styled.li`\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  padding: ${theme.space[4]} ${theme.space[4]} 42px ${theme.space[4]};\n  background-color: ${theme.colors.lightText};\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-radius: 20px;\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 704px;\n    display: flex;\n    padding-bottom: ${theme.space[4]};\n  }\n  @media (min-width: ${breakpoints[2]}px) {\n    width: 820px;\n  }\n`;\n\nexport const InfoBox = styled.div`\n  position: relative;\n  width: 100%;\n  @media (min-width: ${breakpoints[1]}px) {\n    margin-left: ${theme.space[6]};\n    width: 470px;\n  }\n  @media (min-width: ${breakpoints[2]}px) {\n    width: 580px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 240px;\n  height: 240px;\n  margin-left: auto;\n  margin-right: auto;\n  object-fit: cover;\n  background-color: grey;\n  border-radius: ${theme.space[4]};\n  margin-bottom: ${theme.space[4]};\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 160px;\n    height: 160px;\n    margin-bottom: 0;\n  } ;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 12px;\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.normal};\n  font-size: ${theme.fontSizes.xxs};\n  line-height: 1.35;\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.xs};\n  }\n`;\n\nexport const Span = styled.span`\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.xxs};\n  line-height: 1.35;\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.xs};\n  }\n`;\n\nexport const TextComments = styled.p`\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.normal};\n  font-size: ${theme.fontSizes.xxs};\n  line-height: 1.35;\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.xs};\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: -5px;\n  right: 0;\n  width: 21px;\n  height: 21px;\n  padding: 0 0 0 0;\n  border: none;\n  outline: none;\n  background-color: ${theme.colors.lightText};\n  @media (min-width: ${breakpoints[1]}px) {\n    top: 0;\n    width: 45px;\n    height: 45px;\n    padding: 12px 14px 12px 14px;\n    border-radius: 50%;\n    background-color: ${theme.colors.mainBackground};\n  }\n`;\n\nexport const iconStyle = {\n  height: '21px',\n  width: '17px',\n  fill: theme.colors.secondaryText,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Item,\n  InfoBox,\n  Image,\n  Text,\n  Span,\n  TextComments,\n  Button,\n  iconStyle,\n} from './UserPetsListItem.styled';\nimport { RiDeleteBin6Fill } from 'react-icons/ri';\nimport { useDeletePetMutation } from 'redux/api/petsApi';\nimport { useGetCurrentUserQuery } from 'redux/api/userApi';\nimport { toast } from 'react-toastify';\n\nconst UserPetsListItem = ({ pet }) => {\n  const { name, birthDate, breed, comments, photoURL } = pet;\n  const [deletePetMutation, { isLoading }] = useDeletePetMutation();\n\n  const handleDelete = async petId => {\n    if (confirm('Do you want to delete your pet')) {\n      try {\n        const response = await deletePetMutation(petId);\n        toast.info(`Pet has been deleted`);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <Item>\n      <Image src={photoURL} alt=\"photo\" />\n      <InfoBox>\n        <Button onClick={() => handleDelete(pet._id)}>\n          <RiDeleteBin6Fill style={iconStyle} />\n        </Button>\n        <Text>\n          <Span>Name: </Span>\n          {name}\n        </Text>\n        <Text>\n          <Span>Date of birth: </Span>\n          {birthDate}\n        </Text>\n        <Text>\n          <Span>Breed: </Span>\n          {breed}\n        </Text>\n        <TextComments>\n          <Span>Comments: </Span>\n          {comments}\n        </TextComments>\n      </InfoBox>\n    </Item>\n  );\n};\n\nUserPetsListItem.propTypes = {\n  pet: PropTypes.object.isRequired,\n  // handleDelete: PropTypes.func.isRequired,\n};\n\nexport default UserPetsListItem;\n","import React from 'react';\nimport { useState } from 'react';\nimport { Container, Title, Box, List } from './UserPetsList.styled';\nimport { useGetCurrentUserQuery } from 'redux/api/userApi';\nimport UserAddPetForm from 'components/UserAddPetForm';\nimport UserPetsListItem from './UserPetsListItem';\nimport Modal from 'components/Modal';\nimport { AnimatePresence } from 'framer-motion';\nimport AddPetButton from 'components/AddPetButton';\n\nconst UserPetsList = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { data } = useGetCurrentUserQuery();\n\n  const handleIsOpen = () => {\n    setIsOpen(true);\n    document.body.classList.add('modal-open');\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n    document.body.classList.remove('modal-open');\n  };\n\n  return (\n    <Container>\n      <Box>\n        <Title>My pets:</Title>\n        <AddPetButton handleClick={handleIsOpen} />\n      </Box>\n      {data?.pets && (\n        <List>\n          {data?.pets.map(pet => {\n            return <UserPetsListItem key={pet._id} pet={pet} />;\n          })}\n        </List>\n      )}\n      <AnimatePresence>\n        {isOpen && (\n          <Modal closeModal={closeModal} key=\"popUp\">\n            <UserAddPetForm closeModal={closeModal} />\n          </Modal>\n        )}\n      </AnimatePresence>\n    </Container>\n  );\n};\n\nexport default UserPetsList;\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { theme, breakpoints } from '../../constants/theme';\n\nexport const Section = styled(motion.section)`\n  padding-top: 60px;\n  padding-bottom: 40px;\n`;\nexport const UserWrapper = styled.div`\n  @media (min-width: ${breakpoints[2]}px) {\n    display: flex;\n    /* justify-content; center; */\n    /* align-items-center; */\n  } ;\n`;\n","import styled from 'styled-components';\nimport { theme, breakpoints } from '../../../constants/theme';\nimport { Field, ErrorMessage } from 'formik';\nimport { RiPencilFill } from 'react-icons/ri';\nimport { AiOutlineCheck } from 'react-icons/ai';\n\nexport const Label = styled.label`\n  position: relative;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin-right: 13px;\n`;\n\nexport const Title = styled.span`\n  width: 56px;\n  /* width: 85px; */\n  margin-right: 26px;\n  /* overflow-x: hidden; */\n\n  ${theme.mq.tablet} {\n    width: 90px;\n    margin-right: 36px;\n  }\n\n  ${theme.mq.desktop} {\n    width: 83px;\n    margin-right: 24px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  /* width: 160px; */\n  width: 100%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 12px;\n\n  cursor: pointer;\n  border-radius: 40px;\n  border: 1px solid\n    ${({ theme, disabled }) =>\n      disabled ? 'transparent' : 'rgba(245, 146, 86, 0.5)'};\n  background-color: ${({ theme, disabled }) =>\n    disabled ? 'transparent' : `${theme.colors.mainBackground}`};\n\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.mainText};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.mainText};\n    opacity: 1;\n  }\n\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxxs};\n  }\n\n  @media (min-width: ${breakpoints[1]}px) {\n    /* width: 216px; */\n    /* height: 32px; */\n    /* margin-right: 24px; */\n    /* padding-left: 10px; */\n  }\n`;\n\nexport const Pencil = styled(RiPencilFill)`\n  fill: ${theme.colors.accent};\n  display: inline-block;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const Check = styled(AiOutlineCheck)`\n  fill: ${theme.colors.accent};\n  display: inline-block;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const ErrorStyle = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -9px;\n  left: 0px;\n  font-size: 8px;\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  }\n`;\n\n// import styled from 'styled-components';\n// import { theme, breakpoints } from 'constants/theme';\n// import { Field, ErrorMessage } from 'formik';\n\n// export const FieldStyle = styled(Field)`\n//   width: 100%;\n//   border-radius: 40px;\n//   cursor: pointer;\n//   margin-bottom: 16px;\n//   border: 1px solid rgba(245, 146, 86, 0.5);\n//   background-color: ${theme.colors.mainBackground};\n//   font-family: ${theme.fontFamily.manrope};\n//   font-size: ${theme.fontSizes.s};\n//   font-weight: ${theme.fontWeight.normal};\n//   color: ${theme.colors.primaryText};\n//   padding-left: 28px;\n//   padding-right: 28px;\n//   padding-top: 9px;\n//   padding-bottom: 9px;\n//   ${theme.mq.mobileOnly} {\n//     font-size: ${theme.fontSizes.xxs};\n//     padding: 12px 14px;\n//   }\n// `;\n\n// export const Label = styled.label`\n//   display: block;\n//   margin-bottom: 12px;\n//   ${theme.mq.mobileOnly} {\n//     margin-bottom: 8px;\n//   }\n//   font-family: ${theme.fontFamily.manrope};\n//   font-style: normal;\n//   font-weight: ${theme.fontWeight.medium};\n//   font-size: ${theme.fontSizes.s};\n//   line-height: 1.44;\n//   @media (min-width: ${breakpoints[1]}px) {\n//     font-size: ${theme.fontSizes.l};\n//     margin-top: 12px;\n//   }\n//   // position: relative;\n// `;\n\n// export const ErrorStyle = styled(ErrorMessage)`\n//   position: absolute;\n//   bottom: -10px;\n//   left: 30px;\n//   font-size: ${theme.fontSizes.xxxs};\n//   color: red;\n//   ${theme.mq.mobileOnly} {\n//     transform: translate(0px, 0px);\n//   }\n// `;\n\n// export const StyledSpan = styled.span`\n//   color: ${theme.colors.accent};\n// `;\n// export const FieldWrapper = styled.div`\n//   position: relative;\n//   padding-bottom: 6px;\n// `;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport { ErrorStyle, Input, Label, Title } from './UserInput.styled';\n\nconst UserInput = ({\n  label,\n  name,\n  type,\n  placeholder,\n  id,\n  span,\n  // autocomplete,\n  children,\n  as,\n  disabled,\n}) => {\n  return (\n    <Label>\n      <Title>{label}</Title>\n      <Input\n        name={name}\n        type={type}\n        disabled={disabled}\n        placeholder={placeholder}\n      />\n      {children}\n      <ErrorStyle name={name} component=\"div\" />\n    </Label>\n  );\n};\n\nUserInput.propTypes = {\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  span: PropTypes.string,\n  autocomplete: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.string,\n};\n\nexport default UserInput;\n","import { breakpoints, theme } from 'constants/theme';\nimport { RiPencilFill } from 'react-icons/ri';\nimport styled from 'styled-components';\nimport { AiOutlineCheck } from 'react-icons/ai';\n\nexport const Button = styled.button`\n  width: 20px;\n  height: 20px;\n  padding: 3px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  border: inherit;\n  background-color: ${theme.colors.mainBackground};\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nexport const Pencil = styled(RiPencilFill)`\n  fill: ${theme.colors.accent};\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const Check = styled(AiOutlineCheck)`\n  fill: ${theme.colors.accent};\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import React from 'react';\nimport { Button, Check, Pencil } from './UserupdateButton.styled';\nimport PropTypes from 'prop-types';\n\nconst UserUpdateButton = ({ isdisabled, type = 'button', onClick }) => {\n  return (\n    <Button type={type} onClick={onClick}>\n      {isdisabled ? <Pencil /> : <Check />}\n    </Button>\n  );\n};\n\nUserUpdateButton.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  isdisabled: PropTypes.bool,\n};\nexport default UserUpdateButton;\n","import { breakpoints, theme } from 'constants/theme';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FieldWrapper = styled.div`\n  max-width: 379px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.xxxs};\n  line-height: 1.33;\n  color: ${theme.colors.mainText};\n\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.39;\n    width: 100%;\n  }\n\n  ${theme.mq.desktop} {\n    margin-right: 0;\n  }\n`;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n  phone: Yup.string()\n    .matches(\n      /^\\+380\\d{9}$/,\n      'Number should begin with +380 and contain 13 digits'\n    )\n    .min(13, 'Phone number should be 13 digits')\n    .max(13, 'Phone number should be 13 digits')\n    .required('Phone number is required'),\n});\n","import Loader from 'components/Loader';\nimport UserInput from 'components/Ui-Kit/UserInput';\nimport UserUpdateButton from 'components/Ui-Kit/UserupdateButton/UserUpdateButton';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n} from 'redux/api/userApi';\nimport { selectUserState } from 'redux/user/userSelectors';\nimport { FieldWrapper, FormStyled } from '../UserField.styled';\nimport { validationSchema } from './validation';\n\nconst UserPhone = () => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const user = useSelector(selectUserState);\n  const initialValues = { phone: user.phone || '' };\n  const [updateUser, { isLoading }] = useUpdateUserMutation();\n\n  const handleClick = values => {\n    if (isDisabled) {\n      setIsDisabled(false);\n      return;\n    }\n\n    if (!values.phone) return;\n    setIsDisabled(true);\n  };\n\n  const handleSubmit = (values, actions) => {\n    if (!isDisabled) {\n      return;\n    }\n\n    if (values.phone === user.phone) return;\n\n    // create formData\n    const data = new FormData();\n    data.append('phone', values.phone);\n    updateUser(data);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      encType=\"multipart/form-data\"\n    >\n      {({ isSubmitting, values, setFieldValue, errors }) => (\n        <Form>\n          <FieldWrapper>\n            <UserInput\n              label=\"Phone\"\n              name=\"phone\"\n              type=\"phone\"\n              disabled={isDisabled}\n              placeholder={user.phone || ''}\n            />\n            <UserUpdateButton\n              type=\"submit\"\n              isdisabled={isDisabled}\n              onClick={() =>{ \n                if (errors.phone) return;\n                handleClick(values)\n              }}\n            />\n            {isLoading && <Loader />}\n          </FieldWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserPhone;\n","import styled from 'styled-components';\nimport { theme, breakpoints } from '../../../constants/theme';\nimport { Field, ErrorMessage, Form } from 'formik';\nimport { RiPencilFill } from 'react-icons/ri';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport DatePicker from 'react-datepicker';\n\nexport const FormStyled = styled(Form)`\n  max-width: 379px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n\n  ${theme.mq.tabletOnly} {\n    margin-right: 13px;\n  }\n\n  ${theme.mq.mobileOnly} {\n    width: 100%;\n  }\n`;\n\nexport const Title = styled.span`\n  width: 85px;\n  /* overflow-x: hidden; */\n\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxxs};\n  }\n\n  ${theme.mq.tablet} {\n    width: 56px;\n    margin-right: 41px;\n  }\n\n  ${theme.mq.desktop} {\n    width: 83px;\n    margin-right: 24px;\n  }\n`;\n\nexport const MyDatePickerNew = styled(DatePicker)`\n  /* width: 160px; */\n  width: 100%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  cursor: pointer;\n  border-radius: 40px;\n  border: 1px solid\n    ${({ theme, disabled }) =>\n      disabled ? 'transparent' : 'rgba(245, 146, 86, 0.5)'};\n  background-color: ${({ theme, disabled }) =>\n    disabled ? 'transparent' : `${theme.colors.mainBackground}`};\n\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.mainText};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.mainText};\n    opacity: 1;\n  }\n\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxxs};\n  }\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 237px;\n\n    /* height: 32px; */\n    /* margin-right: 24px; */\n    /* padding-left: 10px; */\n  }\n`;\n\nexport const Input = styled(Field)`\n  /* width: 160px; */\n  width: 100%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  margin-right: 13px;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  cursor: pointer;\n  border-radius: 40px;\n  border: 1px solid\n    ${({ theme, disabled }) =>\n      disabled ? 'transparent' : 'rgba(245, 146, 86, 0.5)'};\n  background-color: ${({ theme, disabled }) =>\n    disabled ? 'transparent' : `${theme.colors.mainBackground}`};\n\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.mainText};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.mainText};\n    opacity: 1;\n  }\n\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxxs};\n  }\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 216px;\n    /* height: 32px; */\n    /* margin-right: 24px; */\n    /* padding-left: 10px; */\n  }\n`;\n\nexport const Pencil = styled(RiPencilFill)`\n  fill: ${theme.colors.accent};\n  display: inline-block;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const Check = styled(AiOutlineCheck)`\n  fill: ${theme.colors.accent};\n  display: inline-block;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const ErrorStyle = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -10px;\n  left: 30px;\n  font-size: ${theme.fontSizes.xxxs};\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  }\n`;\n\n// import styled from 'styled-components';\n// import { theme, breakpoints } from 'constants/theme';\n// import { Field, ErrorMessage } from 'formik';\n\n// export const FieldStyle = styled(Field)`\n//   width: 100%;\n//   border-radius: 40px;\n//   cursor: pointer;\n//   margin-bottom: 16px;\n//   border: 1px solid rgba(245, 146, 86, 0.5);\n//   background-color: ${theme.colors.mainBackground};\n//   font-family: ${theme.fontFamily.manrope};\n//   font-size: ${theme.fontSizes.s};\n//   font-weight: ${theme.fontWeight.normal};\n//   color: ${theme.colors.primaryText};\n//   padding-left: 28px;\n//   padding-right: 28px;\n//   padding-top: 9px;\n//   padding-bottom: 9px;\n//   ${theme.mq.mobileOnly} {\n//     font-size: ${theme.fontSizes.xxs};\n//     padding: 12px 14px;\n//   }\n// `;\n\n// export const Label = styled.label`\n//   display: block;\n//   margin-bottom: 12px;\n//   ${theme.mq.mobileOnly} {\n//     margin-bottom: 8px;\n//   }\n//   font-family: ${theme.fontFamily.manrope};\n//   font-style: normal;\n//   font-weight: ${theme.fontWeight.medium};\n//   font-size: ${theme.fontSizes.s};\n//   line-height: 1.44;\n//   @media (min-width: ${breakpoints[1]}px) {\n//     font-size: ${theme.fontSizes.l};\n//     margin-top: 12px;\n//   }\n//   // position: relative;\n// `;\n\n// export const ErrorStyle = styled(ErrorMessage)`\n//   position: absolute;\n//   bottom: -10px;\n//   left: 30px;\n//   font-size: ${theme.fontSizes.xxxs};\n//   color: red;\n//   ${theme.mq.mobileOnly} {\n//     transform: translate(0px, 0px);\n//   }\n// `;\n\n// export const StyledSpan = styled.span`\n//   color: ${theme.colors.accent};\n// `;\n// export const FieldWrapper = styled.div`\n//   position: relative;\n//   padding-bottom: 6px;\n// `;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n  birthday: Yup.date(),\n});\n","import { Formik, useField } from 'formik';\nimport React, { useState } from 'react';\nimport { useUpdateUserMutation } from 'redux/api/userApi';\nimport { FieldWrapper } from '../UserField.styled';\nimport {\n  Title,\n  Label,\n  ErrorStyle,\n  MyDatePickerNew,\n  FormStyled,\n} from './UserBirthday.styled';\nimport PropTypes from 'prop-types';\nimport UserUpdateButton from 'components/Ui-Kit/UserupdateButton/UserUpdateButton';\nimport { useSelector } from 'react-redux';\nimport { selectUserState } from 'redux/user/userSelectors';\nimport { validationSchema } from './validation';\nimport { convertStringToDate, convertDateToString } from 'helpers/date';\nimport Loader from 'components/Loader';\n\nconst MyDatePicker = ({ name = '', isDisabled, val, handleChange }) => {\n  const [field] = useField(name);\n  const [startDate, setStartDate] = useState(val);\n\n  return (\n    <MyDatePickerNew\n      {...field}\n      selected={startDate}\n      disabled={isDisabled}\n      onChange={date => {\n        handleChange(date);\n        setStartDate(date);\n      }}\n      dateFormat=\"dd.MM.yyyy\"\n      maxDate={new Date()}\n    />\n  );\n};\n\nconst UserBirthday = () => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const user = useSelector(selectUserState);\n\n  const parsedDate = convertStringToDate(user.birthday || '00.00.0000');\n\n  const initialValues = { birthday: user.birthday || '' };\n\n  const [updateUser, { isLoading }] = useUpdateUserMutation();\n\n  const handleClick = () => {\n    if (isDisabled) {\n      setIsDisabled(false);\n      return;\n    }\n    setIsDisabled(true);\n  };\n\n  const handleSubmit = values => {\n    if (!isDisabled) {\n      return;\n    }\n    if (values.birthday === user.birthday) {\n      return;\n    }\n\n    const dateMDY = convertDateToString(values.birthday);\n\n    // create formData\n    const data = new FormData();\n    data.append('birthday', dateMDY);\n    updateUser(data);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting, values, setFieldValue }) => (\n        <FormStyled>\n          <FieldWrapper>\n          <Label>\n            <Title>Birthday</Title>\n\n            <MyDatePicker\n              isDisabled={isDisabled}\n              val={parsedDate}\n              name=\"birthday\"\n              handleChange={date => {\n                setFieldValue('birthday', date);\n                console.log('handleChange', values);\n              }}\n            />\n\n            <ErrorStyle name=\"birthday\" component=\"div\" />\n          </Label>\n          <UserUpdateButton\n            type=\"submit\"\n            isdisabled={isDisabled}\n            onClick={handleClick}\n          />\n          {isLoading && <Loader />}\n          </FieldWrapper>\n        </FormStyled>\n      )}\n    </Formik>\n  );\n};\n\nMyDatePicker.propTypes = {\n  name: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  val: PropTypes.any,\n  handleChange: PropTypes.func,\n};\n\nexport default UserBirthday;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { theme, breakpoints } from '../../constants/theme';\nimport { LoadImageCont } from 'components/UploadImage/UploadImage.styled';\n\nexport const Container = styled.div`\n  /* padding: 0 20px; */\n  width: 100%;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    max-width: ${breakpoints[1]}px;\n    /* padding: 0 32px; */\n  }\n\n  @media (min-width: ${breakpoints[2]}px) {\n    max-width: 820px;\n    /* margin-left: 0; */\n    /* padding: 0; */\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.m};\n  line-height: 1.35;\n  color: ${theme.colors.mainText};\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.xl};\n  }\n`;\n\nexport const UserCard = styled.div`\n  /* width: 280px; */\n  margin-top: 18px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 16px;\n\n  background-color: ${theme.colors.lightText};\n  background: #ffffff;\n  box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  border-radius: 20px;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    width: 736px;\n    margin-top: 40px;\n    margin-left: -32px;\n    padding: 24px 40px 24px 32px;\n    border-radius: 0 40px 40px 0;\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n  }\n  @media (min-width: ${breakpoints[2]}px) {\n    width: 410px;\n    flex-direction: column;\n    margin-top: 24px;\n    margin-left: -16px;\n    padding: 20px 16px;\n  }\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 42px;\n\n  ${theme.mq.tabletOnly} {\n    /* padding-left: 32px; */\n    /* width: 379px; */\n    margin-bottom: 33px;\n    margin-right: 52px;\n  }\n\n  ${theme.mq.desktop} {\n    padding-left: 8px;\n    /* margin-left: 64px; */\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: flex-end;\n  gap: 4px;\n  margin-left: auto;\n  margin-right: 12px;\n  padding: 0;\n  border: none;\n  background-color: white;\n  cursor: pointer;\n`;\n\nexport const iconStyle = {\n  height: '20px',\n  width: '20px',\n  fill: theme.colors.accent,\n  color: theme.colors.accent,\n};\n\nexport const editBtn = {\n  gap: '4px',\n  marginLeft: 'auto',\n};\n\nexport const LogoutBtn = {\n  fontSize: '16px',\n  opacity: 0.6,\n  marginLeft: 0,\n};\n","import { breakpoints, theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const ImageBox = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  gap: 8px;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    padding-bottom: 30px;\n  }\n  @media (min-width: ${breakpoints[2]}px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const LoadImageCont = styled.div`\n  cursor: pointer;\n  width: 233px;\n  height: 233px;\n  border-radius: 50%;\n  background: ${theme.colors.mainBackground};\n  color: ${theme.colors.mainText};\n`;\n\nexport const LoadImgLabel = styled.label`\n  display: flex;\n  align-items: flex-end;\n  gap: 4px;\n  margin-left: auto;\n  margin-right: 12px;\n  padding: 0;\n  border: none;\n  background-color: white;\n  cursor: pointer;\n  font-size: 12px;\n\n  ${theme.mq.tablet} {\n    position: absolute;\n    bottom: 0px;\n    right: 0px;\n  }\n\n  ${theme.mq.desktop} {\n    bottom: 0px;\n    right: -84px;\n  }\n`;\n\nexport const LoadImgInput = styled.input`\n  display: none;\n`;\nexport const LoadImgPlus = styled.img`\n  width: 47px;\n  height: 47px;\n`;\nexport const ImagePreview = styled.img`\n  width: 233px;\n  height: 233px;\n  border-radius: 50%;\n  background: ${theme.colors.mainBackground};\n  object-fit: cover;\n`;\nexport const ErrorStyle = styled.div`\n  position: absolute;\n  bottom: 0px;\n`;\n\nexport const UploadField = styled.div`\n  width: 233px;\n  height: 233px;\n  border-radius: 50%;\n  margin: 0 auto;\n\n  @media (min-width: ${breakpoints[1]}px) {\n    margin: 0 0 8px;\n  }\n\n  @media (min-width: ${breakpoints[2]}px) {\n    margin: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: flex-end;\n  gap: 4px;\n  margin-left: auto;\n  margin-right: 12px;\n  padding: 0;\n  border: none;\n  background-color: white;\n  cursor: pointer;\n`;\n\nexport const iconStyle = {\n  height: '20px',\n  width: '20px',\n  fill: theme.colors.accent,\n  color: theme.colors.accent,\n};\n\nexport const editBtn = {\n  gap: '4px',\n  marginLeft: 'auto',\n};\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n  userImage: Yup.mixed(),\n});\n","import React, { useState, useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport { HiCamera } from 'react-icons/hi2';\nimport {\n  iconStyle,\n  ImageBox,\n  LoadImgInput,\n  LoadImgPlus,\n  UploadField,\n  ImagePreview,\n  LoadImageCont,\n  LoadImgLabel,\n} from './UserPhoto.styled';\nimport Plus from '../../../assets/images/desktop/plus.svg';\nimport {\n  useUpdateUserMutation,\n  useGetCurrentUserQuery,\n} from 'redux/api/userApi';\nimport Loader from 'components/Loader';\nimport { validationSchema } from './validation';\n// import { initialValues } from 'components/RegisterForm/Validation';\n\nconst UserPhoto = () => {\n  const [fileDataURL, setFileDataURL] = useState(null);\n  const [file, setFile] = useState(null);\n  const { data } = useGetCurrentUserQuery();\n  const [updateUser, { isLoading }] = useUpdateUserMutation();\n  // console.log(data);\n\n  useEffect(() => {\n    let fileReader,\n      isCancel = false;\n    if (file) {\n      const data = new FormData();\n      data.append('userImage', file);\n      updateUser(data);\n\n      fileReader = new FileReader();\n      fileReader.onload = e => {\n        const { result } = e.target;\n        if (result && !isCancel) {\n          setFileDataURL(result);\n        }\n      };\n      fileReader.readAsDataURL(file);\n    }\n    return () => {\n      isCancel = true;\n      if (fileReader && fileReader.readyState === 1) {\n        fileReader.abort();\n      }\n    };\n  }, [file]);\n\n  const handleSubmit = values => {\n    console.log(values);\n  };\n\n  const initialValues = {\n    userImage: data?.photoURL || '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      encType=\"multipart/form-data\"\n    >\n      {({ isSubmitting, values, setFieldValue }) => (\n        <Form>\n          <ImageBox>\n            <LoadImgLabel htmlFor=\"upload\">\n              <HiCamera style={iconStyle} />\n              Edit photo\n            </LoadImgLabel>\n            <LoadImgInput\n              id=\"upload\"\n              selected={values}\n              name=\"userImage\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={e => {\n                setFile(e.currentTarget.files[0]);\n                setFieldValue('userImage', e.currentTarget.files[0]);\n              }}\n            />\n            {fileDataURL ? (\n              <LoadImageCont>\n                <ImagePreview src={fileDataURL} alt=\"Preview\" />\n              </LoadImageCont>\n            ) : (\n              <>\n                {data && data?.photoURL ? (\n                  <LoadImageCont>\n                    <ImagePreview src={data?.photoURL} alt=\"Preview\" />\n                  </LoadImageCont>\n                ) : (\n                  <>\n                    <LoadImageCont>\n                      <LoadImgPlus\n                        src={Plus}\n                        alt=\"upload\"\n                        width=\"47px\"\n                        height=\"47px\"\n                      />\n                    </LoadImageCont>\n                  </>\n                )}\n              </>\n            )}\n            {isLoading && <Loader />}\n          </ImageBox>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserPhoto;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Name should have at least 3 characters')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(?: [a-zA-Zа-яА-Я]+)*$/,\n      'Only letters can be accepted')\n    .max(12, 'Name should be up to 12 characters long')\n    .required('Name is required'),\n});\n","import Loader from 'components/Loader';\nimport UserInput from 'components/Ui-Kit/UserInput';\nimport UserUpdateButton from 'components/Ui-Kit/UserupdateButton/UserUpdateButton';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n} from 'redux/api/userApi';\nimport { selectUserState } from 'redux/user/userSelectors';\nimport { FieldWrapper, FormStyled } from '../UserField.styled';\nimport { validationSchema } from './validation.js';\n\nconst UserName = () => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const user = useSelector(selectUserState);\n  const initialValues = { name: user.name || '' };\n  const [updateUser, { isLoading }] = useUpdateUserMutation();\n\n  const handleClick = (values, actions) => {\n    if (isDisabled) {\n      setIsDisabled(false);\n      return;\n    }\n\n    if (!values.name) return;\n    setIsDisabled(true);\n  };\n\n  const handleSubmit = (values, actions) => {\n    if (!isDisabled) {\n      return;\n    }\n\n    if (values.name === user.name) return;\n\n    // create formData\n    const data = new FormData();\n    data.append('name', values.name);\n    updateUser(data);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      // encType=\"multipart/form-data\"\n    >\n      {({ isSubmitting, values, setFieldValue, errors }) => (\n        <Form>\n          <FieldWrapper>\n            <UserInput\n              label=\"Name\"\n              name=\"name\"\n              type=\"name\"\n              disabled={isDisabled}\n              placeholder={user.name || ''}\n            />\n            <UserUpdateButton\n              type=\"submit\"\n              isdisabled={isDisabled}\n              onClick={() =>{ \n                if (errors.name) return;\n                handleClick(values)\n              }}\n            />\n            {isLoading && <Loader />}\n          </FieldWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserName;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address')\n    .matches(\n      /^([a-zA-Z][\\w+-]+(?:\\.\\w+)?)@([\\w-]+(?:\\.[a-zA-Z]{2,10})+)$/,\n      'Please enter a valid email address, example: \"mail@mail.com\"'\n    )\n    .required('Email is required')\n    .min(12, 'Email should be at least 12 characters long')\n    .max(63, 'Email should be up to 63 characters long'),\n});\n","import Loader from 'components/Loader';\nimport UserInput from 'components/Ui-Kit/UserInput';\nimport UserUpdateButton from 'components/Ui-Kit/UserupdateButton/UserUpdateButton';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n} from 'redux/api/userApi';\nimport { selectUserState } from 'redux/user/userSelectors';\nimport { FieldWrapper, FormStyled } from '../UserField.styled';\nimport { validationSchema } from './validation';\n\nconst UserEmail = () => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const user = useSelector(selectUserState);\n  const initialValues = { email: user.email || '' };\n  const [updateUser, { isLoading }] = useUpdateUserMutation();\n\n  const handleClick = (values, actions) => {\n    if (isDisabled) {\n      setIsDisabled(false);\n      return;\n    }\n\n    if (!values.email) return;\n    setIsDisabled(true);\n  };\n\n  const handleSubmit = (values, actions) => {\n    if (!isDisabled) {\n      return;\n    }\n\n    if (values.email === user.email) return;\n\n    // create formData\n    const data = new FormData();\n    data.append('email', values.email);\n    updateUser(data);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      // encType=\"multipart/form-data\"\n    >\n      {({ isSubmitting, values, setFieldValue, errors }) => (\n        <Form>\n          <FieldWrapper>\n            <UserInput\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              disabled={isDisabled}\n              placeholder={user.email || ''}\n            />\n            <UserUpdateButton\n              type=\"submit\"\n              isdisabled={isDisabled}\n              onClick={() =>{ \n                if (errors.email) return;\n                handleClick(values)\n              }}\n            />\n            {isLoading && <Loader />}\n          </FieldWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserEmail;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n  city: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(?:-[a-zA-Zа-яА-Я]+)*,\\s*[a-zA-Zа-яА-Я\\s]+$/,\n      'Should be at least 2 words separated by comma'\n    )\n    .min(3, 'City should have at least 3 characters')\n    .required('City is required'),\n});\n","import Loader from 'components/Loader';\nimport UserInput from 'components/Ui-Kit/UserInput';\nimport UserUpdateButton from 'components/Ui-Kit/UserupdateButton/UserUpdateButton';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetCurrentUserQuery,\n  useUpdateUserMutation,\n} from 'redux/api/userApi';\nimport { selectUserState } from 'redux/user/userSelectors';\nimport { FieldWrapper, FormStyled } from '../UserField.styled';\nimport { validationSchema } from './validation';\n\nconst UserCity = () => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const user = useSelector(selectUserState);\n  const initialValues = { city: user.city || '' };\n  const [updateUser, { isLoading }] = useUpdateUserMutation();\n\n  const handleClick = (values, actions) => {\n    if (isDisabled) {\n      setIsDisabled(false);\n      return;\n    }\n\n    if (!values.city) return;\n    setIsDisabled(true);\n  };\n\n  const handleSubmit = (values, actions) => {\n    if (!isDisabled) {\n      return;\n    }\n\n    if (values.city === user.city) return;\n\n    // create formData\n    const data = new FormData();\n    data.append('city', values.city);\n    updateUser(data);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n      // encType=\"multipart/form-data\"\n    >\n      {({ isSubmitting, values, setFieldValue, errors }) => (\n        <Form>\n          <FieldWrapper>\n            <UserInput\n              label=\"City\"\n              name=\"city\"\n              type=\"city\"\n              disabled={isDisabled}\n              placeholder={user.city || ''}\n            />\n            <UserUpdateButton\n              type=\"submit\"\n              isdisabled={isDisabled}\n              onClick={() =>{ \n                if (errors.city) return;\n                handleClick(values)\n              }}\n            />\n            {isLoading && <Loader />}\n          </FieldWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserCity;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logout } from '../../redux/user/userSlice';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  Container,\n  UserCard,\n  Title,\n  Button,\n  LogoutBtn,\n  iconStyle,\n  UserInfo,\n} from './UserData.styled';\nimport { IoLogOutOutline } from 'react-icons/io5';\nimport UserPhone from './UserPhone/UserPhone';\nimport { Box } from 'components/Box/Box';\nimport UserPhoto from './UserPhoto/UserPhoto';\nimport UserName from './UserName/UserName';\nimport UserEmail from './UserEmail/UserEmail';\nimport UserBirthday from './UserBirthday/UserBirthday';\nimport UserCity from './UserCity/UserCity';\n\nconst UserData = () => {\n  const { isAuth } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  // useEffect(() => {\n  //   if (!isAuth) {\n  //     navigate('/login');\n  //   }\n  // });\n\n  return (\n    <Container>\n      <Title>My information:</Title>\n      <UserCard>\n        <UserPhoto />\n        <Box mt={['32px', '32px', '0', '0']}>\n          <UserInfo>\n            <UserName />\n            <UserEmail />\n            <UserBirthday />\n            <UserPhone />\n            <UserCity />\n          </UserInfo>\n          <Box\n            display=\"flex\"\n            justifyContent={['right', 'right', 'left', 'left']}\n          >\n            <Button style={LogoutBtn} type=\"button\" onClick={handleLogout}>\n              <IoLogOutOutline style={iconStyle} />\n              Log out\n            </Button>\n          </Box>\n        </Box>\n      </UserCard>\n    </Container>\n  );\n};\n\nexport default UserData;\n","import React from 'react';\nimport UserPetsList from 'components/UserPetsList';\nimport { pageAnimation } from 'constants/animation';\nimport Section from 'components/Section';\nimport { UserWrapper } from './User.styled';\nimport UserPhone from 'components/UserData/UserPhone/UserPhone';\nimport UserBirthday from 'components/UserData/UserBirthday/UserBirthday';\nimport UserData from 'components/UserData/UserData';\n\nconst User = () => {\n  return (\n    <Section>\n      <UserWrapper>\n        <UserData />\n        <UserPetsList />\n      </UserWrapper>\n    </Section>\n  );\n};\n\nexport default User;\n"],"names":["Container","styled","breakpoints","Box","Title","theme","List","FormStyled","Form","CommentsBox","ControlBox","FieldStyled","Field","DateBox","Label","LabelStyled","Span","ErrorStyle","ErrorMessage","ErrorData","Input","label","id","type","name","placeholder","span","component","PartSecond","children","propTypes","PropTypes","LoadImageCont","LoadImgLabel","LoadImgInput","LoadImgPlus","ImagePreview","handleChange","fileDataURL","src","alt","width","height","Plus","accept","onChange","initialValues","birthDate","breed","imageFile","comments","validationSchemaPartOne","Yup","shape","required","min","max","validationSchemaPartTwo","closeModal","useState","currentPart","setCurrentPart","file","setFile","setFileDataURL","petsApi","addPetMutation","isLoading","useEffect","fileReader","isCancel","FileReader","onload","e","result","target","readAsDataURL","readyState","abort","handleSubmit","values","setSubmitting","dateMDY","convertDateToString","data","FormData","append","console","log","error","handleNext","handleBack","Loader","validationSchema","onSubmit","encType","isSubmitting","setFieldValue","htmlFor","currentTarget","files","as","value","Button","onClick","disabled","Item","InfoBox","Image","Text","TextComments","iconStyle","fill","pet","photoURL","useDeletePetMutation","deletePetMutation","handleDelete","petId","confirm","toast","_id","style","isOpen","setIsOpen","useGetCurrentUserQuery","document","body","classList","remove","AddPetButton","handleClick","add","pets","map","AnimatePresence","Modal","UserWrapper","motion","colors","mainBackground","mainText","RiPencilFill","AiOutlineCheck","Pencil","Check","isdisabled","FieldWrapper","phone","matches","isDisabled","setIsDisabled","user","useSelector","selectUserState","useUpdateUserMutation","updateUser","actions","errors","MyDatePickerNew","DatePicker","birthday","MyDatePicker","val","useField","field","startDate","setStartDate","selected","date","dateFormat","maxDate","Date","parsedDate","convertStringToDate","UserCard","UserInfo","color","LogoutBtn","fontSize","opacity","marginLeft","ImageBox","userImage","email","city","state","isAuth","dispatch","useDispatch","mt","display","justifyContent","logout","Section"],"sourceRoot":""}