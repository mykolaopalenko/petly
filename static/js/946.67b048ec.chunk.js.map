{"version":3,"file":"static/js/946.67b048ec.chunk.js","mappings":"yKACe,SAASA,IActB,OAZEA,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAAIC,OAEZ,SAAcC,EAAQC,EAAUC,GACrC,IAAIC,ECLK,SAAwBC,EAAQH,GAC7C,MAAQI,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQH,IAEpC,QADfG,GAAS,EAAAK,EAAA,GAAeL,MAG1B,OAAOA,CACT,CDDiB,CAAcJ,EAAQC,GACjC,GAAKE,EAAL,CACA,IAAIO,EAAOL,OAAOM,yBAAyBR,EAAMF,GACjD,OAAIS,EAAKZ,IACAY,EAAKZ,IAAIU,KAAKI,UAAUC,OAAS,EAAIb,EAASE,GAEhDQ,EAAKI,KALK,CAMnB,EAEKlB,EAAKmB,MAAMC,KAAMJ,UAC1B,C,gFEXMK,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAC,OAAKA,CAAC,EAC5BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,G,uBCA/BM,GAAcN,EAAAA,EAAAA,eAAc,CAAEO,QAAQ,ICK5C,SAASC,EAAiBC,EAAWC,EAAaC,EAAOC,GACrD,IAAMC,GFJCC,EAAAA,EAAAA,YAAWT,GAAeU,cEK3BC,GAAcF,EAAAA,EAAAA,YAAWR,GACzBW,GAAkBH,EAAAA,EAAAA,YAAWI,EAAAA,GAC7BC,GAAsBL,EAAAA,EAAAA,YAAWf,GAAqBK,cACtDgB,GAAmBC,EAAAA,EAAAA,UAIzBT,EAAsBA,GAAuBI,EAAYM,UACpDF,EAAiBG,SAAWX,IAC7BQ,EAAiBG,QAAUX,EAAoBH,EAAW,CACtDC,YAAAA,EACAG,OAAAA,EACAF,MAAAA,EACAM,gBAAAA,EACAO,wBAAuBP,IACW,IAA5BA,EAAgBQ,QAEtBN,oBAAAA,KAGR,IAAMJ,EAAgBK,EAAiBG,QA4BvC,OA3BAG,EAAAA,EAAAA,qBAAmB,WACfX,GAAiBA,EAAcY,OAAOhB,EAAOM,EACjD,KACAW,EAAAA,EAAAA,IAA0B,WACtBb,GAAiBA,EAAcc,QACnC,KACAC,EAAAA,EAAAA,YAAU,WACNf,GAAiBA,EAAcgB,gBACnC,KAWgCC,OAAOC,wBACjCL,EAAAA,EACAE,EAAAA,YACkB,WAChBf,GAAiBA,EAAcmB,gBAC/BnB,EAAcmB,eAAeC,gBAErC,IACOpB,CACX,CC1DA,SAASqB,EAAYC,GACjB,MAAuB,kBAARA,GACXlD,OAAOC,UAAUC,eAAeC,KAAK+C,EAAK,UAClD,CCAA,SAASC,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,KAC7C,CCCA,IAAMC,EAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsBlC,GAC3B,OAAQ+B,EAAoB/B,EAAMmC,UAC9BF,EAAaG,MAAK,SAACC,GAAI,OAAKV,EAAe3B,EAAMqC,GAAM,GAC/D,CACA,SAASC,EAActC,GACnB,OAAOuC,QAAQL,EAAsBlC,IAAUA,EAAMwC,SACzD,CCfA,SAASC,EAAuBzC,GAC5B,MCFJ,SAAgCA,EAAO0C,GACnC,GAAIR,EAAsBlC,GAAQ,CAC9B,IAAQc,EAAqBd,EAArBc,QAASqB,EAAYnC,EAAZmC,QACjB,MAAO,CACHrB,SAAqB,IAAZA,GAAqBa,EAAeb,GACvCA,OACA6B,EACNR,QAASR,EAAeQ,GAAWA,OAAUQ,EAErD,CACA,OAAyB,IAAlB3C,EAAM4C,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuB7C,GAAOG,EAAAA,EAAAA,YAAWT,IAA9DoB,EAAO,EAAPA,QAASqB,EAAO,EAAPA,QACjB,OAAOW,EAAAA,EAAAA,UAAQ,iBAAO,CAAEhC,QAAAA,EAASqB,QAAAA,EAAS,GAAG,CAACY,EAA0BjC,GAAUiC,EAA0BZ,IAChH,CACA,SAASY,EAA0BC,GAC/B,OAAOnB,MAAMC,QAAQkB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAe,CACjBC,UAAW,CACP,UACA,OACA,WACA,aACA,WACA,aACA,YACA,eAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAAE,cAE1BA,EAAmBC,GAAO,CACtBC,UAAW,SAAC9D,GAAK,OAAKkD,EAAaW,GAAKzB,MAAK,SAACC,GAAI,QAAOrC,EAAMqC,EAAK,GAAC,EAE7E,EAJA,IAAK,IAAMwB,KAAOX,EAAY,K,wBChBxBa,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZhBC,EAAK,E,cCEHC,GAA2B9E,EAAAA,EAAAA,eAAc,CAAC,GCL1C+E,EAAwBC,OAAOC,IAAI,yBCwBzC,SAASC,EAAsB,GAAmF,IAAjFC,EAAiB,EAAjBA,kBAAmBvE,EAAmB,EAAnBA,oBAAqBwE,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAgB5E,EAAS,EAATA,UAChG0E,GCvBJ,SAAsBG,GAClB,IAAK,IAAMd,KAAOc,EACdf,EAAmBC,IAAO,kBACnBD,EAAmBC,IACnBc,EAASd,GAGxB,CDgByBe,CAAaJ,GAuDlC,IAAMK,GAAsBC,EAAAA,EAAAA,aAtD5B,SAAyB9E,EAAO+E,GAK5B,IAAIC,EACEC,GAAiB,2BAChB9E,EAAAA,EAAAA,YAAWf,IACXY,GAAK,IACRkF,SAAUC,EAAYnF,KAElBR,EAAayF,EAAbzF,SACFkD,EAAUD,EAAuBzC,GAYjCoF,EAAe5F,OAAWmD,GH7C7B0C,EAAAA,EAAAA,IAAY,WACf,GAAItB,EAAsBE,eACtB,OAAOC,GAEf,IG0CUnE,EAAc2E,EAAe1E,EAAOR,GAC1C,IAAKA,GAAY8F,EAAAA,EAAW,CAOxB5C,EAAQtC,cAAgBP,EAAiBC,EAAWC,EAAakF,EAAgBhF,GAKjF,IAAMsF,GAA2BpF,EAAAA,EAAAA,YAAWgE,GACtCqB,GAAWrF,EAAAA,EAAAA,YAAWR,GAAaC,OACrC8C,EAAQtC,gBACR4E,EAAgBtC,EAAQtC,cAAcwE,aAEtCK,EAAgBO,EAAUhB,EAAmBY,EAAcG,GAEnE,CAKA,OAAQE,EAAAA,cAAoB/F,EAAcgG,SAAU,CAAEzG,MAAOyD,GACzDsC,GAAiBtC,EAAQtC,cAAiBqF,EAAAA,cAAoBT,GAAe,QAAE5E,cAAesC,EAAQtC,eAAkB6E,IAAqB,KAC7IR,EAAU3E,EAAWE,EAAOoF,EEvExC,SAAsBrF,EAAaK,EAAe2E,GAC9C,OAAOY,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAY7F,EAAY8F,OAAS9F,EAAY8F,MAAMD,GAC/CxF,IACAwF,EACMxF,EAAcyF,MAAMD,GACpBxF,EAAc0F,WAEpBf,IAC2B,oBAAhBA,EACPA,EAAYa,GAEPnE,EAAYsD,KACjBA,EAAYnE,QAAUgF,GAGlC,GAMA,CAACxF,GACL,CFgDsD2F,CAAahG,EAAa2C,EAAQtC,cAAe2E,GAAchF,EAAaP,EAAUkD,EAAQtC,eAChJ,IAGA,OADAyE,EAAoBT,GAAyBtE,EACtC+E,CACX,CACA,SAASM,EAAY,GAAc,IAAZD,EAAQ,EAARA,SACbc,GAAgB7F,EAAAA,EAAAA,YAAW8F,EAAAA,GAAoB/B,GACrD,OAAO8B,QAA8BrD,IAAbuC,EAClBc,EAAgB,IAAMd,EACtBA,CACV,CGzEA,SAASgB,EAAkBC,GACvB,SAASC,EAAOtG,GACZ,OAAOyE,EAAsB4B,EAAarG,EADW,UAAH,6CAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVuG,MACP,OAAOD,EAMX,IAAME,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMD,EAAQ,CAMrBnI,IAAK,SAACuI,EAAS3C,GAOX,OAHKyC,EAAeG,IAAI5C,IACpByC,EAAeI,IAAI7C,EAAKuC,EAAOvC,IAE5ByC,EAAerI,IAAI4F,EAC9B,GAER,CCxCA,IAAM8C,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe9G,GACpB,MAKqB,kBAAdA,IAIHA,EAAU+G,SAAS,SAOvBF,EAAqBG,QAAQhH,IAAc,GAIvC,QAAQiH,KAAKjH,GAIrB,CC3BA,IAAMkH,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBvD,EAAK,GAAsB,IAApBF,EAAM,EAANA,OAAQuB,EAAQ,EAARA,SACxC,OAAQgC,EAAeT,IAAI5C,IACvBA,EAAIwD,WAAW,YACb1D,QAAuBhB,IAAbuC,OACL8B,EAAgBnD,IAAgB,YAARA,EACvC,CCRA,IAAMyD,EAAgB,SAACrI,GAAK,OAAKsD,QAAQtD,GAASA,EAAMsI,YAAY,ECE9DC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBjI,OCLzC,SAAS8I,EAAcjE,GACnB,OAAOA,EAAIwD,WAAW,KAC1B,CCFA,IAAMU,EAAiB,SAAC9I,EAAO+I,GAC3B,OAAOA,GAAyB,kBAAV/I,EAChB+I,EAAKC,UAAUhJ,GACfA,CACV,ECPMiJ,EAAQ,SAACC,EAAKC,EAAKxG,GAAC,OAAKyG,KAAKF,IAAIE,KAAKD,IAAIxG,EAAGuG,GAAMC,EAAI,ECExDE,EAAS,CACXvB,KAAM,SAACnF,GAAC,MAAkB,kBAANA,CAAc,EAClC2G,MAAOC,WACPP,UAAW,SAACrG,GAAC,OAAKA,CAAC,GAEjB6G,GAAQ,kBACPH,GAAM,IACTL,UAAW,SAACrG,GAAC,OAAKsG,EAAM,EAAG,EAAGtG,EAAE,IAE9B8G,GAAQ,kBACPJ,GAAM,IACTK,QAAS,ICPPC,EAAW,SAAChH,GAAC,OAAKyG,KAAKQ,MAAU,IAAJjH,GAAc,GAAM,EACjDkH,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASrH,GACd,MAAoB,kBAANA,CAClB,CCVA,IAAMsH,EAAiB,SAACC,GAAI,MAAM,CAC9BpC,KAAM,SAACnF,GAAC,OAAKqH,EAASrH,IAAMA,EAAEwH,SAASD,IAAiC,IAAxBvH,EAAEyH,MAAM,KAAKrK,MAAY,EACzEuJ,MAAOC,WACPP,UAAW,SAACrG,GAAC,gBAAQA,GAAC,OAAGuH,EAAI,EAChC,EACKG,GAAUJ,EAAe,OACzBK,GAAUL,EAAe,KACzBM,GAAKN,EAAe,MACpBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,IAAqB,kBACpBJ,IAAO,IACVhB,MAAO,SAAC3G,GAAC,OAAK2H,GAAQhB,MAAM3G,GAAK,GAAG,EACpCqG,UAAW,SAACrG,GAAC,OAAK2H,GAAQtB,UAAc,IAAJrG,EAAQ,ICb1CgI,IAAM,kBACLtB,GAAM,IACTL,UAAWI,KAAKQ,QCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,GACRuC,QAASvC,GACTwC,QAASxC,GACTyC,QAASzC,GACTZ,MAAAA,EACAsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,GACN8C,MAAO9C,GACP+C,MAAO/C,GACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZ/B,EAAG+B,GACH9B,EAAG8B,GACH7B,EAAG6B,GACHkD,YAAalD,GACb5B,qBAAsB4B,GACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,IAAQC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,KAAMxF,EAA+BmF,EAA/BnF,UAAWyF,EAAoBN,EAApBM,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAMhK,KAAOwJ,EAAc,CAC5B,IAAMpO,EAAQoO,EAAaxJ,GAI3B,GAAIiE,EAAcjE,GACd4J,EAAK5J,GAAO5E,MADhB,CAKA,IAAM6O,EAAYjE,GAAiBhG,GAC7BkK,EAAchG,EAAe9I,EAAO6O,GAC1C,GAAI5G,EAAeT,IAAI5C,GAAM,CAKzB,GAHA8J,GAAe,EACf1F,EAAUpE,GAAOkK,GAEZF,EACD,SAEA5O,KAAW6O,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACShK,EAAIwD,WAAW,WAEpBuG,GAAqB,EACrBF,EAAgB7J,GAAOkK,GAGvBP,EAAM3J,GAAOkK,CArBjB,CAuBJ,CAiBA,GAhBKV,EAAapF,YACV0F,GAAgBJ,EAChBC,EAAMvF,UTtClB,SAAwBA,EAAW,EAAmE+F,EAAoBT,GAOtH,IAPyI,QAAxGU,2BAAAA,OAA0B,IAAG,GAAI,MAAEC,mBAAAA,OAAkB,IAAG,GAAI,EAEzFC,EAAkB,GAKbC,EAAI,EAAGA,EAAIvG,EAAeuG,IAAK,CACpC,IAAMvK,EAAMoD,EAAmBmH,GAC/B,QAAuBzL,IAAnBsF,EAAUpE,GAAoB,CAC9B,IAAMwK,EAAgB7G,EAAe3D,IAAQA,EAC7CsK,GAAmB,GAAJ,OAAOE,EAAa,YAAIpG,EAAUpE,GAAI,KACzD,CACJ,CAaA,OAZIoK,IAA+BhG,EAAUN,IACzCwG,GAAmB,iBAEvBA,EAAkBA,EAAgBG,OAG9Bf,EACAY,EAAkBZ,EAAkBtF,EAAW+F,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CSW8BI,CAAenB,EAAMnF,UAAWqF,EAASO,EAAiBN,GAEvEC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB2F,EAAoB,CACpB,MAA2DF,EAAnDd,QAAAA,OAAO,IAAG,QAAK,IAAoCc,EAAlCb,QAAAA,OAAO,IAAG,QAAK,IAAmBa,EAAjBZ,QAAAA,OAAO,IAAG,IAAC,EACrDU,EAAME,gBAAkB,GAAH,OAAMd,EAAO,YAAIC,EAAO,YAAIC,EACrD,CACJ,CCvEA,IAAM0B,GAAwB,WAAH,MAAU,CACjChB,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,EACV,ECCD,SAASgB,GAAkBtQ,EAAQuQ,EAAQ1O,GACvC,IAAK,IAAM6D,KAAO6K,EACTpH,EAAcoH,EAAO7K,KAAUuD,EAAoBvD,EAAK7D,KACzD7B,EAAO0F,GAAO6K,EAAO7K,GAGjC,CAQA,SAAS8K,GAAS3O,EAAOD,EAAaP,GAClC,IACMgO,EAAQ,CAAC,EAMf,OAFAiB,GAAkBjB,EALAxN,EAAMwN,OAAS,CAAC,EAKExN,GACpCxB,OAAOoQ,OAAOpB,EAdlB,SAAgC,EAAuBzN,EAAaP,GAAU,IAA5C+N,EAAiB,EAAjBA,kBAC9B,OAAOzK,EAAAA,EAAAA,UAAQ,WACX,IAAMsK,EAAQoB,KAEd,OADArB,GAAgBC,EAAOrN,EAAa,CAAEkO,4BAA6BzO,GAAY+N,GACxE/O,OAAOoQ,OAAO,CAAC,EAAGxB,EAAMK,KAAML,EAAMI,MAC/C,GAAG,CAACzN,GACR,CAQyB8O,CAAuB7O,EAAOD,EAAaP,IACzDQ,EAAM8O,gBAAkB9O,EAAM8O,gBAAgBtB,GAASA,CAClE,CACA,SAASuB,GAAa/O,EAAOD,EAAaP,GAEtC,IAAMwP,EAAY,CAAC,EACbxB,EAAQmB,GAAS3O,EAAOD,EAAaP,GAoB3C,OAnBIQ,EAAMqD,OAA+B,IAAvBrD,EAAMiP,eAEpBD,EAAUE,WAAY,EAEtB1B,EAAM2B,WACF3B,EAAM4B,iBACF5B,EAAM6B,mBACF,OAEZ7B,EAAM8B,aACa,IAAftP,EAAMqD,KACA,OAAM,cACgB,MAAfrD,EAAMqD,KAAe,IAAM,WAEzBV,IAAnB3C,EAAMuP,WACLvP,EAAMwP,OAASxP,EAAMyP,YAAczP,EAAM0P,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUxB,MAAQA,EACXwB,CACX,CChDA,IAAMW,GAAmB,IAAIxI,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAASyI,GAAkB/L,GACvB,OAAQA,EAAIwD,WAAW,UAClBxD,EAAIwD,WAAW,SAAmB,cAARxD,GAC3BA,EAAIwD,WAAW,WACfxD,EAAIwD,WAAW,UACfxD,EAAIwD,WAAW,UACfsI,GAAiBlJ,IAAI5C,EAC7B,CCtDA,IACiCgM,GAD7BC,GAAgB,SAACjM,GAAG,OAAM+L,GAAkB/L,EAAI,EAoBpD,KAnBiCgM,GAyBLE,QAAQ,0BAA0BpH,WArB1DmH,GAAgB,SAACjM,GAAG,OAAKA,EAAIwD,WAAW,OAASuI,GAAkB/L,GAAOgM,GAAYhM,EAAI,EAwB1F,CADJ,MAAOmM,IACH,CC9BW,SAASC,GAAyBvB,EAAQwB,GACvD,GAAc,MAAVxB,EAAgB,MAAO,CAAC,EAC5B,IACI7K,EAAKuK,EADLjQ,ECHS,SAAuCuQ,EAAQwB,GAC5D,GAAc,MAAVxB,EAAgB,MAAO,CAAC,EAC5B,IAEI7K,EAAKuK,EAFLjQ,EAAS,CAAC,EACVgS,EAAa3R,OAAO4R,KAAK1B,GAE7B,IAAKN,EAAI,EAAGA,EAAI+B,EAAWnR,OAAQoP,IACjCvK,EAAMsM,EAAW/B,GACb8B,EAASpJ,QAAQjD,IAAQ,IAC7B1F,EAAO0F,GAAO6K,EAAO7K,IAEvB,OAAO1F,CACT,CDRe,CAA6BuQ,EAAQwB,GAElD,GAAI1R,OAAO6R,sBAAuB,CAChC,IAAIC,EAAmB9R,OAAO6R,sBAAsB3B,GACpD,IAAKN,EAAI,EAAGA,EAAIkC,EAAiBtR,OAAQoP,IACvCvK,EAAMyM,EAAiBlC,GACnB8B,EAASpJ,QAAQjD,IAAQ,GACxBrF,OAAOC,UAAU8R,qBAAqB5R,KAAK+P,EAAQ7K,KACxD1F,EAAO0F,GAAO6K,EAAO7K,GAEzB,CACA,OAAO1F,CACT,CEbA,SAASqS,GAAWC,EAAQC,EAAQ7F,GAChC,MAAyB,kBAAX4F,EACRA,EACAjH,GAAGvB,UAAUyI,EAAS7F,EAAO4F,EACvC,CCJA,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,qFCDX,SAASE,GAAc1D,EAAO,EAEjBE,EAASyD,EAAUxD,GAAmB,IAFnByD,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOrE,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAASqE,EAAU,EAAVA,WAAU,IAAEC,YAAAA,OAAW,IAAG,IAAC,MAAEC,WAAAA,OAAU,IAAG,IAAC,EAQvG,GALAjE,GAAgBC,EADX,SAC0BE,EAASC,GAKpCwD,EACI3D,EAAMI,MAAM6D,UACZjE,EAAMkE,MAAMD,QAAUjE,EAAMI,MAAM6D,aAF1C,CAMAjE,EAAMkE,MAAQlE,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,IAAQ8D,EAA6BlE,EAA7BkE,MAAO9D,EAAsBJ,EAAtBI,MAAO+D,EAAenE,EAAfmE,WAKlBD,EAAMrJ,YACFsJ,IACA/D,EAAMvF,UAAYqJ,EAAMrJ,kBACrBqJ,EAAMrJ,WAGbsJ,SACa5O,IAAZiK,QAAqCjK,IAAZkK,GAAyBW,EAAMvF,aACzDuF,EAAME,gBFzBd,SAAgC6D,EAAY3E,EAASC,GACjD,IAAM2E,EAAYhB,GAAW5D,EAAS2E,EAAW9J,EAAG8J,EAAW9G,OACzDgH,EAAYjB,GAAW3D,EAAS0E,EAAW7J,EAAG6J,EAAW5G,QAC/D,MAAO,GAAP,OAAU6G,EAAS,YAAIC,EAC3B,CEqBgCC,CAAuBH,OAAwB5O,IAAZiK,EAAwBA,EAAU,QAAiBjK,IAAZkK,EAAwBA,EAAU,UAG1HlK,IAAVqO,IACAM,EAAM7J,EAAIuJ,QACArO,IAAVsO,IACAK,EAAM5J,EAAIuJ,QAEKtO,IAAfuO,GD3BR,SAAsBI,EAAOtS,GAAqD,IAA7C2S,EAAU,UAAH,6CAAG,EAAGjB,EAAS,UAAH,6CAAG,EAAGkB,IAAc,UAAH,+CAErEN,EAAMJ,WAAa,EAGnB,IAAMd,EAAOwB,EAAcjB,GAAWE,GAEtCS,EAAMlB,EAAKM,QAAUlH,GAAGvB,WAAWyI,GAEnC,IAAMQ,EAAa1H,GAAGvB,UAAUjJ,GAC1BmS,EAAc3H,GAAGvB,UAAU0J,GACjCL,EAAMlB,EAAKQ,OAAS,GAAH,OAAMM,EAAU,YAAIC,EACzC,CCgBQU,CAAaP,EAAOJ,EAAYC,EAAaC,GAAY,EAzB7D,CA2BJ,CC7CA,IAAMU,GAAuB,WAAH,yBACnBtD,MAAuB,IAC1B8C,MAAO,CAAC,GAAC,ECJPP,GAAW,SAACgB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAIC,aAAuB,ECMhF,SAASC,GAAYjS,EAAOD,EAAamS,EAAWpS,GAChD,IAAMqS,GAAcrP,EAAAA,EAAAA,UAAQ,WACxB,IAAMsK,EAAQ0E,KAEd,OADAhB,GAAc1D,EAAOrN,EAAa,CAAEkO,4BAA4B,GAAS8C,GAASjR,GAAYE,EAAMuN,oBAC7F,kBACAH,EAAMkE,OAAK,IACd9D,OAAO,UAAKJ,EAAMI,QAE1B,GAAG,CAACzN,IACJ,GAAIC,EAAMwN,MAAO,CACb,IAAM4E,EAAY,CAAC,EACnB3D,GAAkB2D,EAAWpS,EAAMwN,MAAOxN,GAC1CmS,EAAY3E,OAAQ,kBAAK4E,GAAcD,EAAY3E,MACvD,CACA,OAAO2E,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAqB,UAAH,8CA2BvC,OA1BkB,SAACxS,EAAWE,EAAOoF,EAAc1D,EAAK,EAAkBlC,GAAa,IAA7B6N,EAAY,EAAZA,aAIhD8E,GAHiBvL,EAAe9G,GAChCmS,GACAlD,IAC6B/O,EAAOqN,EAAc7N,EAAUM,GAC5DyS,EToBd,SAAqBvS,EAAOwS,EAAOF,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAM1O,KAAO7D,EAQF,WAAR6D,GAA4C,kBAAjB7D,EAAMyS,SAEjC3C,GAAcjM,KACU,IAAvByO,GAA+B1C,GAAkB/L,KAChD2O,IAAU5C,GAAkB/L,IAE7B7D,EAAiB,WAAK6D,EAAIwD,WAAW,aACtCkL,EAAc1O,GAAO7D,EAAM6D,IAGnC,OAAO0O,CACX,CSzC8BG,CAAY1S,EAA4B,kBAAdF,EAAwBwS,GAClEK,GAAe,0BACdJ,GACAJ,GAAW,IACdzQ,IAAAA,IAOIkR,EAAa5S,EAAb4S,SACFC,GAAmB/P,EAAAA,EAAAA,UAAQ,kBAAOwE,EAAcsL,GAAYA,EAAS3U,MAAQ2U,CAAQ,GAAG,CAACA,IAI/F,OAHIxN,IACAuN,EAAa,sBAAwBvN,IAElC0N,EAAAA,EAAAA,eAAchT,GAAW,kBACzB6S,GAAY,IACfC,SAAUC,IAElB,CAEJ,CChCA,IAAME,GAAc,SAACC,GAAG,OAAKA,EAAIC,QAAQ,kBAAmB,SAASjB,aAAa,ECHlF,SAASkB,GAAWC,EAAS,EAAiBC,EAAWC,GAAY,IAAtC7F,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAGlC,IAAK,IAAM5J,KAFXrF,OAAOoQ,OAAOuE,EAAQ3F,MAAOA,EAAO6F,GAAcA,EAAWC,oBAAoBF,IAE/D3F,EACd0F,EAAQ3F,MAAM+F,YAAY1P,EAAK4J,EAAK5J,GAE5C,CCHA,IAAM2P,GAAsB,IAAIrM,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASsM,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAMxP,KADXqP,GAAWC,EAASO,OAAa/Q,EAAW0Q,GAC1BK,EAAYpC,MAC1B6B,EAAQS,aAAcJ,GAAoB/M,IAAI5C,GAA0BA,EAAnBkP,GAAYlP,GAAY6P,EAAYpC,MAAMzN,GAEvG,CCNA,SAASgQ,GAA4B7T,EAAO8T,GACxC,IAAQtG,EAAUxN,EAAVwN,MACFuG,EAAY,CAAC,EACnB,IAAK,IAAMlQ,KAAO2J,GACVlG,EAAckG,EAAM3J,KACnBiQ,EAAUtG,OAASlG,EAAcwM,EAAUtG,MAAM3J,KAClDuD,EAAoBvD,EAAK7D,MACzB+T,EAAUlQ,GAAO2J,EAAM3J,IAG/B,OAAOkQ,CACX,CCXA,SAASF,GAA4B7T,EAAO8T,GACxC,IAAMC,EAAYC,GAA8BhU,EAAO8T,GACvD,IAAK,IAAMjQ,KAAO7D,EAAO,CACrB,GAAIsH,EAActH,EAAM6D,KAASyD,EAAcwM,EAAUjQ,IAErDkQ,EAD0B,MAARlQ,GAAuB,MAARA,EAAc,OAASA,EAAIoQ,cAAgBpQ,GACrD7D,EAAM6D,EAErC,CACA,OAAOkQ,CACX,CCZA,SAASG,GAAwBlU,EAAOmU,EAAY/N,GAAkD,IAA1CgO,EAAgB,UAAH,6CAAG,CAAC,EAAGC,EAAkB,UAAH,6CAAG,CAAC,EAsB/F,MAlB0B,oBAAfF,IACPA,EAAaA,OAAsBxR,IAAXyD,EAAuBA,EAASpG,EAAMoG,OAAQgO,EAAeC,IAM/D,kBAAfF,IACPA,EAAanU,EAAMwC,UAAYxC,EAAMwC,SAAS2R,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBxR,IAAXyD,EAAuBA,EAASpG,EAAMoG,OAAQgO,EAAeC,IAElFF,CACX,CCvBA,IAAMG,GAAoB,SAAC1S,GACvB,OAAOC,MAAMC,QAAQF,EACzB,ECAM2S,GAAgB,SAAC3S,GACnB,OAAOW,QAAQX,GAAkB,kBAANA,GAAkBA,EAAE4S,KAAO5S,EAAE6S,QAC5D,EACMC,GAA+B,SAAC9S,GAElC,OAAO0S,GAAkB1S,GAAKA,EAAEA,EAAE5C,OAAS,IAAM,EAAI4C,CACzD,ECAA,SAAS+S,GAAmB1V,GACxB,IAAM2V,EAAiBtN,EAAcrI,GAASA,EAAMhB,MAAQgB,EAC5D,OAAOsV,GAAcK,GACfA,EAAeH,UACfG,CACV,C,sCCMA,IAAMC,GAAqB,SAACC,GAAM,OAAK,SAAC9U,EAAOR,GAC3C,IAAMkD,GAAUvC,EAAAA,EAAAA,YAAWT,GACrBY,GAAkBH,EAAAA,EAAAA,YAAWI,EAAAA,GAC7BwU,EAAO,WAAH,OAbd,SAAmB,EAA8D/U,EAAO0C,EAASpC,GAAiB,IAA7FuT,EAA2B,EAA3BA,4BAA6BmB,EAAiB,EAAjBA,kBAAmBC,EAAO,EAAPA,QAC3D7H,EAAQ,CACVC,aAAc6H,GAAiBlV,EAAO0C,EAASpC,EAAiBuT,GAChEH,YAAasB,KAKjB,OAHIC,IACA7H,EAAMvH,MAAQ,SAACD,GAAQ,OAAKqP,EAAQjV,EAAO4F,EAAUwH,EAAM,GAExDA,CACX,CAIuB+H,CAAUL,EAAQ9U,EAAO0C,EAASpC,EAAgB,EACrE,OAAOd,EAAWuV,KAAS1P,EAAAA,EAAAA,GAAY0P,EAC3C,CAAC,EACD,SAASG,GAAiBlV,EAAO0C,EAASpC,EAAiB8U,GACvD,IAAM3C,EAAS,CAAC,EACV4C,EAAeD,EAAmBpV,EAAO,CAAC,GAChD,IAAK,IAAM6D,KAAOwR,EACd5C,EAAO5O,GAAO8Q,GAAmBU,EAAaxR,IAElD,IAAM/C,EAAqBd,EAArBc,QAASqB,EAAYnC,EAAZmC,QACTmT,EAA0BpT,EAAsBlC,GAChDuV,EAAkBjT,EAActC,GAClC0C,GACA6S,IACCD,IACiB,IAAlBtV,EAAM4C,eACUD,IAAZ7B,IACAA,EAAU4B,EAAQ5B,cACN6B,IAAZR,IACAA,EAAUO,EAAQP,UAE1B,IAAIqT,IAA4BlV,IACE,IAA5BA,EAAgBQ,QAGhB2U,GADND,EAA4BA,IAAyC,IAAZ1U,GACRqB,EAAUrB,EACvD2U,GACwB,mBAAjBA,IACN1T,EAAoB0T,KACR5T,MAAMC,QAAQ2T,GAAgBA,EAAe,CAACA,IACtDC,SAAQ,SAACvB,GACV,IAAMwB,EAAWzB,GAAwBlU,EAAOmU,GAChD,GAAKwB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8BzX,GAAWwX,EAA1BE,WAAqB,GAAKF,EAAQ,KACzD,IAAK,IAAM9R,KAAO1F,EAAQ,CACtB,IAAI2X,EAAc3X,EAAO0F,GACzB,GAAIhC,MAAMC,QAAQgU,GAQdA,EAAcA,EAHAN,EACRM,EAAY9W,OAAS,EACrB,GAGU,OAAhB8W,IACArD,EAAO5O,GAAOiS,EAEtB,CACA,IAAK,IAAMjS,KAAO+R,EACdnD,EAAO5O,GAAO+R,EAAc/R,EAnBtB,CAoBd,IAEJ,OAAO4O,CACX,CCvEA,IAAMsD,GAAkB,CACpBrR,eAAgBmQ,GAAmB,CAC/BhB,4BAA6BA,GAC7BmB,kBAAmBlD,GACnBmD,QAAS,SAACjV,EAAO4F,EAAU,GAAkC,IAAhC8N,EAAW,EAAXA,YAAarG,EAAY,EAAZA,aACtC,IACIqG,EAAYnC,WAEJ,oBADG3L,EAASoQ,QAEVpQ,EAASoQ,UACTpQ,EAASqQ,uBAUvB,CARA,MAAOC,GAEHxC,EAAYnC,WAAa,CACrB9J,EAAG,EACHC,EAAG,EACH+C,MAAO,EACPE,OAAQ,EAEhB,CACAmG,GAAc4C,EAAarG,EAAc,CAAEY,4BAA4B,GAAS8C,GAASnL,EAASuQ,SAAUnW,EAAMuN,mBAClHkG,GAAU7N,EAAU8N,EACxB,KC1BF0C,GAAmB,CACrB1R,eAAgBmQ,GAAmB,CAC/BhB,4BAAAA,GACAmB,kBAAmBxG,M,+CCP3B,SAAS6H,GAAYlY,EAAQmY,EAAWC,GAAsC,IAA7BjJ,EAAU,UAAH,6CAAG,CAAEkJ,SAAS,GAElE,OADArY,EAAOsY,iBAAiBH,EAAWC,EAASjJ,GACrC,kBAAMnP,EAAOuY,oBAAoBJ,EAAWC,EAAQ,CAC/D,CCHA,IAAMI,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAAY,UAAH,6CAAG,OACzC,MAAO,CACHC,MAAO,CACHzP,EAAGmP,EAAMK,EAAY,KACrBvP,EAAGkP,EAAMK,EAAY,MAGjC,CACA,ICVIE,GDUEC,GAAiB,SAACb,GACpB,OAAO,SAACK,GAAK,OAAKD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,GAAO,CACxF,EETA,SAASS,GAAgBlZ,EAAQmY,EAAWC,EAASjJ,GACjD,OAAO+I,GAAYlY,EAAQmY,EAAWc,GAAeb,GAAUjJ,EACnE,EDJA,SAAW6J,GACPA,EAAuB,QAAI,UAC3BA,EAAqB,MAAI,aACzBA,EAAmB,IAAI,WACvBA,EAAoB,KAAI,YACxBA,EAAqB,MAAI,aACzBA,EAAsB,OAAI,cAC1BA,EAAoB,KAAI,MAC3B,CARD,CAQGA,KAAkBA,GAAgB,CAAC,IEFtC,IAAMG,GAAmB,SAACC,EAAGC,GAAC,OAAK,SAAC5V,GAAC,OAAK4V,EAAED,EAAE3V,GAAG,GAC3C6V,GAAO,WAAH,2BAAOC,EAAY,yBAAZA,EAAY,uBAAKA,EAAaC,OAAOL,GAAiB,ECRvE,SAASM,GAAWvV,GAChB,IAAIwV,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAOxV,EAJM,WACbwV,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAc3U,GACnB,IAAIwU,GAAO,EACX,GAAa,MAATxU,EACAwU,EAAOE,UAEN,GAAa,MAAT1U,EACLwU,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,C,IClDMC,GAAO,WACT,WAAYC,IAAM,gBACdnZ,KAAKoZ,WAAY,EACjBpZ,KAAKmZ,KAAOA,CAChB,CACY,OADX,+BACD,WAAW,KAAC,EALH,GCMb,SAASE,GAAcF,EAAMG,GACzB,IAAMnC,EAAY,WAAamC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOpB,GAAgBiB,EAAK1X,QAAS0V,GAXjB,SAACM,EAAO+B,GACxB,GAAmB,UAAf/B,EAAM5O,OAAoBmQ,KAA9B,CAEA,IAAMnY,EAAQsY,EAAKM,WACfN,EAAK/W,gBAAkBvB,EAAM6Y,YAC7BP,EAAK/W,eAAeuX,UAAU3B,GAAc4B,MAAON,GAEnDzY,EAAM0Y,IACN1Y,EAAM0Y,GAAc9B,EAAO+B,EANrB,CAQd,GAC6D,CACzDnC,SAAU8B,EAAKM,WAAWF,IAElC,CAAC,IACKM,GAAY,wGAID,OAJC,8BACd,WACI7Z,KAAK2G,QAAU2R,GAAKe,GAAcrZ,KAAKmZ,MAAM,GAAOE,GAAcrZ,KAAKmZ,MAAM,GACjF,GAAC,qBACD,WAAY,KAAC,EAJC,CAASD,ICnBrBY,GAAY,4CACd,aAAc,MAEY,OAFZ,iBACV,eAASla,YACJ0Z,UAAW,EAAM,CAC1B,CA6Ba,OA7BZ,gCACD,WACI,IAAIS,GAAiB,EAOrB,IACIA,EAAiB/Z,KAAKmZ,KAAK1X,QAAQuY,QAAQ,iBAI/C,CAFA,MAAOjD,GACHgD,GAAiB,CACrB,CACKA,GAAmB/Z,KAAKmZ,KAAK/W,iBAElCpC,KAAKmZ,KAAK/W,eAAeuX,UAAU3B,GAAciC,OAAO,GACxDja,KAAKsZ,UAAW,EACpB,GAAC,oBACD,WACStZ,KAAKsZ,UAAatZ,KAAKmZ,KAAK/W,iBAEjCpC,KAAKmZ,KAAK/W,eAAeuX,UAAU3B,GAAciC,OAAO,GACxDja,KAAKsZ,UAAW,EACpB,GAAC,mBACD,WAAQ,WACJtZ,KAAK2G,QAAU2R,GAAKpB,GAAYlX,KAAKmZ,KAAK1X,QAAS,SAAS,kBAAM,EAAKyY,SAAS,IAAGhD,GAAYlX,KAAKmZ,KAAK1X,QAAS,QAAQ,kBAAM,EAAK0Y,QAAQ,IACjJ,GAAC,qBACD,WAAY,KAAC,EAjCC,CAASjB,ICErBkB,GAAgB,SAAhBA,EAAiBrZ,EAAQsZ,GAC3B,QAAKA,IAGItZ,IAAWsZ,GAITD,EAAcrZ,EAAQsZ,EAAMC,eAE3C,ECjBMC,GAAO,SAACC,GAAG,OAAKA,CAAG,ECUzB,SAASC,GAA0BvX,EAAMkU,GACrC,GAAKA,EAAL,CAEA,IAAMsD,EAAwB,IAAIC,aAAa,UAAYzX,GAC3DkU,EAAQsD,EAAuB7C,GAAiB6C,GAFtC,CAGd,CAAC,IACKE,GAAY,4CACd,aAAc,MAkDR,OAlDQ,iBACV,eAAShb,YACJib,qBAAuBN,GAC5B,EAAKO,mBAAqBP,GAC1B,EAAKQ,0BAA4BR,GACjC,EAAKS,kBAAoB,SAACC,EAAYC,GAElC,GADA,EAAKJ,sBACD,EAAKK,WAAT,CAEA,IAAMta,EAAQ,EAAKsY,KAAKM,WAalB2B,EAA0BlD,GAAgBhW,OAAQ,aAZhC,SAACmZ,EAAUC,GAC/B,GAAK,EAAKC,gBAAV,CAEA,MAA+B,EAAKpC,KAAKM,WAAjCpJ,EAAK,EAALA,MAAOmL,EAAW,EAAXA,YAKdpB,GAAc,EAAKjB,KAAK1X,QAAS4Z,EAASrc,QAErCqR,GAASA,EAAMgL,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EAPjC,CASd,GACsF,CAAEjE,UAAWxW,EAAMwP,OAASxP,EAAmB,eAC/H4a,EAA8BvD,GAAgBhW,OAAQ,iBAAiB,SAACwZ,EAAaC,GAAU,OAAK,EAAKC,YAAYF,EAAaC,EAAW,GAAE,CAAEtE,UAAWxW,EAAM2a,aAAe3a,EAAuB,mBAC9M,EAAKia,mBAAqBxC,GAAK8C,EAAyBK,GACxD,EAAKI,WAAWZ,EAAYC,EAjBlB,CAkBd,EACA,EAAKY,qBAAuB,WACxB,IAcMC,EAAwB7E,GAAY,EAAKiC,KAAK1X,QAAS,WAdvC,SAACua,GACnB,GAAyB,UAArBA,EAAatX,MAAmB,EAAKyW,WAAzC,CAOA,EAAKL,qBACL,EAAKA,mBAAqB5D,GAAY,EAAKiC,KAAK1X,QAAS,SANrC,SAACwa,GACM,UAAnBA,EAAWvX,KAAoB,EAAK6W,iBAExCd,GAA0B,KAAM,EAAKtB,KAAKM,WAAWpJ,MACzD,IAGAoK,GAA0B,QAAQ,SAAChD,EAAO+B,GACtC,EAAKqC,WAAWpE,EAAO+B,EAC3B,GAVU,CAWd,IAOM0C,EAAqBhF,GAAY,EAAKiC,KAAK1X,QAAS,QALvC,WACV,EAAK0Z,YAEVV,GAA0B,UAAU,SAACiB,EAAaC,GAAU,OAAK,EAAKC,YAAYF,EAAaC,EAAW,GAC9G,IAEA,EAAKZ,0BAA4BzC,GAAKyD,EAAuBG,EACjE,EAAE,CACN,CAqCC,OArCA,mCACD,SAAWzE,EAAO+B,GACdxZ,KAAKmb,YAAa,EAClB,MAAiCnb,KAAKmZ,KAAKM,WAAnCnJ,EAAU,EAAVA,WAAoB,EAARC,UAIJvQ,KAAKmZ,KAAK/W,gBACtBpC,KAAKmZ,KAAK/W,eAAeuX,UAAU3B,GAAcmE,KAAK,GAE1D7L,GAAcA,EAAWmH,EAAO+B,EACpC,GAAC,2BACD,WAOI,OANAxZ,KAAK8a,qBACL9a,KAAKmb,YAAa,EACJnb,KAAKmZ,KAAKM,WACdlJ,UAAYvQ,KAAKmZ,KAAK/W,gBAC5BpC,KAAKmZ,KAAK/W,eAAeuX,UAAU3B,GAAcmE,KAAK,IAElDnD,IACZ,GAAC,yBACD,SAAYvB,EAAO+B,GACf,GAAKxZ,KAAKub,gBAAV,CAEA,IAAQC,EAAgBxb,KAAKmZ,KAAKM,WAA1B+B,YACRA,GAAeA,EAAY/D,EAAO+B,EAFxB,CAGd,GAAC,mBACD,WACI,IAAM3Y,EAAQb,KAAKmZ,KAAKM,WAClB2C,EAAwBlE,GAAgBlY,KAAKmZ,KAAK1X,QAAS,cAAezB,KAAKgb,kBAAmB,CAAE3D,UAAWxW,EAAMyP,YAAczP,EAAsB,kBACzJwb,EAAsBnF,GAAYlX,KAAKmZ,KAAK1X,QAAS,QAASzB,KAAK8b,sBACzE9b,KAAK6a,qBAAuBvC,GAAK8D,EAAuBC,EAC5D,GAAC,qBACD,WACIrc,KAAK6a,uBACL7a,KAAK8a,qBACL9a,KAAK+a,2BACT,KAAC,EAzFa,CAAS7B,I,YCXrBoD,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMC,EAAWL,GAAkBxd,IAAI4d,EAAM1d,QAC7C2d,GAAYA,EAASD,EACzB,EACME,GAA2B,SAACC,GAC9BA,EAAQtG,QAAQkG,GACpB,EAoBA,SAASK,GAAoB9I,EAAS7F,EAASwO,GAC3C,IAAMI,EApBV,SAAkC,GAAsB,IAApBC,EAAI,EAAJA,KAAS7O,EAAO,SAC1C8O,EAAaD,GAAQE,SAItBV,GAAUlV,IAAI2V,IACfT,GAAUjV,IAAI0V,EAAY,CAAC,GAE/B,IAAME,EAAgBX,GAAU1d,IAAIme,GAC9BvY,EAAM0Y,KAAKC,UAAUlP,GAQ3B,OAHKgP,EAAczY,KACfyY,EAAczY,GAAO,IAAI4Y,qBAAqBV,IAA0B,QAAEI,KAAAA,GAAS7O,KAEhFgP,EAAczY,EACzB,CAEsC6Y,CAAyBpP,GAG3D,OAFAmO,GAAkB/U,IAAIyM,EAAS2I,GAC/BI,EAA0BS,QAAQxJ,GAC3B,WACHsI,GAAkBmB,OAAOzJ,GACzB+I,EAA0BW,UAAU1J,EACxC,CACJ,CC1CA,IAAM2J,GAAiB,CACnB1a,KAAM,EACN2a,IAAK,GAEHC,GAAa,4CACf,aAAc,MAGY,OAHZ,iBACV,eAASje,YACJke,gBAAiB,EACtB,EAAKC,UAAW,EAAM,CAC1B,CA4Ea,OA3Eb,yCAGA,WAAmB,WAMfC,uBAAsB,WAClB,EAAKF,gBAAiB,EACtB,IAAQG,EAAoB,EAAK9E,KAAKM,WAA9BwE,gBACRA,GAAmBA,EAAgB,MAC/B,EAAK9E,KAAK/W,gBACV,EAAK+W,KAAK/W,eAAeuX,UAAU3B,GAAckG,QAAQ,EAEjE,GACJ,GAAC,2BACD,WAAgB,WACZle,KAAK2G,UACL,IAA8C,EAApB3G,KAAKmZ,KAAKM,WAA5B0E,SAAAA,OAAQ,IAAG,GAAC,EAAC,EACbnB,EAAsEmB,EAAtEnB,KAAcoB,EAAwDD,EAAhE/R,OAAM,EAA0D+R,EAA5CE,OAAAA,OAAM,IAAG,SAAM,EAAEC,EAA2BH,EAA3BG,KAAI,EAAuBH,EAArBI,SAAAA,OAAQ,IAAG,GAAI,EACxE,GAAoC,qBAAzBjB,qBAAX,CAKA,IAAMnP,EAAU,CACZ6O,KAAMA,EAAOA,EAAKvb,aAAU+B,EAC5B4a,WAAAA,EACAI,UAA6B,kBAAXH,EAAsBA,EAASV,GAAeU,IA+BpE,OAAOvB,GAAoB9c,KAAKmZ,KAAK1X,QAAS0M,GA7BjB,SAACuO,GAC1B,IAAQ+B,EAAmB/B,EAAnB+B,eAIR,GAAI,EAAKV,WAAaU,IAEtB,EAAKV,SAAWU,GAKZH,GAASG,IAAkB,EAAKX,gBAApC,CAGSW,IACL,EAAKX,gBAAiB,GAEtB,EAAK3E,KAAK/W,gBACV,EAAK+W,KAAK/W,eAAeuX,UAAU3B,GAAckG,OAAQO,GAM7D,MAA6C,EAAKtF,KAAKM,WAA/CwE,EAAe,EAAfA,gBAAiBS,EAAe,EAAfA,gBACnB/B,EAAW8B,EAAiBR,EAAkBS,EACpD/B,GAAYA,EAASD,EAVrB,CAWJ,GAlCA,CAHQ6B,GACAve,KAAK2e,kBAsCjB,GAAC,mBACD,WACI3e,KAAK4e,eACT,GAAC,oBACD,WACI,GAAoC,qBAAzBtB,qBAAX,CAEA,MAA6Btd,KAAKmZ,KAA1BtY,EAAK,EAALA,MAAO8T,EAAS,EAATA,UACTkK,EAAoB,CAAC,SAAU,SAAU,QAAQ5b,KAO/D,SAAkC,GAAyD,QAAvDkb,SAAAA,OAAQ,IAAG,GAAC,EAAC,2DAAsC,CAAC,EAAC,IAAlCA,SAAUW,OAAY,IAAG,GAAC,EAAC,EAC9E,OAAO,SAAC5b,GAAI,OAAKib,EAASjb,KAAU4b,EAAa5b,EAAK,CAC1D,CAToE6b,CAAyBle,EAAO8T,IACxFkK,GACA7e,KAAK4e,eAJC,CAMd,GAAC,qBACD,WAAY,KAAC,EAjFE,CAAS1F,ICH5B,IAAM8F,GAAoB,CACtBza,OAAQ,CACJ2U,QAAS2E,IAEbxZ,IAAK,CACD6U,QAAS0B,IAEbzW,MAAO,CACH+U,QAASY,IAEb1V,MAAO,CACH8U,QAASW,K,sBChBjB,SAASoF,GAAeC,EAAMC,GAC1B,IAAKzc,MAAMC,QAAQwc,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKtf,OACxB,GAAIuf,IAAeF,EAAKrf,OACpB,OAAO,EACX,IAAK,IAAIoP,EAAI,EAAGA,EAAImQ,EAAYnQ,IAC5B,GAAIkQ,EAAKlQ,KAAOiQ,EAAKjQ,GACjB,OAAO,EAEf,OAAO,CACX,C,eCRMoQ,GAAoB,SAAC5c,GAAC,MAAK,iBAAiBmF,KAAKnF,EAAE,ECAnD6c,GAAoB,SAAC7c,GAAC,MAAK,aAAamF,KAAKnF,EAAE,E,sBCHrD,SAAS8c,GAAcC,EAAKC,IACG,IAAvBD,EAAI7X,QAAQ8X,IACZD,EAAIE,KAAKD,EACjB,CACA,SAASE,GAAWH,EAAKC,GACrB,IAAMG,EAAQJ,EAAI7X,QAAQ8X,GACtBG,GAAS,GACTJ,EAAIK,OAAOD,EAAO,EAC1B,CCRwD,IAElDE,GAAmB,WACrB,cAAc,gBACV9f,KAAK+f,cAAgB,EACzB,CA+BC,OA/BA,4BACD,SAAI3I,GAAS,WAET,OADAmI,GAAcvf,KAAK+f,cAAe3I,GAC3B,kBAAMuI,GAAW,EAAKI,cAAe3I,EAAQ,CACxD,GAAC,oBACD,SAAOgB,EAAGC,EAAG2H,GACT,IAAMC,EAAmBjgB,KAAK+f,cAAclgB,OAC5C,GAAKogB,EAEL,GAAyB,IAArBA,EAIAjgB,KAAK+f,cAAc,GAAG3H,EAAGC,EAAG2H,QAG5B,IAAK,IAAI/Q,EAAI,EAAGA,EAAIgR,EAAkBhR,IAAK,CAKvC,IAAMmI,EAAUpX,KAAK+f,cAAc9Q,GACnCmI,GAAWA,EAAQgB,EAAGC,EAAG2H,EAC7B,CAER,GAAC,qBACD,WACI,OAAOhgB,KAAK+f,cAAclgB,MAC9B,GAAC,mBACD,WACIG,KAAK+f,cAAclgB,OAAS,CAChC,KAAC,EAlCoB,GCIzB,SAASqgB,GAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC/D,CCHA,IAAMC,GAAU,SAACvgB,GACb,OAAQwgB,MAAMjX,WAAWvJ,GAC7B,EAMMygB,GAAW,WASb,WAAYC,GAAoB,WAAdrS,EAAU,UAAH,6CAAG,CAAC,GAAC,gBAK1BnO,KAAKygB,QAAU,QAMfzgB,KAAK0gB,UAAY,EAMjB1gB,KAAK2gB,YAAc,EAQnB3gB,KAAK4gB,kBAAmB,EAIxB5gB,KAAK6gB,OAAS,CAAC,EACf7gB,KAAK8gB,gBAAkB,SAACre,GAAqB,IAAlBV,IAAS,UAAH,+CAC7B,EAAKod,KAAO,EAAK1d,QACjB,EAAKA,QAAUgB,EAEf,IAAQse,EAAqBC,GAAAA,EAAAA,MAAdC,EAAcD,GAAAA,EAAAA,UACzB,EAAKL,cAAgBM,IACrB,EAAKP,UAAYK,EACjB,EAAKJ,YAAcM,EACnBC,GAAAA,GAAAA,WAAgB,EAAKC,wBAGrB,EAAKhC,OAAS,EAAK1d,SAAW,EAAKof,OAAOO,QAC1C,EAAKP,OAAOO,OAAOC,OAAO,EAAK5f,SAG/B,EAAKof,OAAOS,gBACZ,EAAKT,OAAOS,eAAeD,OAAO,EAAKjZ,eAGvCrG,GAAU,EAAK8e,OAAOU,eACtB,EAAKV,OAAOU,cAAcF,OAAO,EAAK5f,QAE9C,EASAzB,KAAKmhB,sBAAwB,kBAAMD,GAAAA,GAAAA,WAAgB,EAAKM,cAAc,EAUtExhB,KAAKwhB,cAAgB,YAAY,EAATP,YACF,EAAKN,cACnB,EAAKxB,KAAO,EAAK1d,QACb,EAAKof,OAAOS,gBACZ,EAAKT,OAAOS,eAAeD,OAAO,EAAKjZ,eAGnD,EACApI,KAAKyhB,aAAc,EACnBzhB,KAAKmf,KAAOnf,KAAKyB,QAAU+e,EAC3BxgB,KAAK4gB,iBAAmBP,GAAQrgB,KAAKyB,SACrCzB,KAAK0hB,MAAQvT,EAAQuT,KACzB,CAwNC,OAvND,iCAwCA,SAASC,GACL,OAAO3hB,KAAK4hB,GAAG,SAAUD,EAC7B,GAAC,gBACD,SAAGxK,EAAWwF,GAAU,WACf3c,KAAK6gB,OAAO1J,KACbnX,KAAK6gB,OAAO1J,GAAa,IAAI2I,IAEjC,IAAM+B,EAAc7hB,KAAK6gB,OAAO1J,GAAW2K,IAAInF,GAC/C,MAAkB,WAAdxF,EACO,WACH0K,IAKAX,GAAAA,GAAAA,MAAU,WACD,EAAKL,OAAOO,OAAOW,WACpB,EAAKC,MAEb,GACJ,EAEGH,CACX,GAAC,4BACD,WACI,IAAK,IAAMI,KAAiBjiB,KAAK6gB,OAC7B7gB,KAAK6gB,OAAOoB,GAAeC,OAEnC,GACA,oBAKA,SAAOC,EAAeC,GAClBpiB,KAAKmiB,cAAgBA,EACrBniB,KAAKoiB,kBAAoBA,CAC7B,GACA,iBAeA,SAAI3f,GAAkB,IAAfV,IAAS,UAAH,+CACJA,GAAW/B,KAAKmiB,cAIjBniB,KAAKmiB,cAAc1f,EAAGzC,KAAK8gB,iBAH3B9gB,KAAK8gB,gBAAgBre,EAAGV,EAKhC,GAAC,6BACD,SAAgBod,EAAM1d,EAASsf,GAC3B/gB,KAAKuH,IAAI9F,GACTzB,KAAKmf,KAAOA,EACZnf,KAAK0gB,UAAYK,CACrB,GACA,kBAIA,SAAKte,GACDzC,KAAK8gB,gBAAgBre,GACrBzC,KAAKmf,KAAO1c,EACZzC,KAAKgiB,OACDhiB,KAAKoiB,mBACLpiB,KAAKoiB,mBACb,GACA,iBAOA,WACI,OAAOpiB,KAAKyB,OAChB,GACA,yBAGA,WACI,OAAOzB,KAAKmf,IAChB,GACA,yBAOA,WAEI,OAAOnf,KAAK4gB,iBAEJV,GAAkB7W,WAAWrJ,KAAKyB,SAC9B4H,WAAWrJ,KAAKmf,MAAOnf,KAAK0gB,WAClC,CACV,GACA,mBAYA,SAAM2B,GAAgB,WAElB,OADAriB,KAAKgiB,OACE,IAAIM,SAAQ,SAACC,GAChB,EAAKd,aAAc,EACnB,EAAKzd,UAAYqe,EAAeE,IAAY,KACxC,EAAK1B,OAAO2B,gBACZ,EAAK3B,OAAO2B,eAAenB,QAEnC,IAAGoB,MAAK,WACA,EAAK5B,OAAO6B,mBACZ,EAAK7B,OAAO6B,kBAAkBrB,SAElC,EAAKsB,gBACT,GACJ,GACA,kBAKA,WACQ3iB,KAAKgE,YACLhE,KAAKgE,UAAUge,OACXhiB,KAAK6gB,OAAO+B,iBACZ5iB,KAAK6gB,OAAO+B,gBAAgBvB,UAGpCrhB,KAAK2iB,gBACT,GACA,yBAKA,WACI,QAAS3iB,KAAKgE,SAClB,GAAC,4BACD,WACIhE,KAAKgE,UAAY,IACrB,GACA,qBASA,WACIhE,KAAK6iB,iBACL7iB,KAAKgiB,OACDhiB,KAAKoiB,mBACLpiB,KAAKoiB,mBAEb,KAAC,EApTY,GAsTjB,SAASU,GAAYtC,EAAMrS,GACvB,OAAO,IAAIoS,GAAYC,EAAMrS,EACjC,CC/TA,IAAM4U,GAAgB,SAACla,EAAMma,GAAQ,OAAK,SAACvgB,GACvC,OAAOW,QAAS0G,EAASrH,IAAMoH,EAAiBjC,KAAKnF,IAAMA,EAAEyF,WAAWW,IACnEma,GAAY3jB,OAAOC,UAAUC,eAAeC,KAAKiD,EAAGugB,GAC7D,CAAC,EACKC,GAAa,SAACC,EAAOC,EAAOC,GAAK,OAAK,SAAC3gB,GAAM,MAC/C,IAAKqH,EAASrH,GACV,OAAOA,EACX,MAAyBA,EAAE4gB,MAAM1Z,GAAW,gBAArCyO,EAAC,KAAEC,EAAC,KAAE2H,EAAC,KAAE1W,EAAK,KACrB,OAAO,EAAP,cACK4Z,EAAQ7Z,WAAW+O,KAAE,UACrB+K,EAAQ9Z,WAAWgP,KAAE,UACrB+K,EAAQ/Z,WAAW2W,KAAE,uBACLxc,IAAV8F,EAAsBD,WAAWC,GAAS,GAAC,CAE1D,CAAC,ECdKga,IAAU,kBACTna,GAAM,IACTL,UAAW,SAACrG,GAAC,OAAKyG,KAAKQ,MAHN,SAACjH,GAAC,OAAKsG,EAAM,EAAG,IAAKtG,EAAE,CAGX8gB,CAAa9gB,GAAG,IAE3C+gB,GAAO,CACT5b,KAAMmb,GAAc,MAAO,OAC3B3Z,MAAO6Z,GAAW,MAAO,QAAS,QAClCna,UAAW,gBAAG2a,EAAG,EAAHA,IAAKC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,IAAEra,MAAOsa,OAAO,IAAG,IAAC,QAAO,QACrDN,GAAQxa,UAAU2a,GAClB,KACAH,GAAQxa,UAAU4a,GAClB,KACAJ,GAAQxa,UAAU6a,GAClB,KACAla,EAASH,EAAMR,UAAU8a,IACzB,GAAG,GCYX,IAAMC,GAAM,CACRjc,KAAMmb,GAAc,KACpB3Z,MAhCJ,SAAkB3G,GACd,IAAIqhB,EAAI,GACJC,EAAI,GACJ1L,EAAI,GACJD,EAAI,GAmBR,OAjBI3V,EAAE5C,OAAS,GACXikB,EAAIrhB,EAAEuhB,UAAU,EAAG,GACnBD,EAAIthB,EAAEuhB,UAAU,EAAG,GACnB3L,EAAI5V,EAAEuhB,UAAU,EAAG,GACnB5L,EAAI3V,EAAEuhB,UAAU,EAAG,KAInBF,EAAIrhB,EAAEuhB,UAAU,EAAG,GACnBD,EAAIthB,EAAEuhB,UAAU,EAAG,GACnB3L,EAAI5V,EAAEuhB,UAAU,EAAG,GACnB5L,EAAI3V,EAAEuhB,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACL1L,GAAKA,EACLD,GAAKA,GAEF,CACHqL,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAAS5L,EAAG,IAClB/O,MAAO8O,EAAI6L,SAAS7L,EAAG,IAAM,IAAM,EAE3C,EAIItP,UAAW0a,GAAK1a,WC/Bdob,GAAO,CACTtc,KAAMmb,GAAc,MAAO,OAC3B3Z,MAAO6Z,GAAW,MAAO,aAAc,aACvCna,UAAW,YAAwD,IAArDqb,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAS,IAAE/a,MAAOsa,OAAO,IAAG,IAAC,EACxD,MAAQ,QACJ1a,KAAKQ,MAAMya,GACX,KACA/Z,GAAQtB,UAAUW,EAAS2a,IAC3B,KACAha,GAAQtB,UAAUW,EAAS4a,IAC3B,KACA5a,EAASH,EAAMR,UAAU8a,IACzB,GACR,GCbEU,GAAQ,CACV1c,KAAM,SAACnF,GAAC,OAAK+gB,GAAK5b,KAAKnF,IAAMohB,GAAIjc,KAAKnF,IAAMyhB,GAAKtc,KAAKnF,EAAE,EACxD2G,MAAO,SAAC3G,GACJ,OAAI+gB,GAAK5b,KAAKnF,GACH+gB,GAAKpa,MAAM3G,GAEbyhB,GAAKtc,KAAKnF,GACRyhB,GAAK9a,MAAM3G,GAGXohB,GAAIza,MAAM3G,EAEzB,EACAqG,UAAW,SAACrG,GACR,OAAOqH,EAASrH,GACVA,EACAA,EAAElD,eAAe,OACbikB,GAAK1a,UAAUrG,GACfyhB,GAAKpb,UAAUrG,EAC7B,GCpBE8hB,GAAa,OACbC,GAAc,OASpB,SAASC,GAAoBhiB,GACR,kBAANA,IACPA,EAAI,GAAH,OAAMA,IACX,IAAM6Q,EAAS,GACXoR,EAAY,EACZC,EAAa,EACXC,EAASniB,EAAE4gB,MAAMzZ,GACnBgb,IACAF,EAAYE,EAAO/kB,OAGnB4C,EAAIA,EAAEqR,QAAQlK,EAAY2a,IAC1BjR,EAAOoM,KAAI,MAAXpM,GAAM,QAASsR,EAAOC,IAAIP,GAAMlb,UAEpC,IAAM0b,EAAUriB,EAAE4gB,MAAM1Z,GAMxB,OALImb,IACAH,EAAaG,EAAQjlB,OACrB4C,EAAIA,EAAEqR,QAAQnK,EAAY6a,IAC1BlR,EAAOoM,KAAI,MAAXpM,GAAM,QAASwR,EAAQD,IAAI1b,EAAOC,UAE/B,CAAEkK,OAAAA,EAAQoR,UAAAA,EAAWC,WAAAA,EAAYI,UAAWtiB,EACvD,CACA,SAAS2G,GAAM3G,GACX,OAAOgiB,GAAoBhiB,GAAG6Q,MAClC,CACA,SAAS0R,GAAkBzV,GACvB,MAAyCkV,GAAoBlV,GAArD+D,EAAM,EAANA,OAAQoR,EAAS,EAATA,UAAWK,EAAS,EAATA,UACrBE,EAAY3R,EAAOzT,OACzB,OAAO,SAAC4C,GAEJ,IADA,IAAIyiB,EAASH,EACJ9V,EAAI,EAAGA,EAAIgW,EAAWhW,IAC3BiW,EAASA,EAAOpR,QAAQ7E,EAAIyV,EAAYH,GAAaC,GAAavV,EAAIyV,EAChEJ,GAAMxb,UAAUrG,EAAEwM,IAClBxF,EAAShH,EAAEwM,KAErB,OAAOiW,CACX,CACJ,CACA,IAAMC,GAAuB,SAAC1iB,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAM2iB,GAAU,CAAExd,KApDlB,SAAcnF,GACV,IAAIoO,EAAIwU,EACR,OAAQ/E,MAAM7d,IACVqH,EAASrH,MACwB,QAA9BoO,EAAKpO,EAAE4gB,MAAM1Z,UAAgC,IAAPkH,OAAgB,EAASA,EAAGhR,SAAW,KAC3C,QAA9BwlB,EAAK5iB,EAAE4gB,MAAMzZ,UAAgC,IAAPyb,OAAgB,EAASA,EAAGxlB,SAAW,GAChF,CACZ,EA6CwBuJ,MAAAA,GAAO4b,kBAAAA,GAAmBM,kBALlD,SAA2B7iB,GACvB,IAAM8iB,EAASnc,GAAM3G,GAErB,OADoBuiB,GAAkBviB,EAC/B+iB,CAAYD,EAAOV,IAAIM,IAClC,GCnDMM,GAAc,IAAIzd,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS0d,GAAmBjjB,GACxB,MAAsBA,EAAEkjB,MAAM,GAAI,GAAGzb,MAAM,KAAI,gBAAxChH,EAAI,KAAEpD,EAAK,KAClB,GAAa,gBAAToD,EACA,OAAOT,EACX,MAAiB3C,EAAMujB,MAAM1Z,IAAe,GAArCR,GAAuC,aAAjC,GACb,IAAKA,EACD,OAAO1G,EACX,IAAMuH,EAAOlK,EAAMgU,QAAQ3K,EAAQ,IAC/Byc,EAAeH,GAAYne,IAAIpE,GAAQ,EAAI,EAG/C,OAFIiG,IAAWrJ,IACX8lB,GAAgB,KACb1iB,EAAO,IAAM0iB,EAAe5b,EAAO,GAC9C,CACA,IAAM6b,GAAgB,oBAChBC,IAAS,kBACRV,IAAO,IACVE,kBAAmB,SAAC7iB,GAChB,IAAMsjB,EAAYtjB,EAAE4gB,MAAMwC,IAC1B,OAAOE,EAAYA,EAAUlB,IAAIa,IAAoB5hB,KAAK,KAAOrB,CACrE,ICnBEujB,IAAoB,kBACnBtb,IAAgB,IAEnB4Z,MAAAA,GACA2B,gBAAiB3B,GACjB4B,aAAc5B,GACd6B,KAAM7B,GACN8B,OAAQ9B,GAER+B,YAAa/B,GACbgC,eAAgBhC,GAChBiC,iBAAkBjC,GAClBkC,kBAAmBlC,GACnBmC,gBAAiBnC,GACjBwB,OAAAA,GACAY,aAAcZ,KAKZa,GAAsB,SAACjiB,GAAG,OAAKshB,GAAkBthB,EAAI,ECvB3D,SAAS4gB,GAAkB5gB,EAAK5E,GAC5B,IAAI8mB,EAAmBD,GAAoBjiB,GAI3C,OAHIkiB,IAAqBd,KACrBc,EAAmBxB,IAEhBwB,EAAiBtB,kBAClBsB,EAAiBtB,kBAAkBxlB,QACnC0D,CACV,CCTA,IAAMqjB,GAAgB,SAACpkB,GAAC,OAAK,SAACoG,GAAI,OAAKA,EAAKjB,KAAKnF,EAAE,GCK7CqkB,GAAsB,CAAC3d,EAAQkB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT1C,KAAM,SAACnF,GAAC,MAAW,SAANA,CAAY,EACzB2G,MAAO,SAAC3G,GAAC,OAAKA,CAAC,IDObskB,GAAyB,SAACtkB,GAAC,OAAKqkB,GAAoBE,KAAKH,GAAcpkB,GAAG,EEJ1EwkB,GAAa,GAAH,gBAAOH,IAAmB,CAAExC,GAAOc,KAI7C8B,GAAgB,SAACzkB,GAAC,OAAKwkB,GAAWD,KAAKH,GAAcpkB,GAAG,ECM9D,SAAS0kB,GAAelmB,EAAe+T,EAAY/N,GAC/C,IAAMpG,EAAQI,EAAcwY,WAC5B,OAAO1E,GAAwBlU,EAAOmU,OAAuBxR,IAAXyD,EAAuBA,EAASpG,EAAMoG,OAf5F,SAAoBhG,GAChB,IAAMQ,EAAU,CAAC,EAEjB,OADAR,EAAcqS,OAAOiD,SAAQ,SAACzW,EAAO4E,GAAG,OAAMjD,EAAQiD,GAAO5E,EAAMhB,KAAK,IACjE2C,CACX,CAWoG2lB,CAAWnmB,GAP/G,SAAqBA,GACjB,IAAMkf,EAAW,CAAC,EAElB,OADAlf,EAAcqS,OAAOiD,SAAQ,SAACzW,EAAO4E,GAAG,OAAMyb,EAASzb,GAAO5E,EAAMsI,aAAa,IAC1E+X,CACX,CAG+H/X,CAAYnH,GAC3I,C,sCCRA,SAASomB,GAAepmB,EAAeyD,EAAK5E,GACpCmB,EAAcqmB,SAAS5iB,GACvBzD,EAAcsmB,SAAS7iB,GAAK6C,IAAIzH,GAGhCmB,EAAcumB,SAAS9iB,EAAKoe,GAAYhjB,GAEhD,CACA,SAAS2nB,GAAUxmB,EAAe+T,GAC9B,IAAMwB,EAAW2Q,GAAelmB,EAAe+T,GAC/C,EAAyDwB,EAAWvV,EAAcymB,qBAAqBlR,GAAU,GAAS,CAAC,EAAC,IAAtHC,cAAAA,OAAa,IAAG,GAAC,EAAC,EAAsBzX,GAAtB,EAAE0X,WAA0B,UAEpD,IAAK,IAAMhS,KADX1F,GAAS,kBAAKA,GAAWyX,GACC,CAEtB4Q,GAAepmB,EAAeyD,EADhB6Q,GAA6BvW,EAAO0F,IAEtD,CACJ,CAuEA,SAASijB,GAAwBjjB,EAAKgS,GAClC,GAAKA,EAGL,OADwBA,EAAWhS,IAAQgS,EAAoB,SAAKA,GAC7CkR,IAC3B,CCvGA,SAASC,GAAwB/nB,GAC7B,OAAOsD,QAAQ+E,EAAcrI,IAAUA,EAAMgiB,IACjD,CCFA,IACMgG,GAA+B,QAAUlU,GADjB,kBCF1BmU,GAAU,WAAc,EACxBC,GAAY,WAAc,ECK9B,IAAMC,GAAwB,SAACC,GAAO,OAAe,IAAVA,CAAc,ECNnDC,GAAwB,CAC1B1mB,SAAS,GCCP2mB,GAAe,SAACC,GAAM,OAAK,SAACjoB,GAAC,OAAKA,GAAK,GAAMioB,EAAO,EAAIjoB,GAAK,GAAK,EAAIioB,EAAO,GAAK,EAAIjoB,KAAO,CAAC,GCA9FkoB,GAAgB,SAACD,GAAM,OAAK,SAACjoB,GAAC,OAAK,EAAIioB,EAAO,EAAIjoB,EAAE,GCCpDmoB,GAAS,SAACnoB,GAAC,OAAKA,EAAIA,CAAC,EACrBooB,GAAUF,GAAcC,IACxBE,GAAYL,GAAaG,ICgBzBlT,GAAM,SAACuS,EAAMc,EAAIC,GAAQ,OAAMA,EAAWf,EAAOe,EAAWD,EAAKd,CAAI,ECpB3E,SAASgB,GAASxoB,EAAGyoB,EAAGC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD1oB,EAAc,GAATyoB,EAAIzoB,GAAS0oB,EACzBA,EAAI,GACGD,EACPC,EAAI,EAAI,EACD1oB,GAAKyoB,EAAIzoB,IAAM,EAAI,EAAI0oB,GAAK,EAChC1oB,CACX,CCHA,IAAM2oB,GAAiB,SAACnB,EAAMc,EAAIjmB,GAC9B,IAAMumB,EAAWpB,EAAOA,EACxB,OAAO1e,KAAK+f,KAAK/f,KAAKD,IAAI,EAAGxG,GAAKimB,EAAKA,EAAKM,GAAYA,GAC5D,EACME,GAAa,CAACrF,GAAKL,GAAMU,IACzBiF,GAAe,SAAC1mB,GAAC,OAAKymB,GAAWlC,MAAK,SAACne,GAAI,OAAKA,EAAKjB,KAAKnF,EAAE,GAAC,EACnE,SAAS2mB,GAAO9E,GACZ,IAAMzb,EAAOsgB,GAAa7E,GAC1B0D,GAAU5kB,QAAQyF,GAAO,IAAF,OAAMyb,EAAK,yEAClC,IAAI+E,EAAQxgB,EAAKO,MAAMkb,GAKvB,OAJIzb,IAASqb,KAETmF,EDRR,SAAoB,GAAuC,IAArClF,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAW/a,EAAK,EAALA,MAC9C6a,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAMyE,EAAIxE,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrChkB,EAAI,EAAIikB,EAAYwE,EAC1BpF,EAAMmF,GAASxoB,EAAGyoB,EAAG1E,EAAM,EAAI,GAC/BT,EAAQkF,GAASxoB,EAAGyoB,EAAG1E,GACvBR,EAAOiF,GAASxoB,EAAGyoB,EAAG1E,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAKva,KAAKQ,MAAY,IAAN+Z,GAChBC,MAAOxa,KAAKQ,MAAc,IAARga,GAClBC,KAAMza,KAAKQ,MAAa,IAAPia,GACjBra,MAAAA,EAER,CCjBgBggB,CAAWD,IAEhBA,CACX,CACA,IAAME,GAAW,SAAC3B,EAAMc,GACpB,IAAMc,EAAWJ,GAAOxB,GAClB6B,EAASL,GAAOV,GAChBgB,GAAU,UAAKF,GACrB,OAAO,SAAC/mB,GAKJ,OAJAinB,EAAQjG,IAAMsF,GAAeS,EAAS/F,IAAKgG,EAAOhG,IAAKhhB,GACvDinB,EAAQhG,MAAQqF,GAAeS,EAAS9F,MAAO+F,EAAO/F,MAAOjhB,GAC7DinB,EAAQ/F,KAAOoF,GAAeS,EAAS7F,KAAM8F,EAAO9F,KAAMlhB,GAC1DinB,EAAQpgB,MAAQ+L,GAAImU,EAASlgB,MAAOmgB,EAAOngB,MAAO7G,GAC3C+gB,GAAK1a,UAAU4gB,EAC1B,CACJ,EC9BA,SAASC,GAASrY,EAAQtS,GACtB,MAAsB,kBAAXsS,EACA,SAAC7O,GAAC,OAAK4S,GAAI/D,EAAQtS,EAAQyD,EAAE,EAE/B6hB,GAAM1c,KAAK0J,GACTiY,GAASjY,EAAQtS,GAGjB4qB,GAAWtY,EAAQtS,EAElC,CACA,IAAM6qB,GAAW,SAACjC,EAAMc,GACpB,IAAMxD,GAAS,QAAI0C,GACb3C,EAAYC,EAAOrlB,OACnBiqB,EAAalC,EAAK/C,KAAI,SAACkF,EAAU9a,GAAC,OAAK0a,GAASI,EAAUrB,EAAGzZ,GAAG,IACtE,OAAO,SAACxM,GACJ,IAAK,IAAIwM,EAAI,EAAGA,EAAIgW,EAAWhW,IAC3BiW,EAAOjW,GAAK6a,EAAW7a,GAAGxM,GAE9B,OAAOyiB,CACX,CACJ,EACM8E,GAAY,SAAC1Y,EAAQtS,GACvB,IAAMkmB,GAAS,kBAAK5T,GAAWtS,GACzB8qB,EAAa,CAAC,EACpB,IAAK,IAAMplB,KAAOwgB,OACM1hB,IAAhB8N,EAAO5M,SAAsClB,IAAhBxE,EAAO0F,KACpColB,EAAWplB,GAAOilB,GAASrY,EAAO5M,GAAM1F,EAAO0F,KAGvD,OAAO,SAACjC,GACJ,IAAK,IAAMiC,KAAOolB,EACd5E,EAAOxgB,GAAOolB,EAAWplB,GAAKjC,GAElC,OAAOyiB,CACX,CACJ,EACM0E,GAAa,SAACtY,EAAQtS,GACxB,IAAMirB,EAAW7E,GAAQJ,kBAAkBhmB,GACrCkrB,EAAczF,GAAoBnT,GAClC6Y,EAAc1F,GAAoBzlB,GAGxC,OAFuBkrB,EAAYxF,YAAcyF,EAAYzF,WACzDwF,EAAYvF,YAAcwF,EAAYxF,WAE/BrM,GAAKuR,GAASK,EAAY5W,OAAQ6W,EAAY7W,QAAS2W,IAG9DlC,IAAQ,EAAM,mBAAF,OAAqBzW,EAAM,kBAAUtS,EAAM,6KAChD,SAACoB,GAAC,gBAAQA,EAAI,EAAIpB,EAASsS,EAAM,EAEhD,EC7CMqX,GAAW,SAACf,EAAMc,EAAI5oB,GACxB,IAAMsqB,EAAmB1B,EAAKd,EAC9B,OAA4B,IAArBwC,EAAyB,GAAKtqB,EAAQ8nB,GAAQwC,CACzD,ECNMC,GAAY,SAACzC,EAAMc,GAAE,OAAK,SAACtoB,GAAC,OAAKiV,GAAIuS,EAAMc,EAAItoB,EAAE,GAqBvD,SAASkqB,GAAapF,EAAQqF,EAAMC,GAIhC,IAHA,IArBwB/nB,EAqBlBgoB,EAAS,GACTC,EAAeF,IArBJ,kBADO/nB,EAsB+ByiB,EAAO,IApBnDmF,GAEW,kBAAN5nB,EACR6hB,GAAM1c,KAAKnF,GACJ8mB,GAGAK,GAGNlnB,MAAMC,QAAQF,GACZonB,GAEW,kBAANpnB,EACLunB,GAEJK,IAKDM,EAAYzF,EAAOrlB,OAAS,EACzBoP,EAAI,EAAGA,EAAI0b,EAAW1b,IAAK,CAChC,IAAI2b,EAAQF,EAAaxF,EAAOjW,GAAIiW,EAAOjW,EAAI,IAC/C,GAAIsb,EAAM,CACN,IAAMM,EAAiBnoB,MAAMC,QAAQ4nB,GAAQA,EAAKtb,GAAKsb,EACvDK,EAAQtS,GAAKuS,EAAgBD,EACjC,CACAH,EAAO/K,KAAKkL,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO7F,GAAqD,6DAAJ,CAAC,EAAC,IAAzCnc,MAAOiiB,OAAO,IAAG,GAAI,EAAET,EAAI,EAAJA,KAAMK,EAAK,EAALA,MACzDK,EAAcF,EAAMlrB,OAC1BmoB,GAAUiD,IAAgB/F,EAAOrlB,OAAQ,wDACzCmoB,IAAWuC,IAAS7nB,MAAMC,QAAQ4nB,IAASA,EAAK1qB,SAAWorB,EAAc,EAAG,oIAExEF,EAAM,GAAKA,EAAME,EAAc,KAC/BF,GAAQ,QAAIA,GAAOG,UACnBhG,GAAS,QAAIA,GAAQgG,WAEzB,IAAMT,EAASH,GAAapF,EAAQqF,EAAMK,GACpCD,EAAYF,EAAO5qB,OACnBsrB,EAAe,SAAC1oB,GAClB,IAAIwM,EAAI,EACR,GAAI0b,EAAY,EACZ,KAAO1b,EAAI8b,EAAMlrB,OAAS,KAClB4C,EAAIsoB,EAAM9b,EAAI,IADOA,KAKjC,IAAMmc,EAAkBzC,GAASoC,EAAM9b,GAAI8b,EAAM9b,EAAI,GAAIxM,GACzD,OAAOgoB,EAAOxb,GAAGmc,EACrB,EACA,OAAOJ,EACD,SAACvoB,GAAC,OAAK0oB,EAAapiB,EAAMgiB,EAAM,GAAIA,EAAME,EAAc,GAAIxoB,GAAG,EAC/D0oB,CACV,CCpEA,IAAME,GAAa,SAACvC,EAAGwC,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAMxC,GAAK,EAAMyC,EAAK,EAAMD,IAAOxC,EAAI,EAAMwC,GACrGxC,CAAC,EACC0C,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOvR,GACX,IAAMwR,EAAW,SAACC,GAAE,OArBxB,SAAyB1jB,EAAG2jB,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAnd,EAAI,EACR,IAEIkd,EAAWd,GADXe,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAOvjB,GAC7B,EACX4jB,EAAaE,EAGbH,EAAaG,QAEZljB,KAAKmjB,IAAIF,GAAYX,MACxBvc,EAAIwc,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAI,EAE5D,OAAO,SAAC/C,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAIuC,GAAWU,EAASjD,GAAI8C,EAAKE,EAAI,CAC5E,CC7CA,IAAMS,GAAS,SAACnsB,GAAC,OAAK,EAAI8I,KAAKsjB,IAAItjB,KAAKujB,KAAKrsB,GAAG,EAC1CssB,GAAUpE,GAAciE,IACxBI,GAAYvE,GAAasE,ICDzBE,GAAUlB,GAAY,IAAM,KAAM,IAAM,KACxCmB,GAASvE,GAAcsE,IACvBE,GAAY1E,GAAayE,ICEzBE,GAAe,CACjBC,OAAQzS,GACRgO,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACA+D,OAAAA,GACAI,UAAAA,GACAD,QAAAA,GACAG,OAAAA,GACAC,UAAAA,GACAF,QAAAA,GACAK,WCjBe,SAAC7sB,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAMysB,GAAOzsB,GAAK,IAAO,EAAI8I,KAAKgkB,IAAI,GAAI,IAAM9sB,EAAI,IAAI,GDmB3F+sB,GAA6B,SAACnY,GAChC,GAAItS,MAAMC,QAAQqS,GAAa,CAE3BgT,GAAgC,IAAtBhT,EAAWnV,OAAc,2DACnC,eAAyBmV,EAAU,GACnC,OAAO0W,GADE,KAAI,KAAI,KAAI,KAEzB,CACK,MAA0B,kBAAf1W,GAEZgT,QAAuCxkB,IAA7BupB,GAAa/X,GAA2B,wBAAF,OAA0BA,EAAU,MAC7E+X,GAAa/X,IAEjBA,CACX,EACMoY,GAAgB,SAAC7C,GACnB,OAAO7nB,MAAMC,QAAQ4nB,IAA4B,kBAAZA,EAAK,EAC9C,EEvBA,SAAS8C,GAAU,GAAyE,IAA5DC,EAAc,EAAzBD,UAAS,IAAkB9C,KAAAA,OAAI,IAAG,EAAA9B,GAAS,EAAE8E,EAAK,EAALA,MAAK,IAAEC,SAAAA,OAAQ,IAAG,MAAG,EACnFF,GAAiB,QAAIA,GAKrB,IAAMG,EAAkBL,GAAc7C,GAChCA,EAAK1F,IAAIsI,IACTA,GAA2B5C,GAK3Btc,EAAQ,CACVyf,MAAM,EACN5tB,MAAOwtB,EAAe,IAKpBK,EAvBV,SAA8Bpc,EAAQic,GAClC,OAAOjc,EAAOsT,KAAI,SAAC+I,GAAC,OAAKA,EAAIJ,CAAQ,GACzC,CAqB0BK,CAGtBN,GAASA,EAAM1tB,SAAWytB,EAAeztB,OACnC0tB,EA/BV,SAAuBja,GACnB,IAAM2R,EAAY3R,EAAOzT,OACzB,OAAOyT,EAAOuR,KAAI,SAACiJ,EAAQ7e,GAAC,OAAW,IAANA,EAAUA,GAAKgW,EAAY,GAAK,CAAC,GACtE,CA6BU8I,CAAcT,GAAiBE,GACrC,SAASQ,IACL,OAAOlD,GAAY6C,EAAeL,EAAgB,CAC9C/C,KAAM7nB,MAAMC,QAAQ8qB,GACdA,GAvCKna,EAwCSga,EAxCDjF,EAwCiBoF,EAvCrCna,EAAOuR,KAAI,kBAAMwD,GAAUI,EAAS,IAAE5I,OAAO,EAAGvM,EAAOzT,OAAS,MAD3E,IAAuByT,EAAQ+U,CA0C3B,CACA,IAAI8C,EAAe6C,IACnB,MAAO,CACH9O,KAAM,SAAC4J,GAGH,OAFA7a,EAAMnO,MAAQqrB,EAAarC,GAC3B7a,EAAMyf,KAAO5E,GAAK0E,EACXvf,CACX,EACAggB,WAAY,WACRX,EAAepC,UACfC,EAAe6C,GACnB,EAER,CCxDA,IAAME,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAW,GAA4D,IACxEC,EACAC,EAFwE,IAA1DjB,SAAAA,OAAQ,IAAG,MAAG,MAAEkB,OAAAA,OAAM,IAAG,MAAI,MAAEvO,SAAAA,OAAQ,IAAG,IAAC,MAAEwO,KAAAA,OAAI,IAAG,IAAC,EAGvE5G,GAAQyF,GAA0B,IAAdY,GAAoB,8CACxC,IAAIQ,EAAe,EAAIF,EAIvBE,EAAe7lB,EAAMslB,GAAYC,GAAYM,GAC7CpB,EAAWzkB,EAAMolB,GAAaC,GAAaZ,EAAW,KAClDoB,EAAe,GAIfJ,EAAW,SAACK,GACR,IAAMC,EAAmBD,EAAeD,EAClC7N,EAAQ+N,EAAmBtB,EAC3BpV,EAAI0W,EAAmB3O,EACvB9H,EAAI0W,GAAgBF,EAAcD,GAClC5O,EAAI9W,KAAK8lB,KAAKjO,GACpB,OAAOmN,GAAW9V,EAAIC,EAAK2H,CAC/B,EACAyO,EAAa,SAACI,GACV,IACM9N,EADmB8N,EAAeD,EACPpB,EAC3ByB,EAAIlO,EAAQZ,EAAWA,EACvBpJ,EAAI7N,KAAKgkB,IAAI0B,EAAc,GAAK1lB,KAAKgkB,IAAI2B,EAAc,GAAKrB,EAC5D0B,EAAIhmB,KAAK8lB,KAAKjO,GACdgD,EAAIgL,GAAgB7lB,KAAKgkB,IAAI2B,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBX,GAAU,GAAK,EAAI,KACzCe,EAAIlY,GAAKmY,GAAMnL,CACtC,IAMAyK,EAAW,SAACK,GAGR,OAFU3lB,KAAK8lB,KAAKH,EAAerB,KACxBqB,EAAe1O,GAAYqN,EAAW,GACzCU,EACZ,EACAO,EAAa,SAACI,GAGV,OAFU3lB,KAAK8lB,KAAKH,EAAerB,IACIA,EAAWA,GAAvCrN,EAAW0O,GAE1B,GAEJ,IACMA,EAmBV,SAAyBL,EAAUC,EAAYU,GAE3C,IADA,IAAIC,EAASD,EACJlgB,EAAI,EAAGA,EAAIogB,GAAgBpgB,IAChCmgB,GAAkBZ,EAASY,GAAUX,EAAWW,GAEpD,OAAOA,CACX,CAzByBE,CAAgBd,EAAUC,EAD1B,EAAIjB,GAGzB,GADAA,GAAsB,IAClBlN,MAAMuO,GACN,MAAO,CACHU,UAAW,IACXC,QAAS,GACThC,SAAAA,GAIJ,IAAM+B,EAAYrmB,KAAKgkB,IAAI2B,EAAc,GAAKF,EAC9C,MAAO,CACHY,UAAAA,EACAC,QAAwB,EAAfZ,EAAmB1lB,KAAK+f,KAAK0F,EAAOY,GAC7C/B,SAAAA,EAGZ,CACA,IAAM6B,GAAiB,GAQvB,SAASN,GAAgBF,EAAcD,GACnC,OAAOC,EAAe3lB,KAAK+f,KAAK,EAAI2F,EAAeA,EACvD,C,6CClFMa,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAaxhB,EAAS8C,GAC3B,OAAOA,EAAKhO,MAAK,SAACyB,GAAG,YAAsBlB,IAAjB2K,EAAQzJ,EAAkB,GACxD,CAwBA,IAAMkrB,GAAyB,EAI/B,SAASC,GAAO,GAAiD,IAA/CxC,EAAS,EAATA,UAAWyC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAc5hB,EAAO,SACrDmD,EAAS+b,EAAU,GACnBruB,EAASquB,EAAUA,EAAUxtB,OAAS,GAKpCoO,EAAQ,CAAEyf,MAAM,EAAO5tB,MAAOwR,GACpC,EAnCJ,SAA0BnD,GACtB,IAAI6hB,GAAgB,QAChB7P,SAAU,EACVoP,UAAW,IACXC,QAAS,GACTb,KAAM,EACNsB,wBAAwB,GACrB9hB,GAGP,IAAKwhB,GAAaxhB,EAASuhB,KACvBC,GAAaxhB,EAASshB,IAAe,CACrC,IAAMS,EAAU3B,GAAWpgB,IAC3B6hB,GAAgB,0BACTA,GACAE,GAAO,IACV/P,SAAU,EACVwO,KAAM,KAEIsB,wBAAyB,CAC3C,CACA,OAAOD,CACX,CAasFG,CAAiBhiB,GAA3FohB,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASb,EAAI,EAAJA,KAAMxO,EAAQ,EAARA,SAAUqN,EAAQ,EAARA,SAAUyC,EAAsB,EAAtBA,uBAClDG,EAAgBC,GAChBC,EAAkBnQ,GAAaA,EAAW,IAAQ,EAChDyO,EAAeY,GAAW,EAAItmB,KAAK+f,KAAKsG,EAAYZ,IAC1D,SAAS4B,IACL,IAAMC,EAAexxB,EAASsS,EACxBmf,EAAsBvnB,KAAK+f,KAAKsG,EAAYZ,GAAQ,IAQpD+B,EAAkBxnB,KAAKmjB,IAAImE,GAAgB,EAGjD,GAFAT,IAAcA,EAAYW,EAAkB,IAAO,GACnDZ,IAAcA,EAAYY,EAAkB,KAAQ,IAChD9B,EAAe,EAAG,CAClB,IAAM+B,EAAc5B,GAAgB0B,EAAqB7B,GAEzDwB,EAAgB,SAACtH,GACb,IAAM0F,EAAWtlB,KAAK8lB,KAAKJ,EAAe6B,EAAsB3H,GAChE,OAAQ9pB,EACJwvB,IACO8B,EACC1B,EAAe6B,EAAsBD,GACrCG,EACAznB,KAAKsjB,IAAImE,EAAc7H,GACvB0H,EAAetnB,KAAK0nB,IAAID,EAAc7H,GACtD,CACJ,MACK,GAAqB,IAAjB8F,EAELwB,EAAgB,SAACtH,GAAC,OAAK9pB,EACnBkK,KAAK8lB,KAAKyB,EAAsB3H,IAC3B0H,GACIF,EAAkBG,EAAsBD,GACrC1H,EAAE,MAEjB,CAED,IAAM+H,EAAoBJ,EAAsBvnB,KAAK+f,KAAK2F,EAAeA,EAAe,GACxFwB,EAAgB,SAACtH,GACb,IAAM0F,EAAWtlB,KAAK8lB,KAAKJ,EAAe6B,EAAsB3H,GAE1DgI,EAAW5nB,KAAKF,IAAI6nB,EAAoB/H,EAAG,KACjD,OAAQ9pB,EACHwvB,IACK8B,EACE1B,EAAe6B,EAAsBD,GACrCtnB,KAAK6nB,KAAKD,GACVD,EACIL,EACAtnB,KAAK8nB,KAAKF,IAClBD,CACZ,CACJ,CACJ,CAEA,OADAN,IACO,CACHrR,KAAM,SAAC4J,GACH,IAAMrnB,EAAU2uB,EAActH,GAC9B,GAAKmH,EAsBDhiB,EAAMyf,KAAO5E,GAAK0E,MAtBO,CACzB,IAAItY,EAAkBob,EACtB,GAAU,IAANxH,EAMA,GAAI8F,EAAe,EAAG,CAClB,IAAMqC,EAAQ/nB,KAAKD,IAAI,EAAG6f,EAAI8G,IAC9B1a,EAAkBgL,GAAkBze,EAAU2uB,EAAca,GAAQnI,EAAImI,EAC5E,MAEI/b,EAAkB,EAG1B,IAAMgc,EAA2BhoB,KAAKmjB,IAAInX,IAAoB6a,EACxDoB,EAA+BjoB,KAAKmjB,IAAIrtB,EAASyC,IAAYquB,EACnE7hB,EAAMyf,KACFwD,GAA4BC,CACpC,CAKA,OADAljB,EAAMnO,MAAQmO,EAAMyf,KAAO1uB,EAASyC,EAC7BwM,CACX,EACAggB,WAAY,WACRqC,GAAmBA,EAAgB,MAChB,CAACtxB,EAAQsS,GAA3BA,EAAM,KAAEtS,EAAM,KACfuxB,GACJ,EAER,CACAV,GAAOuB,mBAAqB,SAAChZ,EAAGC,GAAC,MAAkB,kBAAND,GAA+B,kBAANC,CAAc,EACpF,IAAMgY,GAAO,SAACgB,GAAE,OAAK,CAAC,E,8JCtIhBC,GAAQ,CACVC,MCPJ,SAAe,GAMmF,QAAlGlE,UAAAA,OAAS,IAAG,GAAC,GAAE,MAAElN,SAAAA,OAAQ,IAAG,IAAC,MAAEqR,MAAAA,OAAK,IAAG,KAAG,MAAEC,aAAAA,OAAY,IAAG,MAAG,MAAE3B,UAAAA,OAAS,IAAG,KAAG,EAAE4B,EAAY,EAAZA,aACvEpgB,EAAS+b,EAAU,GAKnBpf,EAAQ,CAAEyf,MAAM,EAAO5tB,MAAOwR,GAChCqgB,EAAYH,EAAQrR,EAClByR,EAAQtgB,EAASqgB,EACjB3yB,OAA0BwE,IAAjBkuB,EAA6BE,EAAQF,EAAaE,GAOjE,OAFI5yB,IAAW4yB,IACXD,EAAY3yB,EAASsS,GAClB,CACH4N,KAAM,SAAC4J,GACH,IAAM/H,GAAS4Q,EAAYzoB,KAAK8lB,KAAKlG,EAAI2I,GAGzC,OAFAxjB,EAAMyf,OAAS3M,EAAQ+O,GAAa/O,GAAS+O,GAC7C7hB,EAAMnO,MAAQmO,EAAMyf,KAAO1uB,EAASA,EAAS+hB,EACtC9S,CACX,EACAggB,WAAY,WAAQ,EAE5B,EDvBIZ,UAAWA,GACXwE,MAAOxE,GACPwC,OAAAA,IAEJ,SAASiC,GAAYC,EAASvE,GAC1B,OAAOuE,EAAUvE,GAD2B,UAAH,6CAAG,EAEhD,CASA,IAAMwE,GAAY,SAACnwB,GACf,IAAMowB,EAAgB,SAAH,OAAMlR,EAAK,EAALA,MAAK,OAAOlf,EAAOkf,EAAM,EAClD,MAAO,CACHle,MAAO,kBAAMqe,GAAAA,GAAAA,OAAY+Q,GAAe,EAAK,EAC7CjQ,KAAM,kBAAMkQ,GAAAA,GAAAA,OAAkBD,EAAc,EAEpD,EACA,SAASjvB,GAAQ,GAAqO,IAE9OmvB,EAKAC,EAPW5E,EAAQ,EAARA,SAAQ,IAAE6E,OAAAA,OAAM,IAAG,EAAAL,GAAS,MAAED,QAAAA,OAAO,IAAG,IAAC,MAAEO,OAAQC,OAAS,IAAG,IAAC,MAAEC,WAAAA,OAAU,IAAG,SAAM,MAAEC,YAAAA,OAAW,IAAG,IAAC,EAAaC,EAAW,EAAtBrF,UAAS,IAAesF,SAAAA,OAAQ,IAAG,GAAI,EAAEC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,IAAEnqB,KAAAA,OAAI,IAAG,cAAW,EAAKsF,EAAO,SACxO8kB,EAAiBlB,EAEnBmB,EAAc,EACdC,EAAmB3F,EACnB4F,GAAa,EACbC,GAAoB,EAElBC,EAAWhC,GAAMoB,EAAY7yB,OAAS,EAAI,YAAcgJ,IAASwkB,GACjE/b,EAASohB,EAAY,GACrB1zB,EAAS0zB,EAAYA,EAAY7yB,OAAS,GAC5CoO,EAAQ,CAAEyf,MAAM,EAAO5tB,MAAOwR,GAK1B8f,EAAuBkC,EAAvBlC,mBACJA,GAAsBA,EAAmB9f,EAAQtS,KACjDozB,EAAwBtH,GAAY,CAAC,EAAG,KAAM,CAACxZ,EAAQtS,GAAS,CAC5D+J,OAAO,IAEX2pB,EAAc,CAAC,EAAG,MAEtB,IAAM1uB,EAAYsvB,GAAS,kBACpBnlB,GAAO,IACVqf,SAAAA,EACAH,UAAWqF,KAEf,SAASJ,IACLY,IACmB,YAAfV,EAEAT,EA/CZ,SAAwBA,GAA4D,IAAnDvE,EAAW,UAAH,6CAAG,EAAG+F,EAAQ,UAAH,6CAAG,EACnD,OAD0E,UAAH,+CAGjE/F,GAAYuE,EAAUvE,GAAY+F,EADlCzB,GAAYtE,GAAYuE,EAASvE,EAAU+F,EAErD,CA2CsBC,CAAezB,EAASoB,EAAkBV,EADpDY,EAAoBH,EAAc,IAAM,IAIxCnB,EAAUD,GAAYC,EAASoB,EAAkBV,GAC9B,WAAfD,GACAxuB,EAAUiqB,cAElBmF,GAAa,EACbL,GAAYA,GAChB,CAKA,SAASlxB,EAAOkf,GACPsS,IACDtS,GAASA,GACbgR,GAAWhR,EACNqS,IACDnlB,EAAQjK,EAAUkb,KAAKhW,KAAKD,IAAI,EAAG8oB,IAC/BK,IACAnkB,EAAMnO,MAAQsyB,EAAsBnkB,EAAMnO,QAC9CszB,EAAaC,EAAoBplB,EAAMyf,KAAOqE,GAAW,GAE7DiB,GAAYA,EAAS/kB,EAAMnO,OACvBszB,IACoB,IAAhBF,IACAC,OACyB3vB,IAArB2vB,EAAiCA,EAAmBpB,GAExDmB,EAAcX,EAxE9B,SAA+BR,EAASvE,EAAU+F,EAAOF,GACrD,OAAOA,EAAoBtB,GAAWvE,EAAW+F,EAAQxB,IAAYwB,CACzE,CAuEgBE,CAAsB1B,EAASoB,EAAkBV,EAAaY,IAAsBf,KApB5FH,GAAkBA,EAAenQ,OACjC8Q,GAAcA,KAyBlB,CAOA,OADAH,IAJIC,GAAUA,KACVT,EAAiBE,EAAOxwB,IACTgB,SAGZ,CACHmf,KAAM,WACF6Q,GAAUA,IACVV,GAAkBA,EAAenQ,MACrC,EAgBI0R,gBAAY5K,GACZiJ,EAAUkB,EACVpxB,EAAOinB,EACX,EAMA6K,OAAQ,SAAC7K,GACLiJ,EAAUkB,EACV,IAAMW,EAAmBpG,GAAgC,kBAAbA,EACtCtkB,KAAKD,IAAe,GAAXukB,EAAgB,IACzB,GACFqG,EAAgB,EAEpB,IADAhyB,EAAO,GACAgyB,GAAiB/K,GAAG,CACvB,IAAMgL,EAAYhL,EAAI+K,EACtBhyB,EAAOqH,KAAKF,IAAI8qB,EAAWF,IAC3BC,GAAiBD,CACrB,CACA,OAAO3lB,CACX,EAER,CEjJA,IAAM8lB,GAAsB,SAAH,uBAAK3b,EAAC,KAAEC,EAAC,KAAE2H,EAAC,KAAEiP,EAAC,kCAAsB7W,EAAC,aAAKC,EAAC,aAAK2H,EAAC,aAAKiP,EAAC,MAC3E+E,GAAuB,CACzBhH,OAAQ,SACRzC,KAAM,OACNhC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACX8D,OAAQwH,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CrH,QAASqH,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1ClH,OAAQkH,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDnH,QAASmH,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASE,GAAwB5L,GAC7B,GAAKA,EAEL,OAAO3lB,MAAMC,QAAQ0lB,GACf0L,GAAoB1L,GACpB2L,GAAqB3L,EAC/B,CCvBA,IAAM6L,GAAe,CACjBC,MAAO,kBAAM90B,OAAOE,eAAeC,KAAK40B,QAAQ90B,UAAW,UAAU,GAEnE+0B,GAAU,CAAC,EACXC,GAAW,CAAC,EAClB,eAIIA,GAAS5vB,GAAO,WAGZ,YAFqBlB,IAAjB6wB,GAAQ3vB,KACR2vB,GAAQ3vB,GAAOwvB,GAAaxvB,MACzB2vB,GAAQ3vB,EACnB,CACJ,EANA,IAAK,IAAMA,MAAOwvB,GAAY,O,iCCExBK,GAAoB,IAAIvsB,IAAI,CAAC,YAM7BwsB,GAAc,GACpB,SAASC,GAA2B30B,EAAO40B,EAAW,GAAU,EAAR1B,SAAoC,IAA1BF,EAAU,EAAVA,WAAe3kB,EAAO,SAMpF,KAL+BmmB,GAASH,SACpCI,GAAkBjtB,IAAIotB,KACrBvmB,EAAQskB,aACc,WAAvBtkB,EAAQqkB,YACY,IAApBrkB,EAAQqhB,SAER,OAAO,EACX,IFzB4BnH,EEyBtBgF,EAAiDlf,EAAjDkf,UAAS,EAAwClf,EAAtCqf,SAAAA,OAAQ,IAAG,MAAG,IAAwBrf,EAAtB4jB,QAAAA,OAAO,IAAG,IAAC,EAAExH,EAASpc,EAAToc,KAI9C,GAAqB,WAAjBpc,EAAQtF,UF7BgBwf,EE6B6Bla,EAAQoc,OF3B7D7nB,MAAMC,QAAQ0lB,IACK,kBAAXA,GAAuB2L,GAAqB3L,IE0BgB,CAKpE,GAAIla,EAAQmkB,SAAWqC,IACnB,OASJ,IARA,IAAMC,EAAkB5xB,IAAQ,kBAAKmL,GAAO,IAAE4jB,QAAS,KACnD9jB,EAAQ,CAAEyf,MAAM,EAAO5tB,MAAOutB,EAAU,IACtCwH,EAAwB,GAK1B/L,EAAI,GACA7a,EAAMyf,MAAQ5E,EAAI,KACtB7a,EAAQ2mB,EAAgBjB,OAAO7K,GAC/B+L,EAAsBnV,KAAKzR,EAAMnO,OACjCgpB,GAAK0L,GAETnH,EAAYwH,EACZrH,EAAW1E,EAAI0L,GACfjK,EAAO,QACX,CACA,IAAMvmB,ECnDV,SAAsBgQ,EAAS0gB,EAAWrH,GAAwF,+DAAJ,CAAC,EAAC,IAAzEkG,MAAAA,OAAK,IAAG,IAAC,EAAE/F,EAAQ,EAARA,SAAQ,IAAE8E,OAAAA,OAAM,IAAG,IAAC,MAAEE,WAAAA,OAAU,IAAG,SAAM,EAAEjI,EAAI,EAAJA,KAAMgD,EAAK,EAALA,MAC/G,OAAOvZ,EAAQhR,SAAO,gBAAI0xB,EAAYrH,IAAS,mBAAUE,GAAK,GAAI,CAC9DgG,MAAAA,EACA/F,SAAAA,EACAnF,OAAQ4L,GAAwB1J,GAChCpE,KAAM,OACN2O,WAAYxC,EAAS,EACrByC,UAA0B,YAAfvC,EAA2B,YAAc,UAE5D,CD0CsBwC,CAAal1B,EAAM4hB,MAAMjgB,QAASizB,EAAWrH,GAAW,kBACnElf,GAAO,IACVolB,OAAQxB,EACRvE,SAAAA,EASAjD,KAAMA,KAkBV,OARAvmB,EAAUixB,SAAW,WACjBn1B,EAAMyH,IE5Ed,SAA0B8lB,EAAW,GAAiC,IAA/BiF,EAAM,EAANA,OAAM,IAAEE,WAI3C,OAAOnF,EAHOiF,GAAyB,eADc,IAAG,SAAM,IACbA,EAAS,IAAM,EAC1D,EACAjF,EAAUxtB,OAAS,EAE7B,CFuEkBq1B,CAAiB7H,EAAWlf,IACtC+S,GAAAA,GAAAA,QAAY,kBAAMld,EAAUmxB,QAAQ,IACpCrC,GAAcA,GAClB,EAIO,CACCY,kBACA,OAAO1vB,EAAU0vB,aAAe,CACpC,EACIA,gBAAY5K,GACZ9kB,EAAU0vB,YAAc5K,CAC5B,EACA9G,KAAM,WASF,IAAQ0R,EAAgB1vB,EAAhB0vB,YACR,GAAIA,EAAa,CACb,IAAMkB,EAAkB5xB,IAAQ,kBAAKmL,GAAO,IAAEwkB,UAAU,KACxD7yB,EAAMs1B,gBAAgBR,EAAgBjB,OAAOD,EAAcc,IAAa10B,MAAO80B,EAAgBjB,OAAOD,GAAa5zB,MAAO00B,GAC9H,CACAtT,GAAAA,GAAAA,QAAY,kBAAMld,EAAUmxB,QAAQ,GACxC,EAER,CGtGA,SAAS5B,GAAM5W,EAAU0Y,GACrB,IAAMxyB,EAAQyyB,YAAYC,MACpBC,EAAe,SAAfA,EAAY,GAAsB,IAC9BzD,EADuB,EAAT9Q,UACQpe,EACxBkvB,GAAWsD,IACXnD,GAAAA,GAAAA,KAAgBsD,GAChB7Y,EAASoV,EAAUsD,GAE3B,EAEA,OADAnU,GAAAA,GAAAA,KAAUsU,GAAc,GACjB,kBAAMtD,GAAAA,GAAAA,KAAgBsD,EAAa,CAC9C,CCdA,SAASC,GAAuB,GAA+C,IAA7CpI,EAAS,EAATA,UAAW0E,EAAO,EAAPA,QAASiB,EAAQ,EAARA,SAAUF,EAAU,EAAVA,WACtD4C,EAAW,WACb1C,GAAYA,EAAS3F,EAAUA,EAAUxtB,OAAS,IAClDizB,GAAcA,GAClB,EACA,OAAOf,EAAU,CAAE/P,KAAMuR,GAAMmC,GAAW3D,IAAa2D,GAC3D,CCRA,IAAMC,GAAoB,WAAH,MAAU,CAC7B9sB,KAAM,SACN0mB,UAAW,IACXC,QAAS,GACTO,UAAW,GACd,EACK6F,GAAyB,SAAC52B,GAAM,MAAM,CACxC6J,KAAM,SACN0mB,UAAW,IACXC,QAAoB,IAAXxwB,EAAe,EAAIkK,KAAK+f,KAAK,KAAO,GAC7C8G,UAAW,GACd,EACK8F,GAAc,WAAH,MAAU,CACvBhtB,KAAM,YACN0hB,KAAM,SACNiD,SAAU,GACb,EACKsI,GAAsB,CACxBjtB,KAAM,YACN2kB,SAAU,IAERuI,GAAqB,CACvBztB,EAAGqtB,GACHptB,EAAGotB,GACHntB,EAAGmtB,GACHlpB,OAAQkpB,GACRjpB,QAASipB,GACThpB,QAASgpB,GACT/oB,QAAS+oB,GACT9oB,OAAQ+oB,GACR9oB,OAAQ8oB,GACRrsB,MAAOqsB,GACPpoB,QAASqoB,GACT5P,gBAAiB4P,GACjBvR,MAAOuR,GACPrsB,QAASosB,IAEPI,GAAuB,SAACC,EAAU,GAAkB,IAAhB5I,EAAS,EAATA,UACtC,OAAIA,EAAUxtB,OAAS,EACZi2B,IAGSC,GAAmBE,IAAaF,GAAmBvsB,SACpD6jB,EAAU,GAEjC,EClCM6I,GAAe,SAACxxB,EAAK5E,GAEvB,MAAY,WAAR4E,MAKiB,kBAAV5E,IAAsB4C,MAAMC,QAAQ7C,OAE1B,kBAAVA,IACPslB,GAAQxd,KAAK9H,IACZA,EAAMoI,WAAW,SAK1B,E,8HCjBA,SAASiuB,GAAOr2B,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtBuJ,WAAWvJ,KACa,IAAxBA,EAAM6H,QAAQ,IAC1B,CACA,SAASyuB,GAAYC,GACjB,MAAoC,kBAAtBA,EACR,EACA/Q,GAAkB,GAAI+Q,EAChC,CACA,SAASC,GAAmB5f,EAAYhS,GACpC,OAAOgS,EAAWhS,IAAQgS,EAAoB,SAAKA,CACvD,CCXA,IAAM6f,GAA6B,SAAC7B,EAAW50B,EAAOd,GAA4B,IAApB0X,EAAa,UAAH,6CAAG,CAAC,EACxE,OAAO,SAACoc,GACJ,IAAM0D,EAAkBF,GAAmB5f,EAAYge,IAAc,CAAC,EAMhEnB,EAAQiD,EAAgBjD,OAAS7c,EAAW6c,OAAS,EAK3D,EAAsB7c,EAAhBqb,QAAAA,OAAO,IAAG,IAAC,EACjBA,GAAoB9J,GAAsBsL,GAC1C,IAAMlG,ECvBd,SAAsBvtB,EAAO40B,EAAW11B,EAAQ0X,GAC5C,IAAM+f,EAAqBP,GAAaxB,EAAW11B,GAC/CsS,OAA6B9N,IAApBkT,EAAWkR,KAAqBlR,EAAWkR,KAAO9nB,EAAMhB,MAmBrE,MAlBe,SAAXwS,GAAqBmlB,GAAwC,kBAAXz3B,EAKlDsS,EAASgU,GAAkBoP,EAAW11B,GAEjCm3B,GAAO7kB,IAA6B,kBAAXtS,EAC9BsS,EAAS8kB,GAAYp3B,IAEf0D,MAAMC,QAAQ3D,IACpBm3B,GAAOn3B,IACW,kBAAXsS,IACPtS,EAASo3B,GAAY9kB,IAKrB5O,MAAMC,QAAQ3D,IAKI,OAAdA,EAAO,KACPA,EAAO,GAAKsS,GAETtS,GAGA,CAACsS,EAAQtS,EAExB,CDX0B03B,CAAa52B,EAAO40B,EAAW11B,EAAQw3B,GAMnDG,EAAiBtJ,EAAU,GAC3BuJ,EAAiBvJ,EAAUA,EAAUxtB,OAAS,GAC9Cg3B,EAAqBX,GAAaxB,EAAWiC,GAC7CF,EAAqBP,GAAaxB,EAAWkC,GACnD7O,GAAQ8O,IAAuBJ,EAAoB,6BAAF,OAA+B/B,EAAS,kBAAUiC,EAAc,iBAASC,EAAc,cAAMD,EAAc,sEAA8DA,EAAc,qCAA6BC,EAAc,+BACnR,IAAIzoB,GAAU,gBACVkf,UAAAA,EACAlN,SAAUrgB,EAAMsI,eACbouB,GAAe,IAClBzE,QAAAA,EACAiB,SAAU,SAACvwB,GACP3C,EAAMyH,IAAI9E,GACV+zB,EAAgBxD,UAAYwD,EAAgBxD,SAASvwB,EACzD,EACAqwB,WAAY,WACRA,IACA0D,EAAgB1D,YAAc0D,EAAgB1D,YAClD,IAEJ,IAAK+D,IACAJ,GACDtO,GAAsB1mB,UACG,IAAzB+0B,EAAgB3tB,KAKhB,OAAO4sB,GAAuBtnB,GAE7B,GAA6B,YAAzBqoB,EAAgB3tB,KAKrB,OE/DZ,SAAiB,GAAuL,IAEhMiuB,EAFWzJ,EAAS,EAATA,UAAS,IAAElN,SAAAA,OAAQ,IAAG,IAAC,EAAEnX,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAG,IAAEuoB,MAAAA,OAAK,IAAG,KAAG,MAAEC,aAAAA,OAAY,IAAG,MAAG,MAAEsF,gBAAAA,OAAe,IAAG,MAAG,MAAEC,cAAAA,OAAa,IAAG,KAAE,MAAElH,UAAAA,OAAS,IAAG,IAAC,EAAE4B,EAAY,EAAZA,aAAcW,EAAM,EAANA,OAAQW,EAAQ,EAARA,SAAUF,EAAU,EAAVA,WAAYD,EAAM,EAANA,OACnLvhB,EAAS+b,EAAU,GAEzB,SAAS4J,EAAcx0B,GACnB,YAAgBe,IAARwF,GAAqBvG,EAAIuG,QAAiBxF,IAARyF,GAAqBxG,EAAIwG,CACvE,CACA,SAASiuB,EAAoBz0B,GACzB,YAAYe,IAARwF,EACOC,OACCzF,IAARyF,GAEGC,KAAKmjB,IAAIrjB,EAAMvG,GAAKyG,KAAKmjB,IAAIpjB,EAAMxG,GAD/BuG,EAC0CC,CACzD,CACA,SAASoZ,EAAelU,GACpB2oB,GAAoBA,EAAiB9U,OACrC8U,EAAmB9zB,IAAQ,gBACvBqqB,UAAW,CAAC,EAAG,GACflN,SAAU,GACPhS,GAAO,IACVkkB,OAAAA,EACAW,SAAU,SAACvwB,GACPuwB,GAAYA,EAASvwB,GACrB0L,EAAQ6kB,UAAY7kB,EAAQ6kB,SAASvwB,EACzC,EACAqwB,WAAAA,EACAD,OAAAA,IAER,CACA,SAASsE,EAAYhpB,GACjBkU,GAAe,QACXxZ,KAAM,SACN0mB,UAAWwH,EACXvH,QAASwH,EACTlH,UAAAA,GACG3hB,GAEX,CACA,GAAI8oB,EAAc3lB,GAEd6lB,EAAY,CACRhX,SAAAA,EACAkN,UAAW,CAAC/b,EAAQ4lB,EAAoB5lB,UAG3C,CASD,IAAItS,EAASwyB,EAAQrR,EAAW7O,EACJ,qBAAjBogB,IACP1yB,EAAS0yB,EAAa1yB,IAC1B,IAEImgB,EACA1d,EAHE21B,EAAWF,EAAoBl4B,GAC/Bq4B,EAAUD,IAAapuB,GAAO,EAAI,EAYxCqZ,EAAe,CACXxZ,KAAM,QACNwkB,UAAW,CAAC/b,EAAQ,GACpB6O,SAAAA,EACAsR,aAAAA,EACAD,MAAAA,EACA1B,UAAAA,EACA4B,aAAAA,EACAsB,SAAUiE,EAAcj4B,GAjBN,SAACyD,GACnB0c,EAAO1d,EACPA,EAAUgB,EACV0d,EAAWD,GAAkBzd,EAAI0c,EAAM6B,GAAAA,EAAAA,QACtB,IAAZqW,GAAiB50B,EAAI20B,IACR,IAAbC,GAAkB50B,EAAI20B,IACvBD,EAAY,CAAE9J,UAAW,CAAC5qB,EAAG20B,GAAWjX,SAAAA,GAEhD,OASsD3c,GAE1D,CACA,MAAO,CACHwe,KAAM,kBAAM8U,GAAoBA,EAAiB9U,MAAM,EAE/D,CFpBmBsV,CAAQnpB,GA0BnB,GDtFR,SAA6B,GAAM,EAAJopB,KAAmB,EAAbhE,MAA4B,EAAbiE,cAA8B,EAAfC,gBAAiC,EAAhBC,iBAAwB,EAANpF,OAAkB,EAAVE,WAAuB,EAAXC,YAAiB,EAAJ7K,KAAa,EAAPmK,QAA0B,IAAdrb,EAAU,SAC/J,QAASrX,OAAO4R,KAAKyF,GAAY7W,MACrC,CCgEa83B,CAAoBnB,KACrBroB,GAAU,kBACHA,GACA6nB,GAAqBtB,EAAWvmB,KAQvCA,EAAQqf,WACRrf,EAAQqf,SAAWvF,GAAsB9Z,EAAQqf,WAEjDrf,EAAQskB,cACRtkB,EAAQskB,YAAcxK,GAAsB9Z,EAAQskB,cAKpD3yB,EAAM4hB,OACN5hB,EAAM4hB,MAAMjgB,mBAAmBm2B,cAC9B93B,EAAM4hB,MAAMjI,WAAWuZ,SAAU,CAClC,IAAM6E,EAAuBpD,GAA2B30B,EAAO40B,EAAWvmB,GAC1E,GAAI0pB,EACA,OAAOA,CACf,CAIA,OAAO70B,GAAQmL,EACnB,CACJ,E,kCG/EA,SAAS2pB,GAAe72B,EAAe82B,GAAuB,IAAd5pB,EAAU,UAAH,6CAAG,CAAC,EACjDqI,EAAW2Q,GAAelmB,EAAe82B,EAAS5pB,EAAQlH,QACgB,GAAduP,GAAY,CAAC,GAAzEE,WAAAA,OAAU,IAAG,EAAAzV,EAAc+0B,wBAA0B,CAAC,EAAC,EACzD7nB,EAAQ6pB,qBACRthB,EAAavI,EAAQ6pB,oBAMzB,IAAMC,EAAezhB,EACf,kBAAM0hB,GAAcj3B,EAAeuV,EAAUrI,EAAQ,EACrD,kBAAMmU,QAAQC,SAAS,EAKvB4V,EAAqBl3B,EAAcm3B,iBAAmBn3B,EAAcm3B,gBAAgB1sB,KACpF,WAAsB,IAArB2sB,EAAe,UAAH,6CAAG,EACd,EAAkE3hB,EAAU,IAApE8gB,cAAAA,OAAa,IAAG,IAAC,EAAEC,EAAe,EAAfA,gBAAiBC,EAAgB,EAAhBA,iBAC5C,OA+DZ,SAAyBz2B,EAAe82B,GAAgF,IAAvEP,EAAgB,UAAH,6CAAG,EAAGC,EAAkB,UAAH,6CAAG,EAAGC,EAAmB,UAAH,6CAAG,EAAGvpB,EAAO,uCAC5GmqB,EAAa,GACbC,GAAsBt3B,EAAcm3B,gBAAgB1sB,KAAO,GAAK+rB,EAChEe,EAA+C,IAArBd,EAC1B,WAAM,OAAD,UAAH,6CAAG,GAAUD,CAAe,EAC9B,WAAM,OAAKc,GAAN,UAAH,6CAAG,GAA+Bd,CAAe,EAUzD,OATA/0B,MAAMklB,KAAK3mB,EAAcm3B,iBACpBK,KAAKC,IACLniB,SAAQ,SAAC8D,EAAOpL,GACjBoL,EAAMgH,OAAO,iBAAkB0W,GAC/BO,EAAW5Y,KAAKoY,GAAezd,EAAO0d,GAAS,kBACxC5pB,GAAO,IACVolB,MAAOiE,EAAgBgB,EAAwBvpB,MAChDwT,MAAK,kBAAMpI,EAAMgH,OAAO,oBAAqB0W,EAAQ,IAC5D,IACOzV,QAAQ1E,IAAI0a,EACvB,CA/EmBK,CAAgB13B,EAAe82B,EAASP,EAAgBa,EAAcZ,EAAiBC,EAAkBvpB,EACpH,EACE,kBAAMmU,QAAQC,SAAS,EAKrBgV,EAAS7gB,EAAT6gB,KACR,GAAIA,EAAM,CACN,MAA+B,mBAATA,EAChB,CAACU,EAAcE,GACf,CAACA,EAAoBF,GAAa,gBAFjCW,EAAK,KAAEC,EAAI,KAGlB,OAAOD,IAAQnW,KAAKoW,EACxB,CAEI,OAAOvW,QAAQ1E,IAAI,CAACqa,IAAgBE,EAAmBhqB,EAAQolB,QAEvE,CAIA,SAAS2E,GAAcj3B,EAAe+T,GAA0D,6DAAJ,CAAC,EAAC,IAA1Cue,MAAAA,OAAK,IAAG,IAAC,EAAEyE,EAAkB,EAAlBA,mBAAoBnvB,EAAI,EAAJA,KAC/E,EAAsF5H,EAAcymB,qBAAqB1S,GAAW,IAA9H0B,WAAAA,OAAU,IAAG,EAAAzV,EAAc+0B,uBAAsB,EAAEvf,EAAa,EAAbA,cAAkBzX,EAAM,SAC3E85B,EAAa73B,EAAcsmB,SAAS,cACtCyQ,IACAthB,EAAashB,GACjB,IAAMM,EAAa,GACbS,EAAqBlwB,GACvB5H,EAAcmB,gBACdnB,EAAcmB,eAAe42B,WAAWnwB,GAAM,cAE9C,IAAM/I,EAAQmB,EAAcsmB,SAAS7iB,GAC/BiS,EAAc3X,EAAO0F,GAC3B,IAAK5E,QACe0D,IAAhBmT,GACCoiB,GAyDb,SAA8B,EAAmCr0B,GAAK,IAAtCu0B,EAAa,EAAbA,cAAeC,EAAc,EAAdA,eACrCC,EAAcF,EAAc15B,eAAemF,KAAgC,IAAxBw0B,EAAex0B,GAExE,OADAw0B,EAAex0B,IAAO,EACfy0B,CACX,CA5DgBC,CAAqBL,EAAoBr0B,GAAO,iBAGxD,IAAM8xB,GAAkB,QAAEjD,MAAAA,EAAOxB,QAAS,GAAMrb,GAKhD,GAAIxU,OAAOC,0BAA4BrC,EAAM2hB,YAAa,CACtD,IAAM4X,EAAWp4B,EAAcwY,WAAWqO,IACtCuR,IACA7C,EAAgBzE,QAAU7vB,OAAOC,wBAAwBk3B,EAAU30B,EAAK5E,EAAOohB,GAAAA,IAEvF,CACA,IAAIld,EAAYlE,EAAM+C,MAAM0zB,GAA2B7xB,EAAK5E,EAAO6W,EAAa1V,EAAcq4B,oBAAsBvxB,EAAeT,IAAI5C,GACjI,CAAEmE,MAAM,GACR2tB,IACF3O,GAAwBiR,KACxBA,EAAWhX,IAAIpd,GACfV,EAAYA,EAAUye,MAAK,kBAAMqW,EAAWS,OAAO70B,EAAI,KAE3D4zB,EAAW5Y,KAAK1b,EACpB,EA5BA,IAAK,IAAMU,KAAO1F,EAAM,KA6BxB,OAAOsjB,QAAQ1E,IAAI0a,GAAY7V,MAAK,WAChChM,GAAiBgR,GAAUxmB,EAAewV,EAC9C,GACJ,CAqBA,SAASiiB,GAAgBtgB,EAAGC,GACxB,OAAOD,EAAEohB,iBAAiBnhB,EAC9B,C,sCC3HMohB,GAAuB,CACzBzhB,GAAc0hB,QACd1hB,GAAckG,OACdlG,GAAciC,MACdjC,GAAc4B,MACd5B,GAAcmE,IACdnE,GAAc2hB,KACd3hB,GAAc4hB,MAEZC,GAAuB,UAAIJ,IAAsBvO,UACjD4O,GAAoBL,GAAqB55B,OAC/C,SAASk6B,GAAY94B,GACjB,OAAO,SAACq3B,GAAU,OAAKhW,QAAQ1E,IAAI0a,EAAWzT,KAAI,gBAAG7gB,EAAS,EAATA,UAAWmK,EAAO,EAAPA,QAAO,ODZ3E,SAA8BlN,EAAe+T,GAA0B,IAE/DhR,EAFiDmK,EAAU,UAAH,6CAAG,CAAC,EAGhE,GAFAlN,EAAcogB,OAAO,iBAAkBrM,GAEnCtS,MAAMC,QAAQqS,GAAa,CAC3B,IAAMsjB,EAAatjB,EAAW6P,KAAI,SAACkT,GAAO,OAAKD,GAAe72B,EAAe82B,EAAS5pB,EAAQ,IAC9FnK,EAAYse,QAAQ1E,IAAI0a,EAC5B,MACK,GAA0B,kBAAftjB,EACZhR,EAAY8zB,GAAe72B,EAAe+T,EAAY7G,OAErD,CACD,IAAM6rB,EAA2C,oBAAfhlB,EAC5BmS,GAAelmB,EAAe+T,EAAY7G,EAAQlH,QAClD+N,EACNhR,EAAYk0B,GAAcj3B,EAAe+4B,EAAoB7rB,EACjE,CACA,OAAOnK,EAAUye,MAAK,kBAAMxhB,EAAcogB,OAAO,oBAAqBrM,EAAW,GACrF,CCLkFilB,CAAqBh5B,EAAe+C,EAAWmK,EAAQ,IAAE,CAC3I,CACA,SAAS+rB,GAAqBj5B,GAC1B,IAAI+B,EAAU+2B,GAAY94B,GACpBgN,EAuSV,WAAuB,MACnB,OAAO,EAAP,cACK+J,GAAc0hB,QAAUS,IAAgB,KAAK,UAC7CniB,GAAckG,OAASic,OAAiB,UACxCniB,GAAc4B,MAAQugB,OAAiB,UACvCniB,GAAcmE,IAAMge,OAAiB,UACrCniB,GAAc2hB,KAAOQ,OAAiB,UACtCniB,GAAciC,MAAQkgB,OAAiB,UACvCniB,GAAc4hB,KAAOO,MAAiB,CAE/C,CAjTkBC,GACVC,GAAkB,EAKhBC,EAA0B,SAACC,EAAKvlB,GAClC,IAAMwB,EAAW2Q,GAAelmB,EAAe+T,GAC/C,GAAIwB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkBzX,EAAM,GAAKwX,EAAQ,IACzD+jB,GAAM,0BAAKA,GAAQv7B,GAAWyX,EAClC,CACA,OAAO8jB,CACX,EAkBA,SAASl4B,EAAe8L,EAASqsB,GA8B7B,IA7BA,IAAM35B,EAAQI,EAAcwY,WACtBlW,EAAUtC,EAAcw5B,mBAAkB,IAAS,CAAC,EAKpDnC,EAAa,GAKboC,EAAc,IAAI1yB,IAMpB2yB,EAAkB,CAAC,EAKnBC,EAAsBjG,IAC1B,aAOI,IAAM9rB,EAAOgxB,GAAqB5qB,GAC5B4rB,EAAY5sB,EAAMpF,GAClBhF,OAAuBL,IAAhB3C,EAAMgI,GAAsBhI,EAAMgI,GAAQtF,EAAQsF,GACzDiyB,EAAgBt4B,EAAeqB,GAK/Bk3B,EAAclyB,IAAS2xB,EAAoBK,EAAUvhB,SAAW,MAClD,IAAhByhB,IACAH,EAAsB3rB,GAO1B,IAAI+rB,EAAcn3B,IAASN,EAAQsF,IAAShF,IAAShD,EAAMgI,IAASiyB,EAepE,GAXIE,GACAX,GACAp5B,EAAcg6B,yBACdD,GAAc,GAMlBH,EAAU5B,eAAgB,UAAK0B,IAI7BE,EAAUvhB,UAA4B,OAAhByhB,IAElBl3B,IAASg3B,EAAUK,UAErBt4B,EAAoBiB,IACJ,mBAATA,EAAoB,iBAQ/B,IAAMs3B,EAyKlB,SAAgChc,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAIzc,MAAMC,QAAQuc,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACX,CAjLqCic,CAAuBP,EAAUK,SAAUr3B,GAChEw3B,EAAoBF,GAEnBtyB,IAAS2xB,GACNK,EAAUvhB,WACT0hB,GACDF,GAEH7rB,EAAI2rB,GAAuBE,EAK1BQ,EAAiB54B,MAAMC,QAAQkB,GAAQA,EAAO,CAACA,GAKjD03B,EAAiBD,EAAe9iB,OAAO8hB,EAAyB,CAAC,IACjD,IAAhBS,IACAQ,EAAiB,CAAC,GAUtB,MAAoCV,EAA5BW,mBAAAA,OAAkB,IAAG,GAAC,EAAC,EACzBC,GAAU,kBACTD,GACAD,GAEDG,EAAgB,SAACh3B,GACnB22B,GAAoB,EACpBX,EAAYjd,OAAO/Y,GACnBm2B,EAAU3B,eAAex0B,IAAO,CACpC,EACA,IAAK,IAAMA,KAAO+2B,EAAS,CACvB,IAAMvc,EAAOqc,EAAe72B,GACtBya,EAAOqc,EAAmB92B,GAE5Bi2B,EAAgBp7B,eAAemF,KAK/Bwa,IAASC,EAKLhK,GAAkB+J,IAAS/J,GAAkBgK,IACxCF,GAAeC,EAAMC,IAASgc,EAC/BO,EAAch3B,GAOdm2B,EAAU5B,cAAcv0B,IAAO,OAGrBlB,IAAT0b,EAELwc,EAAch3B,GAIdg2B,EAAY5Y,IAAIpd,QAGNlB,IAAT0b,GAAsBwb,EAAYpzB,IAAI5C,GAK3Cg3B,EAAch3B,GAOdm2B,EAAU5B,cAAcv0B,IAAO,EAEvC,CAKAm2B,EAAUK,SAAWr3B,EACrBg3B,EAAUW,mBAAqBD,EAI3BV,EAAUvhB,WACVqhB,GAAkB,kBAAKA,GAAoBY,IAE3ClB,GAAmBp5B,EAAcS,wBACjC25B,GAAoB,GAOpBA,IAAsBL,GACtB1C,EAAW5Y,KAAI,MAAf4Y,GAAU,QAASgD,EAAezW,KAAI,SAAC7gB,GAAS,MAAM,CAClDA,UAAWA,EACXmK,SAAS,QAAEtF,KAAAA,GAASsF,GACvB,KAET,EApKSc,EAAI,EAAGA,EAAI6qB,GAAmB7qB,IAAG,IA0K1C,GAAIyrB,EAAYhvB,KAAM,CAClB,IAAMiwB,EAAoB,CAAC,EAC3BjB,EAAYnkB,SAAQ,SAAC7R,GACjB,IAAMk3B,EAAiB36B,EAAc46B,cAAcn3B,QAC5BlB,IAAnBo4B,IACAD,EAAkBj3B,GAAOk3B,EAEjC,IACAtD,EAAW5Y,KAAK,CAAE1b,UAAW23B,GACjC,CACA,IAAIG,EAAgB14B,QAAQk1B,EAAWz4B,QAOvC,OANIw6B,IACkB,IAAlBx5B,EAAMc,UACLV,EAAcg6B,yBACfa,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgB94B,EAAQs1B,GAAchW,QAAQC,SACzD,CAsBA,MAAO,CACHlgB,eAAAA,EACAsX,UApBJ,SAAmB9Q,EAAMyQ,EAAUnL,GAE/B,GAAIF,EAAMpF,GAAMyQ,WAAaA,EACzB,OAAOgJ,QAAQC,UAEfthB,EAAcm3B,iBACdn3B,EAAcm3B,gBAAgB7hB,SAAQ,SAAC8D,GACnCA,EAAMjY,gBACFiY,EAAMjY,eAAeuX,UAAU9Q,EAAMyQ,EAC7C,IAEJrL,EAAMpF,GAAMyQ,SAAWA,EACvB,IAAMgf,EAAaj2B,EAAe8L,EAAStF,GAC3C,IAAK,IAAMnE,KAAOuJ,EACdA,EAAMvJ,GAAKu0B,cAAgB,CAAC,EAEhC,OAAOX,CACX,EAIIyD,mBAhQJ,SAA4BC,GACxBh5B,EAAUg5B,EAAa/6B,EAC3B,EA+PI+3B,SAAU,kBAAM/qB,CAAK,EAE7B,CAUA,SAASksB,KACL,MAAO,CACH7gB,SAF4B,UAAH,8CAGzB2f,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBsC,mBAAoB,CAAC,EAE7B,CC5TyC,IAEnCS,GAAgB,4CAMlB,WAAY9iB,GAAM,MAE4D,OAF5D,gBACd,cAAMA,GACNA,EAAK/W,iBAAmB+W,EAAK/W,eAAiB83B,GAAqB/gB,IAAO,CAC9E,CAqBa,OArBZ,4DACD,WACI,IAAQnW,EAAYhD,KAAKmZ,KAAKM,WAAtBzW,QACRhD,KAAK2G,UACD/D,EAAoBI,KACpBhD,KAAK2G,QAAU3D,EAAQk5B,UAAUl8B,KAAKmZ,MAE9C,GACA,mBAGA,WACInZ,KAAKm8B,qCACT,GAAC,oBACD,WACwBn8B,KAAKmZ,KAAKM,WAAtBzW,WACyBhD,KAAKmZ,KAAKxE,WAAa,CAAC,GAAjD3R,SAEJhD,KAAKm8B,qCAEb,GAAC,qBACD,WAAY,KAAC,EA9BK,CAASjjB,ICD3BnU,GAAK,EACHq3B,GAAoB,4CACtB,aAAc,MAEK,OAFL,iBACV,eAASx8B,YACJmF,GAAKA,KAAK,CACnB,CAoBa,OApBZ,+BACD,WAAS,WACL,GAAK/E,KAAKmZ,KAAKhY,gBAAf,CAEA,MAA8CnB,KAAKmZ,KAAKhY,gBAAhDk7B,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAgBr1B,EAAM,EAANA,OAChBs1B,GAAkBv8B,KAAKmZ,KAAKqjB,qBAAuB,CAAC,GAA/DH,UACR,GAAKr8B,KAAKmZ,KAAK/W,gBAAkBi6B,IAAcE,EAA/C,CAGA,IAAME,EAAgBz8B,KAAKmZ,KAAK/W,eAAeuX,UAAU3B,GAAc4hB,MAAOyC,EAAW,CAAEp1B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASjH,KAAKmZ,KAAKM,WAAWxS,SACpKq1B,IAAmBD,GACnBI,EAAcha,MAAK,kBAAM6Z,EAAe,EAAKv3B,GAAG,GAHpD,CALU,CAUd,GAAC,mBACD,WACI,IAAQ23B,GAAa18B,KAAKmZ,KAAKhY,iBAAmB,CAAC,GAA3Cu7B,SACJA,IACA18B,KAAK2G,QAAU+1B,EAAS18B,KAAK+E,IAErC,GAAC,qBACD,WAAY,KAAC,EAxBS,CAASmU,ICD7Bof,GAAa,CACft0B,UAAW,CACPkV,QAAS+iB,IAEbh4B,KAAM,CACFiV,QAASkjB,KCRXjvB,GAAW,SAACiL,EAAGC,GAAC,OAAKnP,KAAKmjB,IAAIjU,EAAIC,EAAE,ECS1C,IAGMskB,GAAU,WACZ,WAAYllB,EAAOmlB,GAAuC,WAA3Bz8B,GAA2B,uDAAJ,CAAC,GAAxBA,mBA0D3B,IA1D6C,gBAI7CH,KAAKib,WAAa,KAIlBjb,KAAK68B,cAAgB,KAIrB78B,KAAK88B,kBAAoB,KAIzB98B,KAAK48B,SAAW,CAAC,EACjB58B,KAAK+8B,YAAc,WACf,GAAM,EAAKF,eAAiB,EAAKC,kBAAjC,CAEA,IAAMtjB,EAAOwjB,GAAW,EAAKF,kBAAmB,EAAKG,SAC/CC,EAAmC,OAApB,EAAKjiB,WAIpBkiB,EDrClB,SAAoB/kB,EAAGC,GAEnB,IAAM+kB,EAASjwB,GAASiL,EAAE9P,EAAG+P,EAAE/P,GACzB+0B,EAASlwB,GAASiL,EAAE7P,EAAG8P,EAAE9P,GAC/B,OAAOW,KAAK+f,KAAK,SAAAmU,EAAU,GAAC,SAAGC,EAAU,GAC7C,CCgC4CC,CAAW9jB,EAAKjI,OAAQ,CAAEjJ,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAK20B,GAAiBC,EAAtB,CAEA,IAAQplB,EAAUyB,EAAVzB,MACAkJ,EAAcD,GAAAA,EAAAA,UACtB,EAAKic,QAAQvd,MAAK,kBAAK3H,GAAK,IAAEkJ,UAAAA,KAC9B,MAA4B,EAAK2b,SAAzBW,EAAO,EAAPA,QAASC,EAAM,EAANA,OACZN,IACDK,GAAWA,EAAQ,EAAKV,cAAerjB,GACvC,EAAKyB,WAAa,EAAK4hB,eAE3BW,GAAUA,EAAO,EAAKX,cAAerjB,EAT3B,CARA,CAkBd,EACAxZ,KAAKy9B,kBAAoB,SAAChmB,EAAO+B,GAC7B,EAAKqjB,cAAgBplB,EACrB,EAAKqlB,kBAAoBY,GAAelkB,EAAM,EAAKrZ,oBAEnD+gB,GAAAA,GAAAA,OAAY,EAAK6b,aAAa,EAClC,EACA/8B,KAAK29B,gBAAkB,SAAClmB,EAAO+B,GAE3B,GADA,EAAKokB,MACC,EAAKf,eAAiB,EAAKC,kBAAjC,CAEA,MAAgC,EAAKF,SAA7BiB,EAAK,EAALA,MAAOC,EAAY,EAAZA,aACTC,EAAUf,GAA0B,kBAAfvlB,EAAM5O,KAC3B,EAAKi0B,kBACLY,GAAelkB,EAAM,EAAKrZ,oBAAqB,EAAK88B,SACtD,EAAKhiB,YAAc4iB,GACnBA,EAAMpmB,EAAOsmB,GAEjBD,GAAgBA,EAAarmB,EAAOsmB,EAR1B,CASd,EAEKvmB,GAAiBC,GAAtB,CAEAzX,KAAK48B,SAAWA,EAChB58B,KAAKG,mBAAqBA,EAC1B,IACM69B,EAAcN,GADP7lB,GAAiBJ,GACWzX,KAAKG,oBACtC4X,EAAUimB,EAAVjmB,MACAkJ,EAAcD,GAAAA,EAAAA,UACtBhhB,KAAKi9B,QAAU,EAAC,kBAAKllB,GAAK,IAAEkJ,UAAAA,KAC5B,IAAQgd,EAAmBrB,EAAnBqB,eACRA,GACIA,EAAexmB,EAAOulB,GAAWgB,EAAah+B,KAAKi9B,UACvDj9B,KAAKk+B,gBAAkB5lB,GAAKJ,GAAgBhW,OAAQ,cAAelC,KAAKy9B,mBAAoBvlB,GAAgBhW,OAAQ,YAAalC,KAAK29B,iBAAkBzlB,GAAgBhW,OAAQ,gBAAiBlC,KAAK29B,iBAX5L,CAYd,CAOC,OAPA,uCACD,SAAef,GACX58B,KAAK48B,SAAWA,CACpB,GAAC,iBACD,WACI58B,KAAKk+B,iBAAmBl+B,KAAKk+B,kBAC7BhM,GAAAA,GAAAA,OAAkBlyB,KAAK+8B,YAC3B,KAAC,EA/EW,GAiFhB,SAASW,GAAelkB,EAAMrZ,GAC1B,OAAOA,EAAqB,CAAE4X,MAAO5X,EAAmBqZ,EAAKzB,QAAWyB,CAC5E,CACA,SAAS2kB,GAAc/lB,EAAGC,GACtB,MAAO,CAAE/P,EAAG8P,EAAE9P,EAAI+P,EAAE/P,EAAGC,EAAG6P,EAAE7P,EAAI8P,EAAE9P,EACtC,CACA,SAASy0B,GAAW,EAAWC,GAAS,IAAlBllB,EAAK,EAALA,MAClB,MAAO,CACHA,MAAAA,EACAgJ,MAAOod,GAAcpmB,EAAOqmB,GAAgBnB,IAC5C1rB,OAAQ4sB,GAAcpmB,EAAOsmB,GAAiBpB,IAC9C9c,SAAU/X,GAAY60B,EAAS,IAEvC,CACA,SAASoB,GAAiBpB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASmB,GAAgBnB,GACrB,OAAOA,EAAQA,EAAQp9B,OAAS,EACpC,CACA,SAASuI,GAAY60B,EAASvc,GAC1B,GAAIuc,EAAQp9B,OAAS,EACjB,MAAO,CAAEyI,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAI0G,EAAIguB,EAAQp9B,OAAS,EACrBy+B,EAAmB,KACjBC,EAAYH,GAAgBnB,GAC3BhuB,GAAK,IACRqvB,EAAmBrB,EAAQhuB,KACvBsvB,EAAUtd,UAAYqd,EAAiBrd,UACvCgH,GAAsBvH,MAG1BzR,IAEJ,IAAKqvB,EACD,MAAO,CAAEh2B,EAAG,EAAGC,EAAG,GAEtB,IAAMi2B,GAAQD,EAAUtd,UAAYqd,EAAiBrd,WAAa,IAClE,GAAa,IAATud,EACA,MAAO,CAAEl2B,EAAG,EAAGC,EAAG,GAEtB,IAAM2M,EAAkB,CACpB5M,GAAIi2B,EAAUj2B,EAAIg2B,EAAiBh2B,GAAKk2B,EACxCj2B,GAAIg2B,EAAUh2B,EAAI+1B,EAAiB/1B,GAAKi2B,GAQ5C,OANItpB,EAAgB5M,IAAMqsB,MACtBzf,EAAgB5M,EAAI,GAEpB4M,EAAgB3M,IAAMosB,MACtBzf,EAAgB3M,EAAI,GAEjB2M,CACX,CChJA,SAASupB,GAAWC,GAChB,OAAOA,EAAKz1B,IAAMy1B,EAAK11B,GAC3B,CACA,SAAS21B,GAAO7+B,GAAuC,IAAhCd,EAAS,UAAH,6CAAG,EAAG4/B,EAAc,UAAH,6CAAG,IAC7C,OAAO11B,KAAKmjB,IAAIvsB,EAAQd,IAAW4/B,CACvC,CACA,SAASC,GAAc9d,EAAOxR,EAAQvQ,GAAsB,IAAdsS,EAAS,UAAH,6CAAG,GACnDyP,EAAMzP,OAASA,EACfyP,EAAM+d,YAAczpB,GAAI9F,EAAOvG,IAAKuG,EAAOtG,IAAK8X,EAAMzP,QACtDyP,EAAMxX,MAAQk1B,GAAWz/B,GAAUy/B,GAAWlvB,IAC1CovB,GAAO5d,EAAMxX,MAAO,EAAG,OAAW+W,MAAMS,EAAMxX,UAC9CwX,EAAMxX,MAAQ,GAClBwX,EAAMge,UACF1pB,GAAIrW,EAAOgK,IAAKhK,EAAOiK,IAAK8X,EAAMzP,QAAUyP,EAAM+d,aAClDH,GAAO5d,EAAMge,YAAcze,MAAMS,EAAMge,cACvChe,EAAMge,UAAY,EAC1B,CACA,SAASC,GAAaje,EAAOxR,EAAQvQ,EAAQsS,GACzCutB,GAAc9d,EAAMzY,EAAGiH,EAAOjH,EAAGtJ,EAAOsJ,EAAGgJ,EAASA,EAAO7D,aAAUjK,GACrEq7B,GAAc9d,EAAMxY,EAAGgH,EAAOhH,EAAGvJ,EAAOuJ,EAAG+I,EAASA,EAAO5D,aAAUlK,EACzE,CACA,SAASy7B,GAAiBjgC,EAAQkgC,EAAUn+B,GACxC/B,EAAOgK,IAAMjI,EAAOiI,IAAMk2B,EAASl2B,IACnChK,EAAOiK,IAAMjK,EAAOgK,IAAMy1B,GAAWS,EACzC,CAKA,SAASC,GAAyBngC,EAAQwF,EAAQzD,GAC9C/B,EAAOgK,IAAMxE,EAAOwE,IAAMjI,EAAOiI,IACjChK,EAAOiK,IAAMjK,EAAOgK,IAAMy1B,GAAWj6B,EACzC,CACA,SAAS46B,GAAqBpgC,EAAQwF,EAAQzD,GAC1Co+B,GAAyBngC,EAAOsJ,EAAG9D,EAAO8D,EAAGvH,EAAOuH,GACpD62B,GAAyBngC,EAAOuJ,EAAG/D,EAAO+D,EAAGxH,EAAOwH,EACxD,CCZA,SAAS82B,GAA4BX,EAAM11B,EAAKC,GAC5C,MAAO,CACHD,SAAaxF,IAARwF,EAAoB01B,EAAK11B,IAAMA,OAAMxF,EAC1CyF,SAAazF,IAARyF,EACCy1B,EAAKz1B,IAAMA,GAAOy1B,EAAKz1B,IAAMy1B,EAAK11B,UAClCxF,EAEd,CAcA,SAAS87B,GAA4BC,EAAYC,GAC7C,IAAIx2B,EAAMw2B,EAAgBx2B,IAAMu2B,EAAWv2B,IACvCC,EAAMu2B,EAAgBv2B,IAAMs2B,EAAWt2B,IAG3C,GAAIu2B,EAAgBv2B,IAAMu2B,EAAgBx2B,IACtCu2B,EAAWt2B,IAAMs2B,EAAWv2B,IAAK,OACpB,CAACC,EAAKD,GAAlBA,EAAG,KAAEC,EAAG,IACb,CACA,MAAO,CAAED,IAAAA,EAAKC,IAAAA,EAClB,CAuCA,IAAMw2B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH72B,IAAK82B,GAAoBH,EAAaC,GACtC32B,IAAK62B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,IAMMC,GAAc,WAAH,MAAU,CACvB13B,EAP2B,CAC3By2B,UAAW,EACXx1B,MAAO,EACP+H,OAAQ,EACRwtB,YAAa,GAIbv2B,EAR2B,CAC3Bw2B,UAAW,EACXx1B,MAAO,EACP+H,OAAQ,EACRwtB,YAAa,GAKhB,EAEKmB,GAAY,WAAH,MAAU,CACrB33B,EAFsB,CAAEU,IAAK,EAAGC,IAAK,GAGrCV,EAHsB,CAAES,IAAK,EAAGC,IAAK,GAIxC,ECdD,SAASi3B,GAASvjB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASwjB,GAAwB,GAA+B,IAA7Bx0B,EAAG,EAAHA,IAC/B,MAAO,CACHrD,EAAG,CAAEU,IAF+B,EAAJ8C,KAEhB7C,IAF2B,EAAL2C,OAGtCrD,EAAG,CAAES,IAAK2C,EAAK1C,IAHoC,EAAN4C,QAKrD,CCVA,SAASu0B,GAAgB72B,GACrB,YAAiB/F,IAAV+F,GAAiC,IAAVA,CAClC,CACA,SAAS82B,GAAS,GAA2B,IAAzB92B,EAAK,EAALA,MAAOsD,EAAM,EAANA,OAAQC,EAAM,EAANA,OAC/B,OAASszB,GAAgB72B,KACpB62B,GAAgBvzB,KAChBuzB,GAAgBtzB,EACzB,CACA,SAAS0B,GAAa8E,GAClB,OAAQ+sB,GAAS/sB,IACbgtB,GAAehtB,IACfA,EAAO9K,GACP8K,EAAO7G,QACP6G,EAAO5G,SACP4G,EAAO3G,OACf,CACA,SAAS2zB,GAAehtB,GACpB,OAAOitB,GAAcjtB,EAAOhL,IAAMi4B,GAAcjtB,EAAO/K,EAC3D,CACA,SAASg4B,GAAczgC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS0gC,GAAWzoB,EAAOxO,EAAOu1B,GAG9B,OAAOA,EADQv1B,GADYwO,EAAQ+mB,EAGvC,CAIA,SAAS2B,GAAgB1oB,EAAOgnB,EAAWx1B,EAAOu1B,EAAa4B,GAI3D,YAHiBl9B,IAAbk9B,IACA3oB,EAAQyoB,GAAWzoB,EAAO2oB,EAAU5B,IAEjC0B,GAAWzoB,EAAOxO,EAAOu1B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAAY,UAAH,6CAAG,EAAGx1B,EAAQ,UAAH,6CAAG,EAAGu1B,EAAW,uCAAE4B,EAAQ,uCACzEhC,EAAK11B,IAAMy3B,GAAgB/B,EAAK11B,IAAK+1B,EAAWx1B,EAAOu1B,EAAa4B,GACpEhC,EAAKz1B,IAAMw3B,GAAgB/B,EAAKz1B,IAAK81B,EAAWx1B,EAAOu1B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAK,GAAU,IAARv4B,EAAC,EAADA,EAAGC,EAAC,EAADA,EAC7Bo4B,GAAeE,EAAIv4B,EAAGA,EAAEy2B,UAAWz2B,EAAEiB,MAAOjB,EAAEw2B,aAC9C6B,GAAeE,EAAIt4B,EAAGA,EAAEw2B,UAAWx2B,EAAEgB,MAAOhB,EAAEu2B,YAClD,CAuDA,SAASgC,GAAcv3B,GACnB,OAAIw3B,OAAOC,UAAUz3B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS03B,GAAcvC,EAAMvxB,GACzBuxB,EAAK11B,IAAM01B,EAAK11B,IAAMmE,EACtBuxB,EAAKz1B,IAAMy1B,EAAKz1B,IAAMkE,CAC1B,CAMA,SAAS+zB,GAAcxC,EAAMyC,EAAY,GAA4B,oBAA3Bz8B,EAAG,KAAE08B,EAAQ,KAAEC,EAAS,KACxDC,OAAuC99B,IAA1B29B,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAczpB,GAAIqpB,EAAK11B,IAAK01B,EAAKz1B,IAAKq4B,GAE5CX,GAAejC,EAAMyC,EAAWz8B,GAAMy8B,EAAWC,GAAWtC,EAAaqC,EAAW53B,MACxF,CAIA,IAAMg4B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAK/3B,GACvBo4B,GAAcL,EAAIv4B,EAAGQ,EAAWy4B,IAChCL,GAAcL,EAAIt4B,EAAGO,EAAW04B,GACpC,CCpHA,SAASE,GAAmBj7B,EAAUi3B,GAClC,OAAOyC,GHeX,SAA4BpoB,EAAO2lB,GAC/B,IAAKA,EACD,OAAO3lB,EACX,IAAM4pB,EAAUjE,EAAe,CAAEp1B,EAAGyP,EAAMjM,KAAMvD,EAAGwP,EAAMpM,MACnDi2B,EAAclE,EAAe,CAAEp1B,EAAGyP,EAAMnM,MAAOrD,EAAGwP,EAAMlM,SAC9D,MAAO,CACHF,IAAKg2B,EAAQp5B,EACbuD,KAAM61B,EAAQr5B,EACduD,OAAQ+1B,EAAYr5B,EACpBqD,MAAOg2B,EAAYt5B,EAE3B,CG1BmCu5B,CAAmBp7B,EAASqQ,wBAAyB4mB,GACxF,CCaA,IAAMoE,GAAsB,IAAIvlB,QAK1BwlB,GAAyB,WAC3B,WAAY9gC,IAAe,gBAIvBjB,KAAKgiC,eAAiB,KACtBhiC,KAAKiiC,YAAa,EAClBjiC,KAAKkiC,iBAAmB,KACxBliC,KAAK8+B,YAAc,CAAEx2B,EAAG,EAAGC,EAAG,GAI9BvI,KAAKmiC,aAAc,EACnBniC,KAAKoiC,uBAAwB,EAI7BpiC,KAAKqiC,QAAUpC,KACfjgC,KAAKiB,cAAgBA,CACzB,CAkYC,OAlYA,8BACD,SAAMqhC,GAA4C,WAAF,GAAE,uDAAJ,CAAC,GAA1BC,aAAAA,OAAY,IAAG,GAAK,EAI7BphC,EAAoBnB,KAAKiB,cAAzBE,gBACR,IAAIA,IAAiD,IAA9BA,EAAgBk7B,UAAvC,CAsFAr8B,KAAKwiC,WAAa,IAAI7F,GAAW2F,EAAa,CAC1CrE,eArFmB,SAACxmB,GAGpB,EAAKgrB,gBACDF,GACA,EAAKA,aAAa1qB,GAAiBJ,EAAO,QAAQM,MAE1D,EA+EIwlB,QA9EY,SAAC9lB,EAAO+B,GAEpB,MAA+C,EAAKC,WAA5CvV,EAAI,EAAJA,KAAMw+B,EAAe,EAAfA,gBAAiBC,EAAW,EAAXA,YAC/B,IAAIz+B,GAASw+B,IACL,EAAKV,gBACL,EAAKA,iBACT,EAAKA,eAAiBnpB,GAAc3U,GAE/B,EAAK89B,gBALd,CAQA,EAAKC,YAAa,EAClB,EAAKC,iBAAmB,KACxB,EAAKU,qBACD,EAAK3hC,cAAciT,aACnB,EAAKjT,cAAciT,WAAW2uB,oBAAqB,EACnD,EAAK5hC,cAAciT,WAAWlV,YAASwE,GAK3C08B,IAAS,SAACxB,GACN,IAAIj9B,EAAU,EAAKqhC,mBAAmBpE,GAAM5/B,OAAS,EAIrD,GAAIsL,GAAQxC,KAAKnG,GAAU,CACvB,IAAQyS,EAAe,EAAKjT,cAApBiT,WACR,GAAIA,GAAcA,EAAW1P,OAAQ,CACjC,IAAMu+B,EAAe7uB,EAAW1P,OAAOw+B,UAAUtE,GACjD,GAAIqE,EAEAthC,EADeg9B,GAAWsE,IACN15B,WAAW5H,GAAW,IAElD,CACJ,CACA,EAAKq9B,YAAYJ,GAAQj9B,CAC7B,IAEAkhC,GAAeA,EAAYlrB,EAAO+B,GAClC,IAAQpX,EAAmB,EAAKnB,cAAxBmB,eACRA,GAAkBA,EAAeuX,UAAU3B,GAAc2hB,MAAM,EA/B/D,CAgCJ,EAqCI6D,OApCW,SAAC/lB,EAAO+B,GAEnB,MAAyE,EAAKC,WAAtEipB,EAAe,EAAfA,gBAAiBO,EAAiB,EAAjBA,kBAAmBC,EAAe,EAAfA,gBAAiBC,EAAM,EAANA,OAE7D,GAAKT,GAAoB,EAAKV,eAA9B,CAEA,IAAQzwB,EAAWiI,EAAXjI,OAER,GAAI0xB,GAA+C,OAA1B,EAAKf,iBAM1B,OALA,EAAKA,iBA2UrB,SAA6B3wB,GAA4B,IAApB6xB,EAAgB,UAAH,6CAAG,GAC7CrO,EAAY,KACZ7rB,KAAKmjB,IAAI9a,EAAOhJ,GAAK66B,EACrBrO,EAAY,IAEP7rB,KAAKmjB,IAAI9a,EAAOjJ,GAAK86B,IAC1BrO,EAAY,KAEhB,OAAOA,CACX,CApVwCsO,CAAoB9xB,QAEd,OAA1B,EAAK2wB,kBACLgB,GAAmBA,EAAgB,EAAKhB,mBAKhD,EAAKoB,WAAW,IAAK9pB,EAAKzB,MAAOxG,GACjC,EAAK+xB,WAAW,IAAK9pB,EAAKzB,MAAOxG,GAOjC,EAAKtQ,cAAcc,SAKnBohC,GAAUA,EAAO1rB,EAAO+B,EAzBd,CA0Bd,EAMIskB,aALiB,SAACrmB,EAAO+B,GAAI,OAAK,EAAKwI,KAAKvK,EAAO+B,EAAK,GAMzD,CAAErZ,mBAAoBH,KAAKiB,cAAcsiC,yBA1FlC,CA2Fd,GAAC,kBACD,SAAK9rB,EAAO+B,GACR,IAAMyoB,EAAajiC,KAAKiiC,WAExB,GADAjiC,KAAKm1B,SACA8M,EAAL,CAEA,IAAQ9hB,EAAa3G,EAAb2G,SACRngB,KAAKqiB,eAAelC,GACpB,IAAQqjB,EAAcxjC,KAAKyZ,WAAnB+pB,UACRA,GAAaA,EAAU/rB,EAAO+B,EAJpB,CAKd,GAAC,oBACD,WACIxZ,KAAKiiC,YAAa,EAClB,MAAuCjiC,KAAKiB,cAApCiT,EAAU,EAAVA,WAAY9R,EAAc,EAAdA,eAChB8R,IACAA,EAAW2uB,oBAAqB,GAEpC7iC,KAAKwiC,YAAcxiC,KAAKwiC,WAAW5E,MACnC59B,KAAKwiC,gBAAah/B,GACUxD,KAAKyZ,WAAzBipB,iBACgB1iC,KAAKgiC,iBACzBhiC,KAAKgiC,iBACLhiC,KAAKgiC,eAAiB,MAE1B5/B,GAAkBA,EAAeuX,UAAU3B,GAAc2hB,MAAM,EACnE,GAAC,wBACD,SAAW+E,EAAM+E,EAAQlyB,GACrB,IAAQrN,EAASlE,KAAKyZ,WAAdvV,KAER,GAAKqN,GAAWmyB,GAAWhF,EAAMx6B,EAAMlE,KAAKkiC,kBAA5C,CAEA,IAAMyB,EAAY3jC,KAAK8iC,mBAAmBpE,GACtCxf,EAAOlf,KAAK8+B,YAAYJ,GAAQntB,EAAOmtB,GAEvC1+B,KAAKmiC,aAAeniC,KAAKmiC,YAAYzD,KACrCxf,EPrKZ,SAA0BnH,EAAO,EAAcsqB,GAAS,IAArBr5B,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IASpC,YARYzF,IAARwF,GAAqB+O,EAAQ/O,EAE7B+O,EAAQsqB,EAAUhtB,GAAIrM,EAAK+O,EAAOsqB,EAAQr5B,KAAOE,KAAKD,IAAI8O,EAAO/O,QAEpDxF,IAARyF,GAAqB8O,EAAQ9O,IAElC8O,EAAQsqB,EAAUhtB,GAAIpM,EAAK8O,EAAOsqB,EAAQp5B,KAAOC,KAAKF,IAAI+O,EAAO9O,IAE9D8O,CACX,CO2JmB6rB,CAAiB1kB,EAAMlf,KAAKmiC,YAAYzD,GAAO1+B,KAAKqiC,QAAQ3D,KAEvEiF,EAAUp8B,IAAI2X,EAPJ,CAQd,GAAC,gCACD,WAAqB,WACjB,EAAyClf,KAAKyZ,WAAtCoqB,EAAe,EAAfA,gBAAiBlE,EAAW,EAAXA,YACjBn7B,GAAWxE,KAAKiB,cAAciT,YAAc,CAAC,GAA7C1P,OACFs/B,EAAkB9jC,KAAKmiC,YACzB0B,GAAmBvhC,EAAYuhC,GAC1B7jC,KAAKmiC,cACNniC,KAAKmiC,YAAcniC,KAAK+jC,yBAKxB/jC,KAAKmiC,eADL0B,IAAmBr/B,IPvJnC,SAAiCw+B,EAAW,GAA8B,IAA5Br3B,EAAG,EAAHA,IAAKG,EAAI,EAAJA,KAAMD,EAAM,EAANA,OAAQD,EAAK,EAALA,MAC7D,MAAO,CACHtD,EAAG+2B,GAA4B2D,EAAU16B,EAAGwD,EAAMF,GAClDrD,EAAG82B,GAA4B2D,EAAUz6B,EAAGoD,EAAKE,GAEzD,COmJmCm4B,CAAwBx/B,EAAOw+B,UAAWa,GAMrE7jC,KAAKqiC,QPhGb,WAA0D,IAA9B1C,EAAc,UAAH,6CAAGF,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHn3B,EAAGo3B,GAAmBC,EAAa,OAAQ,SAC3Cp3B,EAAGm3B,GAAmBC,EAAa,MAAO,UAElD,COqFuBsE,CAAmBtE,GAK9BmE,IAAoB9jC,KAAKmiC,aACzB39B,GACAxE,KAAKmiC,cACJniC,KAAKoiC,uBACNlC,IAAS,SAACxB,GACF,EAAKoE,mBAAmBpE,KACxB,EAAKyD,YAAYzD,GPzHrC,SAA+Bl6B,EAAQ29B,GACnC,IAAM+B,EAAsB,CAAC,EAO7B,YANwB1gC,IAApB2+B,EAAYn5B,MACZk7B,EAAoBl7B,IAAMm5B,EAAYn5B,IAAMxE,EAAOwE,UAE/BxF,IAApB2+B,EAAYl5B,MACZi7B,EAAoBj7B,IAAMk5B,EAAYl5B,IAAMzE,EAAOwE,KAEhDk7B,CACX,COgH6CC,CAAsB3/B,EAAOw+B,UAAUtE,GAAO,EAAKyD,YAAYzD,IAEhG,GAER,GAAC,mCACD,WACI,MAAmE1+B,KAAKyZ,WAA/C0oB,EAAW,EAA5B0B,gBAA8BO,EAAwB,EAAxBA,yBACtC,IAAKjC,IAAgB7/B,EAAY6/B,GAC7B,OAAO,EACX,IAAMkC,EAAqBlC,EAAY1gC,QACvCumB,GAAiC,OAAvBqc,EAA6B,0GACvC,IAAQnwB,EAAelU,KAAKiB,cAApBiT,WAER,IAAKA,IAAeA,EAAW1P,OAC3B,OAAO,EACX,IAAM8/B,EDxNd,SAAwBtwB,EAASuwB,EAAoBpkC,GACjD,IAAMqkC,EAAc9C,GAAmB1tB,EAAS7T,GACxCskC,EAAWF,EAAXE,OAKR,OAJIA,IACAxD,GAAcuD,EAAYl8B,EAAGm8B,EAAOlzB,OAAOjJ,GAC3C24B,GAAcuD,EAAYj8B,EAAGk8B,EAAOlzB,OAAOhJ,IAExCi8B,CACX,CCgN+BE,CAAeL,EAAoBnwB,EAAW8I,KAAMhd,KAAKiB,cAAcsiC,yBAC1FoB,EPlKZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACHh8B,EAAGg3B,GAA4B0D,EAAU16B,EAAGg8B,EAAeh8B,GAC3DC,EAAG+2B,GAA4B0D,EAAUz6B,EAAG+7B,EAAe/7B,GAEnE,CO6JkCq8B,CAAwB1wB,EAAW1P,OAAOw+B,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJ1NpC,SAAiC,GAAU,IAAR97B,EAAC,EAADA,EAAGC,EAAC,EAADA,EAClC,MAAO,CAAEoD,IAAKpD,EAAES,IAAK4C,MAAOtD,EAAEW,IAAK4C,OAAQtD,EAAEU,IAAK6C,KAAMxD,EAAEU,IAC9D,CIwN6D87B,CAAwBH,IACzE3kC,KAAKoiC,wBAA0ByC,EAC3BA,IACAF,EAAsBxE,GAAwB0E,GAEtD,CACA,OAAOF,CACX,GAAC,4BACD,SAAexkB,GAAU,WACrB,EAAoGngB,KAAKyZ,WAAjGvV,EAAI,EAAJA,KAAM6gC,EAAY,EAAZA,aAAcpF,EAAW,EAAXA,YAAaqF,EAAc,EAAdA,eAAgBC,EAAgB,EAAhBA,iBAAkBC,EAAmB,EAAnBA,oBACrE/C,EAAcniC,KAAKmiC,aAAe,CAAC,EACnCgD,EAAqBjF,IAAS,SAACxB,GACjC,GAAKgF,GAAWhF,EAAMx6B,EAAM,EAAKg+B,kBAAjC,CAGA,IAAIxrB,EAAcyrB,GAAeA,EAAYzD,IAAU,CAAC,EACpDuG,IACAvuB,EAAa,CAAE1N,IAAK,EAAGC,IAAK,IAOhC,IAAM8tB,EAAkB4I,EAAc,IAAM,IACtC3I,EAAgB2I,EAAc,GAAK,IACnCrI,GAAU,gBACZzuB,KAAM,UACNsX,SAAU4kB,EAAe5kB,EAASue,GAAQ,EAC1C3H,gBAAAA,EACAC,cAAAA,EACAvF,aAAc,IACd3B,UAAW,EACXC,UAAW,IACRiV,GACAtuB,GAKP,OAAO,EAAK0uB,wBAAwB1G,EAAMpH,EA1B1C,CA2BJ,IAEA,OAAOhV,QAAQ1E,IAAIunB,GAAoB1iB,KAAKyiB,EAChD,GAAC,qCACD,SAAwBxG,EAAMhoB,GAC1B,IAAMitB,EAAY3jC,KAAK8iC,mBAAmBpE,GAC1C,OAAOiF,EAAU9gC,MAAM0zB,GAA2BmI,EAAMiF,EAAW,EAAGjtB,GAC1E,GAAC,2BACD,WAAgB,WACZwpB,IAAS,SAACxB,GAAI,OAAK,EAAKoE,mBAAmBpE,GAAM1c,MAAM,GAC3D,GACA,gCAMA,SAAmB0c,GACf,IAAM2G,EAAU,QAAU3G,EAAK5pB,cACzBjU,EAAQb,KAAKiB,cAAcwY,WAC3B6rB,EAAsBzkC,EAAMwkC,GAClC,OAAOC,GAEDtlC,KAAKiB,cAAcsmB,SAASmX,GAAO79B,EAAMc,QAAUd,EAAMc,QAAQ+8B,QAAQl7B,IAAc,EACjG,GAAC,0BACD,SAAauU,GAAO,WAChBmoB,IAAS,SAACxB,GAGN,GAAKgF,GAAWhF,EAFC,EAAKjlB,WAAdvV,KAEoB,EAAKg+B,kBAAjC,CAEA,IAAQhuB,EAAe,EAAKjT,cAApBiT,WACFyvB,EAAY,EAAKb,mBAAmBpE,GAC1C,GAAIxqB,GAAcA,EAAW1P,OAAQ,CACjC,MAAqB0P,EAAW1P,OAAOw+B,UAAUtE,GAAzC11B,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IACb06B,EAAUp8B,IAAIwQ,EAAM2mB,GAAQrpB,GAAIrM,EAAKC,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,4CAKA,WAAiC,WAC7B,GAAKjJ,KAAKiB,cAAcQ,QAAxB,CAEA,MAAkCzB,KAAKyZ,WAA/BvV,EAAI,EAAJA,KAAM2/B,EAAe,EAAfA,gBACN3vB,EAAelU,KAAKiB,cAApBiT,WACR,GAAK5R,EAAYuhC,IAAqB3vB,GAAelU,KAAKmiC,YAA1D,CAMAniC,KAAKyiC,gBAKL,IAAM8C,EAAc,CAAEj9B,EAAG,EAAGC,EAAG,GAC/B23B,IAAS,SAACxB,GACN,IAAMiF,EAAY,EAAKb,mBAAmBpE,GAC1C,GAAIiF,EAAW,CACX,IAAM6B,EAAS7B,EAAU7kC,MACzBymC,EAAY7G,GPxQ5B,SAAoBnvB,EAAQvQ,GACxB,IAAIsS,EAAS,GACPm0B,EAAehH,GAAWlvB,GAC1Bm2B,EAAejH,GAAWz/B,GAOhC,OANI0mC,EAAeD,EACfn0B,EAASqX,GAAS3pB,EAAOgK,IAAKhK,EAAOiK,IAAMw8B,EAAcl2B,EAAOvG,KAE3Dy8B,EAAeC,IACpBp0B,EAASqX,GAASpZ,EAAOvG,IAAKuG,EAAOtG,IAAMy8B,EAAc1mC,EAAOgK,MAE7DD,EAAM,EAAG,EAAGuI,EACvB,CO6PoCD,CAAW,CAAErI,IAAKw8B,EAAQv8B,IAAKu8B,GAAU,EAAKrD,YAAYzD,GAClF,CACJ,IAIA,IAAQtwB,EAAsBpO,KAAKiB,cAAcwY,WAAzCrL,kBACRpO,KAAKiB,cAAcQ,QAAQ4M,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN8F,EAAW8I,MAAQ9I,EAAW8I,KAAK2oB,eACnCzxB,EAAW0xB,eACX5lC,KAAK4iC,qBAKL1C,IAAS,SAACxB,GACN,GAAKgF,GAAWhF,EAAMx6B,EAAM,MAA5B,CAKA,IAAMy/B,EAAY,EAAKb,mBAAmBpE,GAC1C,EAAqB,EAAKyD,YAAYzD,GAA9B11B,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IACb06B,EAAUp8B,IAAI8N,GAAIrM,EAAKC,EAAKs8B,EAAY7G,IAN9B,CAOd,GAzCU,CAJA,CA8Cd,GAAC,0BACD,WAAe,WACX,GAAK1+B,KAAKiB,cAAcQ,QAAxB,CAEAqgC,GAAoBv6B,IAAIvH,KAAKiB,cAAejB,MAC5C,IAIM6lC,EAAsB3tB,GAJZlY,KAAKiB,cAAcQ,QAIkB,eAAe,SAACgW,GACjE,MAAsC,EAAKgC,WAAnCvV,EAAI,EAAJA,KAAI,IAAE4L,aACd5L,SAD0B,IAAG,GAAI,IACT,EAAKrB,MAAM4U,EACvC,IACMquB,EAAyB,WAEvBxjC,EADwB,EAAKmX,WAAzBoqB,mBAEJ,EAAK1B,YAAc,EAAK4B,wBAEhC,EACQ7vB,EAAelU,KAAKiB,cAApBiT,WACF6xB,EAA4B7xB,EAAWoD,iBAAiB,UAAWwuB,GACrE5xB,IAAeA,EAAW1P,SAC1B0P,EAAW8I,MAAQ9I,EAAW8I,KAAK2oB,eACnCzxB,EAAW0xB,gBAEfE,IAKA,IAAME,EAAqB9uB,GAAYhV,OAAQ,UAAU,kBAAM,EAAK+jC,gCAAgC,IAK9FC,EAA2BhyB,EAAWoD,iBAAiB,aAAc,YAAiC,IAA9ByJ,EAAK,EAALA,MAAOolB,EAAgB,EAAhBA,iBAC7E,EAAKlE,YAAckE,IACnBjG,IAAS,SAACxB,GACN,IAAM5b,EAAc,EAAKggB,mBAAmBpE,GACvC5b,IAEL,EAAKgc,YAAYJ,IAAS3d,EAAM2d,GAAMK,UACtCjc,EAAYvb,IAAIub,EAAYhkB,MAAQiiB,EAAM2d,GAAMK,WACpD,IACA,EAAK99B,cAAcc,SAE3B,IACA,OAAO,WACHikC,IACAH,IACAE,IACAG,GAA4BA,GAChC,CAjDU,CAkDd,GAAC,sBACD,WACI,IAAMrlC,EAAQb,KAAKiB,cAAcwY,WACjC,EAA0J5Y,EAAlJqD,KAAAA,OAAI,IAAG,GAAK,IAAsIrD,EAApIoiC,kBAAAA,OAAiB,IAAG,GAAK,IAA2GpiC,EAAzG6hC,gBAAAA,OAAe,IAAG,GAAK,IAAkF7hC,EAAhFgjC,gBAAAA,OAAe,IAAG,GAAK,IAAyDhjC,EAAvD8+B,YAAAA,OAAW,IAAG,EAAAF,GAAc,IAA2B5+B,EAAzBkkC,aAAAA,OAAY,IAAG,GAAI,EACpJ,OAAO,kBACAlkC,GAAK,IACRqD,KAAAA,EACA++B,kBAAAA,EACAP,gBAAAA,EACAmB,gBAAAA,EACAlE,YAAAA,EACAoF,aAAAA,GAER,KAAC,EArZ0B,GAuZ/B,SAASrB,GAAW3O,EAAW7wB,EAAMg+B,GACjC,QAAkB,IAATh+B,GAAiBA,IAAS6wB,KACT,OAArBmN,GAA6BA,IAAqBnN,EAC3D,CC/a4E,IAEtEqR,GAAW,4CACb,WAAYjtB,GAAM,MAIsC,OAJtC,iBACd,cAAMA,IACDktB,oBAAsB9rB,GAC3B,EAAK2jB,gBAAkB3jB,GACvB,EAAK+rB,SAAW,IAAIvE,GAA0B5oB,GAAM,CACxD,CAaC,OAbA,8BACD,WAGI,IAAQotB,EAAiBvmC,KAAKmZ,KAAKM,WAA3B8sB,aACJA,IACAvmC,KAAKqmC,oBAAsBE,EAAarK,UAAUl8B,KAAKsmC,WAE3DtmC,KAAKk+B,gBAAkBl+B,KAAKsmC,SAASE,gBAAkBjsB,EAC3D,GAAC,qBACD,WACIva,KAAKqmC,sBACLrmC,KAAKk+B,iBACT,KAAC,EAnBY,CAAShlB,ICCpButB,GAAU,4CACZ,aAAc,MAE4B,OAF5B,iBACV,eAAS7mC,YACJ8mC,0BAA4BnsB,GAAK,CAC1C,CAyBC,OAzBA,sCACD,SAAcosB,GACV3mC,KAAK4mC,QAAU,IAAIjK,GAAWgK,EAAkB3mC,KAAK6mC,oBAAqB,CAAE1mC,mBAAoBH,KAAKmZ,KAAKoqB,yBAC9G,GAAC,+BACD,WAAoB,WAChB,EAA2DvjC,KAAKmZ,KAAKM,WAA7DqtB,EAAiB,EAAjBA,kBAAmBC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAC9C,MAAO,CACHhJ,eAAgB6I,EAChBvJ,QAASwJ,EACTvJ,OAAQwJ,EACRnJ,MAAO,SAACpmB,EAAO+B,UACJ,EAAKotB,QACZK,GAAYA,EAASxvB,EAAO+B,EAChC,EAER,GAAC,mBACD,WAAQ,WACJxZ,KAAK0mC,0BAA4BxuB,GAAgBlY,KAAKmZ,KAAK1X,QAAS,eAAe,SAACgW,GAAK,OAAK,EAAKyvB,cAAczvB,EAAM,GAC3H,GAAC,oBACD,WACIzX,KAAK4mC,SAAW5mC,KAAK4mC,QAAQO,eAAennC,KAAK6mC,oBACrD,GAAC,qBACD,WACI7mC,KAAK0mC,4BACL1mC,KAAK4mC,SAAW5mC,KAAK4mC,QAAQhJ,KACjC,KAAC,EA7BW,CAAS1kB,ICHzB,SAASkuB,GAAgBC,EAAQ3I,GAC7B,OAAIA,EAAKz1B,MAAQy1B,EAAK11B,IACX,EACHq+B,GAAU3I,EAAKz1B,IAAMy1B,EAAK11B,KAAQ,GAC9C,CAQA,IAAMs+B,GAAsB,CACxBC,QAAS,SAAC/B,EAAQrsB,GACd,IAAKA,EAAKna,OACN,OAAOwmC,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIn7B,GAAGzC,KAAK49B,GAIR,OAAOA,EAHPA,EAASn8B,WAAWm8B,EAK5B,CAKA,IAAMl9B,EAAI8+B,GAAgB5B,EAAQrsB,EAAKna,OAAOsJ,GACxCC,EAAI6+B,GAAgB5B,EAAQrsB,EAAKna,OAAOuJ,GAC9C,MAAO,GAAP,OAAUD,EAAC,aAAKC,EAAC,IACrB,GCnCJ,SAASI,GAAc7I,GACnB,MAAwB,kBAAVA,GAAsBA,EAAMoI,WAAW,SACzD,CAUA,IAAMs/B,GAAmB,uDAQzB,IAAMC,GAAW,EACjB,SAASC,GAAiBjmC,EAASuS,GAAoB,IAAX2zB,EAAQ,UAAH,6CAAG,EAChD3f,GAAU2f,GAASF,GAAU,yDAAF,OAA2DhmC,EAAO,yDAC7F,MAVJ,SAA0BA,GACtB,IAAM4hB,EAAQmkB,GAAiBI,KAAKnmC,GACpC,IAAK4hB,EACD,MAAO,CAAC,GACZ,eAA4BA,EAAK,GACjC,MAAO,CADO,KAAU,KAE5B,CAI8BwkB,CAAiBpmC,GAAQ,gBAA5CqmC,EAAK,KAAEvpB,EAAQ,KAEtB,GAAKupB,EAAL,CAGA,IAAMtxB,EAAWtU,OAAO6lC,iBAAiB/zB,GAASg0B,iBAAiBF,GACnE,OAAItxB,EACOA,EAASrH,OAEXxG,GAAc4V,GAEZmpB,GAAiBnpB,EAAUvK,EAAS2zB,EAAQ,GAG5CppB,CAXD,CAad,CAMA,SAAS0pB,GAAoBhnC,EAAe,EAAewV,GAAe,IAAzBzX,EAAM,kBC/CxC,SAAmCkpC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,CD6CuD,QAC7Cl0B,EAAU/S,EAAcQ,QAC9B,KAAMuS,aAAmBogB,SACrB,MAAO,CAAEp1B,OAAAA,EAAQyX,cAAAA,GAiBrB,IAAK,IAAM/R,KAdP+R,IACAA,GAAgB,UAAKA,IAGzBxV,EAAcqS,OAAOiD,SAAQ,SAACzW,GAC1B,IAAM2B,EAAU3B,EAAMhB,MACtB,GAAK6J,GAAclH,GAAnB,CAEA,IAAM+U,EAAWkxB,GAAiBjmC,EAASuS,GACvCwC,GACA1W,EAAMyH,IAAIiP,EAHJ,CAId,IAGkBxX,EAAQ,CACtB,IAAMyC,EAAUzC,EAAO0F,GACvB,GAAKiE,GAAclH,GAAnB,CAEA,IAAM+U,EAAWkxB,GAAiBjmC,EAASuS,GACtCwC,IAGLxX,EAAO0F,GAAO8R,EAIVC,QAAwCjT,IAAvBiT,EAAc/R,KAC/B+R,EAAc/R,GAAOjD,GAVb,CAYhB,CACA,MAAO,CAAEzC,OAAAA,EAAQyX,cAAAA,EACrB,CEhFA,IAAM2xB,GAAW,QACXC,GAAmB,CACrBd,QAAS,SAAC/B,EAAQ,GAAmC,IAAjC8C,EAAS,EAATA,UAAWC,EAAe,EAAfA,gBACrBC,EAAWhD,EAIXiD,EAAuBjD,EAAO99B,SAAS,QACvCghC,EAAe,GACjBD,IACAjD,EAASA,EAAO1xB,QAAQ0zB,IAAkB,SAACnkB,GAEvC,OADAqlB,EAAahpB,KAAK2D,GACX+kB,EACX,KAEJ,IAAMO,EAASvjB,GAAQhc,MAAMo8B,GAE7B,GAAImD,EAAO9oC,OAAS,EAChB,OAAO2oC,EACX,IAAMve,EAAW7E,GAAQJ,kBAAkBwgB,GACrCj0B,EAA8B,kBAAdo3B,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgBjgC,EAAEiB,MAAQ++B,EAAUhgC,EAC7CugC,EAASN,EAAgBhgC,EAAEgB,MAAQ++B,EAAU//B,EACnDogC,EAAO,EAAIp3B,IAAWq3B,EACtBD,EAAO,EAAIp3B,IAAWs3B,EAOtB,IAAMC,EAAezzB,GAAIuzB,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAIp3B,KAClBo3B,EAAO,EAAIp3B,IAAWu3B,GAEQ,kBAAvBH,EAAO,EAAIp3B,KAClBo3B,EAAO,EAAIp3B,IAAWu3B,GAC1B,IAAI5jB,EAAS+E,EAAS0e,GACtB,GAAIF,EAAsB,CACtB,IAAIx5B,EAAI,EACRiW,EAASA,EAAOpR,QAAQs0B,IAAU,WAC9B,IAAMW,EAAcL,EAAaz5B,GAEjC,OADAA,IACO85B,CACX,GACJ,CACA,OAAO7jB,CACX,GC3CE8jB,GAAwB,wGA8FzB,OA9FyB,0CAM1B,WAAoB,IzIfGC,EyIeH,OAChB,EAAoEjpC,KAAKa,MAAjEI,EAAa,EAAbA,cAAeioC,EAAW,EAAXA,YAAaC,EAAiB,EAAjBA,kBAAmBpjC,EAAQ,EAARA,SAC/CmO,EAAejT,EAAfiT,WzIjBW+0B,EyIkBDG,GzIjBtB/pC,OAAOoQ,OAAO5H,EAAiBohC,GyIkBvB/0B,IACIg1B,EAAYG,OACZH,EAAYG,MAAMvnB,IAAI5N,GACtBi1B,GAAqBA,EAAkBzM,UAAY32B,GACnDojC,EAAkBzM,SAASxoB,GAE/BA,EAAW8I,KAAKssB,YAChBp1B,EAAWoD,iBAAiB,qBAAqB,WAC7C,EAAKiyB,cACT,IACAr1B,EAAWs1B,YAAW,kBACft1B,EAAW/F,SAAO,IACrBmuB,eAAgB,kBAAM,EAAKiN,cAAc,MAGjD3kC,EAAsBE,gBAAiB,CAC3C,GAAC,qCACD,SAAwB6P,GAAW,WAC/B,EAA6D3U,KAAKa,MAA1D4oC,EAAgB,EAAhBA,iBAAkBxoC,EAAa,EAAbA,cAAeiD,EAAI,EAAJA,KAAMm4B,EAAS,EAATA,UACzCnoB,EAAajT,EAAciT,WACjC,OAAKA,GASLA,EAAWmoB,UAAYA,EACnBn4B,GACAyQ,EAAU80B,mBAAqBA,QACVjmC,IAArBimC,EACAv1B,EAAWw1B,aAGX1pC,KAAKupC,eAEL50B,EAAU0nB,YAAcA,IACpBA,EACAnoB,EAAWy1B,UAELz1B,EAAW01B,YAMjB1oB,GAAAA,GAAAA,YAAgB,WACZ,IAAM2oB,EAAQ31B,EAAW41B,WACpBD,GAAUA,EAAME,QAAQlqC,QACzB,EAAK0pC,cAEb,KAGD,MAnCI,IAoCf,GAAC,gCACD,WACI,IAAQr1B,EAAelU,KAAKa,MAAMI,cAA1BiT,WACJA,IACAA,EAAW8I,KAAKssB,aACXp1B,EAAW4iB,kBAAoB5iB,EAAW81B,UAC3ChqC,KAAKupC,eAGjB,GAAC,kCACD,WACI,MAA2EvpC,KAAKa,MAAxEI,EAAa,EAAbA,cAAeioC,EAAW,EAAXA,YAAgCe,EAAc,EAAjCd,kBAC5Bj1B,EAAejT,EAAfiT,WACJA,IACAA,EAAWg2B,4BACPhB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAM9P,OAAOrlB,GACzB+1B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWj2B,GAEtC,GAAC,0BACD,WACI,IAAQq1B,EAAiBvpC,KAAKa,MAAtB0oC,aACRA,GAAgBA,GACpB,GAAC,oBACD,WACI,OAAO,IACX,KAAC,EA9FyB,CAASa,EAAAA,WAgGvC,SAASvkC,GAAchF,GACnB,MCjFJ,WACI,IAAM0C,GAAUvC,EAAAA,EAAAA,YAAWI,EAAAA,GAC3B,GAAgB,OAAZmC,EACA,MAAO,EAAC,EAAM,MAClB,IAAQ84B,EAAwC94B,EAAxC84B,UAAWC,EAA6B/4B,EAA7B+4B,eAAgBI,EAAan5B,EAAbm5B,SAG7B33B,GAAKslC,EAAAA,EAAAA,SAGX,OAFAroC,EAAAA,EAAAA,YAAU,kBAAM06B,EAAS33B,EAAG,GAAE,KAEtBs3B,GAAaC,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAev3B,EAAG,GACD,EAAC,EACnE,CDsEsCulC,GAAa,gBAAxCjO,EAAS,KAAEkN,EAAY,KACxBL,GAAcloC,EAAAA,EAAAA,YAAW8F,EAAAA,GAC/B,OAAQsjC,EAAAA,cAA6BpB,IAA0B,kBAAKnoC,GAAK,IAAEqoC,YAAaA,EAAaC,mBAAmBnoC,EAAAA,EAAAA,YAAWgE,GAA2Bq3B,UAAWA,EAAWkN,aAAcA,IACtM,CACA,IAAMH,GAAyB,CAC3Bp+B,cAAc,kBACPs8B,IAAmB,IACtBiD,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRr/B,oBAAqBo8B,GACrBn8B,qBAAsBm8B,GACtBj8B,uBAAwBi8B,GACxBl8B,wBAAyBk8B,GACzBkD,UAAWnC,IEvHf,IAAMoC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ5qC,OACrB8qC,GAAW,SAAC7qC,GAAK,MAAsB,kBAAVA,EAAqBuJ,WAAWvJ,GAASA,CAAK,EAC3E8qC,GAAO,SAAC9qC,GAAK,MAAsB,kBAAVA,GAAsBuK,GAAGzC,KAAK9H,EAAM,EA0CnE,SAAS+qC,GAAUv3B,EAAQw3B,GACvB,YAA8BtnC,IAAvB8P,EAAOw3B,GACRx3B,EAAOw3B,GACPx3B,EAAOtI,YACjB,CAwBA,IAAM+/B,GAAkBC,GAAS,EAAG,GAAKte,IACnCue,GAAmBD,GAAS,GAAK,IAAMzwB,IAC7C,SAASywB,GAAShiC,EAAKC,EAAKof,GACxB,OAAO,SAACjoB,GAEJ,OAAIA,EAAI4I,EACG,EACP5I,EAAI6I,EACG,EACJof,EAAOM,GAAS3f,EAAKC,EAAK7I,GACrC,CACJ,CCrFA,SAAS8qC,GAAaxM,EAAMyM,GACxBzM,EAAK11B,IAAMmiC,EAAWniC,IACtB01B,EAAKz1B,IAAMkiC,EAAWliC,GAC1B,CAMA,SAASmiC,GAAYvK,EAAKwK,GACtBH,GAAarK,EAAIv4B,EAAG+iC,EAAU/iC,GAC9B4iC,GAAarK,EAAIt4B,EAAG8iC,EAAU9iC,EAClC,CCVA,SAAS+iC,GAAiBvzB,EAAOgnB,EAAWx1B,EAAOu1B,EAAa4B,GAM5D,OAJA3oB,EAAQyoB,GADRzoB,GAASgnB,EACiB,EAAIx1B,EAAOu1B,QACpBt7B,IAAbk9B,IACA3oB,EAAQyoB,GAAWzoB,EAAO,EAAI2oB,EAAU5B,IAErC/mB,CACX,CAsBA,SAASwzB,GAAqB7M,EAAMyC,EAAY,EAA4B7vB,EAAQk6B,GAAY,oBAA/C9mC,EAAG,KAAE08B,EAAQ,KAAEC,EAAS,MAlBzE,SAAyB3C,GAA8F,IAAxFK,EAAY,UAAH,6CAAG,EAAGx1B,EAAQ,UAAH,6CAAG,EAAG+H,EAAS,UAAH,6CAAG,GAAKovB,EAAQ,uCAAEyK,EAAa,UAAH,6CAAGzM,EAAM8M,EAAa,UAAH,6CAAG9M,EAM7G,GALIt0B,GAAQxC,KAAKm3B,KACbA,EAAY11B,WAAW01B,GAEvBA,EADyB1pB,GAAIm2B,EAAWxiC,IAAKwiC,EAAWviC,IAAK81B,EAAY,KAC1CyM,EAAWxiC,KAErB,kBAAd+1B,EAAX,CAEA,IAAID,EAAczpB,GAAI81B,EAAWniC,IAAKmiC,EAAWliC,IAAKqI,GAClDotB,IAASyM,IACTrM,GAAeC,GACnBL,EAAK11B,IAAMsiC,GAAiB5M,EAAK11B,IAAK+1B,EAAWx1B,EAAOu1B,EAAa4B,GACrEhC,EAAKz1B,IAAMqiC,GAAiB5M,EAAKz1B,IAAK81B,EAAWx1B,EAAOu1B,EAAa4B,EAL3D,CAMd,CAMI+K,CAAgB/M,EAAMyC,EAAWz8B,GAAMy8B,EAAWC,GAAWD,EAAWE,GAAYF,EAAW53B,MAAO+H,EAAQk6B,EAClH,CAIA,IAAMjK,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASkK,GAAoB7K,EAAKM,EAAYkK,EAAWM,GACrDJ,GAAqB1K,EAAIv4B,EAAG64B,EAAYI,GAAO8J,EAAYA,EAAU/iC,OAAI9E,EAAWmoC,EAAYA,EAAUrjC,OAAI9E,GAC9G+nC,GAAqB1K,EAAIt4B,EAAG44B,EAAYK,GAAO6J,EAAYA,EAAU9iC,OAAI/E,EAAWmoC,EAAYA,EAAUpjC,OAAI/E,EAClH,CCjDA,SAASooC,GAAgB7qB,GACrB,OAA2B,IAApBA,EAAMge,WAAmC,IAAhBhe,EAAMxX,KAC1C,CACA,SAASsiC,GAAY9qB,GACjB,OAAO6qB,GAAgB7qB,EAAMzY,IAAMsjC,GAAgB7qB,EAAMxY,EAC7D,CACA,SAASujC,GAAU1zB,EAAGC,GAClB,OAAQD,EAAE9P,EAAEU,MAAQqP,EAAE/P,EAAEU,KACpBoP,EAAE9P,EAAEW,MAAQoP,EAAE/P,EAAEW,KAChBmP,EAAE7P,EAAES,MAAQqP,EAAE9P,EAAES,KAChBoP,EAAE7P,EAAEU,MAAQoP,EAAE9P,EAAEU,GACxB,CACA,SAAS8iC,GAAYlL,GACjB,OAAOpC,GAAWoC,EAAIv4B,GAAKm2B,GAAWoC,EAAIt4B,EAC9C,CChBkE,IAE5DyjC,GAAS,WACX,cAAc,gBACVhsC,KAAK+pC,QAAU,EACnB,CAuGC,OAvGA,4BACD,SAAI5wB,GACAoG,GAAcvf,KAAK+pC,QAAS5wB,GAC5BA,EAAK8yB,gBACT,GAAC,oBACD,SAAO9yB,GAKH,GAJAwG,GAAW3f,KAAK+pC,QAAS5wB,GACrBA,IAASnZ,KAAKksC,WACdlsC,KAAKksC,cAAW1oC,GAEhB2V,IAASnZ,KAAKmsC,KAAM,CACpB,IAAMD,EAAWlsC,KAAK+pC,QAAQ/pC,KAAK+pC,QAAQlqC,OAAS,GAChDqsC,GACAlsC,KAAK2pC,QAAQuC,EAErB,CACJ,GAAC,sBACD,SAAS/yB,GACL,IAMI+yB,EANEE,EAAcpsC,KAAK+pC,QAAQsC,WAAU,SAACC,GAAM,OAAKnzB,IAASmzB,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAIn9B,EAAIm9B,EAAan9B,GAAK,EAAGA,IAAK,CACnC,IAAMq9B,EAAStsC,KAAK+pC,QAAQ96B,GAC5B,IAAyB,IAArBq9B,EAAOjQ,UAAqB,CAC5B6P,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAlsC,KAAK2pC,QAAQuC,IACN,EAKf,GAAC,qBACD,SAAQ/yB,EAAMozB,GACV,IAAML,EAAWlsC,KAAKmsC,KAClBhzB,IAAS+yB,IAEblsC,KAAKksC,SAAWA,EAChBlsC,KAAKmsC,KAAOhzB,EACZA,EAAKqzB,OACDN,IACAA,EAASzlC,UAAYylC,EAASD,iBAC9B9yB,EAAK8yB,iBACL9yB,EAAKszB,WAAaP,EACdK,IACApzB,EAAKszB,WAAWC,iBAAkB,GAElCR,EAASS,WACTxzB,EAAKwzB,SAAWT,EAASS,SACzBxzB,EAAKwzB,SAASz+B,aACVg+B,EAASU,iBAAmBV,EAASh+B,cAEzCiL,EAAK6D,MAAQ7D,EAAK6D,KAAK6vB,aACvB1zB,EAAK2zB,eAAgB,IAGP,IADI3zB,EAAKhL,QAAnB4+B,WAEJb,EAASc,QAerB,GAAC,mCACD,WACIhtC,KAAK+pC,QAAQxzB,SAAQ,SAAC4C,GAClB,IAAQhL,EAA0BgL,EAA1BhL,QAAS8+B,EAAiB9zB,EAAjB8zB,aACjB9+B,EAAQmuB,gBAAkBnuB,EAAQmuB,iBAC9B2Q,GACAA,EAAa9+B,QAAQmuB,gBACjB2Q,EAAa9+B,QAAQmuB,gBAEjC,GACJ,GAAC,4BACD,WACIt8B,KAAK+pC,QAAQxzB,SAAQ,SAAC4C,GAClBA,EAAK1S,UAAY0S,EAAK8yB,gBAAe,EACzC,GACJ,GACA,gCAIA,WACQjsC,KAAKmsC,MAAQnsC,KAAKmsC,KAAKQ,WACvB3sC,KAAKmsC,KAAKQ,cAAWnpC,EAE7B,KAAC,EA1GU,GCFf,SAAS0pC,GAAyBnsB,EAAOunB,EAAW6E,GAChD,IAAIrkC,EAAY,GAOVskC,EAAarsB,EAAMzY,EAAEy2B,UAAYuJ,EAAUhgC,EAC3C+kC,EAAatsB,EAAMxY,EAAEw2B,UAAYuJ,EAAU//B,EAWjD,IAVI6kC,GAAcC,KACdvkC,EAAY,eAAH,OAAkBskC,EAAU,eAAOC,EAAU,YAMtC,IAAhB/E,EAAUhgC,GAA2B,IAAhBggC,EAAU//B,IAC/BO,GAAa,SAAJ,OAAa,EAAIw/B,EAAUhgC,EAAC,aAAK,EAAIggC,EAAU//B,EAAC,OAEzD4kC,EAAiB,CACjB,IAAQ1gC,EAA6B0gC,EAA7B1gC,OAAQC,EAAqBygC,EAArBzgC,QAASC,EAAYwgC,EAAZxgC,QACrBF,IACA3D,GAAa,UAAJ,OAAc2D,EAAM,UAC7BC,IACA5D,GAAa,WAAJ,OAAe4D,EAAO,UAC/BC,IACA7D,GAAa,WAAJ,OAAe6D,EAAO,SACvC,CAKA,IAAM2gC,EAAgBvsB,EAAMzY,EAAEiB,MAAQ++B,EAAUhgC,EAC1CilC,EAAgBxsB,EAAMxY,EAAEgB,MAAQ++B,EAAU//B,EAIhD,OAHsB,IAAlB+kC,GAAyC,IAAlBC,IACvBzkC,GAAa,SAAJ,OAAawkC,EAAa,aAAKC,EAAa,MAElDzkC,GAAa,MACxB,CCvCA,IAAM0kC,GAAiB,SAACp1B,EAAGC,GAAC,OAAKD,EAAEuvB,MAAQtvB,EAAEsvB,KAAK,ECG5C8F,GAAQ,WACV,cAAc,gBACVztC,KAAKyT,SAAW,GAChBzT,KAAK0tC,SAAU,CACnB,CAaC,OAbA,4BACD,SAAIrzB,GACAkF,GAAcvf,KAAKyT,SAAU4G,GAC7Bra,KAAK0tC,SAAU,CACnB,GAAC,oBACD,SAAOrzB,GACHsF,GAAW3f,KAAKyT,SAAU4G,GAC1Bra,KAAK0tC,SAAU,CACnB,GAAC,qBACD,SAAQ/wB,GACJ3c,KAAK0tC,SAAW1tC,KAAKyT,SAASglB,KAAK+U,IACnCxtC,KAAK0tC,SAAU,EACf1tC,KAAKyT,SAAS8C,QAAQoG,EAC1B,KAAC,EAjBS,GCmBRgxB,GAAgB,CAAC,GAAI,IAAK,IAAK,KAK/BC,GAAkB,IACpB7oC,GAAK,EACT,SAAS8oC,GAAqB,GAA4F,IAA1FC,EAAoB,EAApBA,qBAAsBC,EAAa,EAAbA,cAAeC,EAAa,EAAbA,cAAeC,EAAiB,EAAjBA,kBAAmBC,EAAc,EAAdA,eACnG,kBACI,WAAYC,GAAsH,WAA3GjgC,EAAe,UAAH,6CAAG,CAAC,EAAGnN,EAAS,UAAH,6CAAqB,OAAlBgtC,QAA4C,IAAlBA,OAA2B,EAASA,KAAe,gBAI5H/tC,KAAK+E,GAAKA,KAIV/E,KAAKouC,YAAc,EAOnBpuC,KAAKyT,SAAW,IAAIzL,IAKpBhI,KAAKmO,QAAU,CAAC,EAMhBnO,KAAKquC,iBAAkB,EACvBruC,KAAK6iC,oBAAqB,EAO1B7iC,KAAK8sC,eAAgB,EACrB9sC,KAAKsuC,kBAAmB,EAKxBtuC,KAAKuuC,mBAAoB,EAIzBvuC,KAAKwuC,uBAAwB,EAC7BxuC,KAAKyuC,uBAAwB,EAK7BzuC,KAAK6sC,YAAa,EAIlB7sC,KAAK0uC,OAAQ,EAKb1uC,KAAK2uC,YAAa,EAIlB3uC,KAAK4uC,sBAAuB,EAS5B5uC,KAAKsoC,UAAY,CAAEhgC,EAAG,EAAGC,EAAG,GAI5BvI,KAAK6uC,cAAgB,IAAIznC,IAEzBpH,KAAK8uC,eAAiB,IAAI1nC,IAC1BpH,KAAK+uC,kBAAoB,WACjB,EAAKlC,aACL,EAAKA,YAAa,EAClB,EAAKmC,oBAEb,EAMAhvC,KAAKivC,iBAAmB,WACpB,EAAKC,MAAM34B,QAAQ44B,IACnB,EAAKD,MAAM34B,QAAQ64B,IACnB,EAAKF,MAAM34B,QAAQ84B,GACvB,EACArvC,KAAKsvC,cAAe,EACpBtvC,KAAKuvC,WAAY,EACjBvvC,KAAKwvC,kBAAoB,EAKzBxvC,KAAKyvC,YAAc,IAAIroC,IACvBpH,KAAKmuC,UAAYA,EACjBnuC,KAAKkO,aAAeA,EACpBlO,KAAKgd,KAAOjc,EAASA,EAAOic,MAAQjc,EAASf,KAC7CA,KAAK0vC,KAAO3uC,EAAS,GAAH,gBAAOA,EAAO2uC,MAAI,CAAE3uC,IAAU,GAChDf,KAAKe,OAASA,EACdf,KAAK2nC,MAAQ5mC,EAASA,EAAO4mC,MAAQ,EAAI,EACzCwG,GAAanuC,KAAKgd,KAAK2yB,sBAAsBxB,EAAWnuC,MACxD,IAAK,IAAIiP,EAAI,EAAGA,EAAIjP,KAAK0vC,KAAK7vC,OAAQoP,IAClCjP,KAAK0vC,KAAKzgC,GAAG2/B,sBAAuB,EAEpC5uC,KAAKgd,OAAShd,OACdA,KAAKkvC,MAAQ,IAAIzB,GACzB,CAy/BC,OAz/BA,yCACD,SAAiBvqC,EAAMkU,GAInB,OAHKpX,KAAK6uC,cAAcvnC,IAAIpE,IACxBlD,KAAK6uC,cAActnC,IAAIrE,EAAM,IAAI4c,IAE9B9f,KAAK6uC,cAAc/vC,IAAIoE,GAAM4e,IAAI1K,EAC5C,GAAC,6BACD,SAAgBlU,GAC6C,IAAzD,IAAM0sC,EAAsB5vC,KAAK6uC,cAAc/vC,IAAIoE,GAAM,mBADpC2sC,EAAI,iCAAJA,EAAI,kBAEzBD,GAAuBA,EAAoBvuB,OAAM,MAA1BuuB,EAA8BC,EACzD,GAAC,0BACD,SAAa3sC,GACT,OAAOlD,KAAK6uC,cAAcvnC,IAAIpE,EAClC,GAAC,mCACD,SAAsBirC,EAAWh1B,GAC7BnZ,KAAK8uC,eAAevnC,IAAI4mC,EAAWh1B,EACvC,GACA,mBAGA,SAAM1S,GAAiC,WAAvBqmC,EAAgB,UAAH,8CACzB,IAAI9sC,KAAKyG,SAAT,CAEAzG,KAAK0uC,MACDjoC,aAAoBqpC,YAAmC,QAArBrpC,EAASuQ,QAC/ChX,KAAKyG,SAAWA,EAChB,MAA4CzG,KAAKmO,QAAzCpI,EAAQ,EAARA,SAAUvB,EAAM,EAANA,OAAQvD,EAAa,EAAbA,cAU1B,GATIA,IAAkBA,EAAcQ,SAChCR,EAAcyF,MAAMD,GAExBzG,KAAKgd,KAAKkyB,MAAMptB,IAAI9hB,MACpBA,KAAKe,QAAUf,KAAKe,OAAO0S,SAASqO,IAAI9hB,MACxCA,KAAKmuC,WAAanuC,KAAKgd,KAAK8xB,eAAerxB,OAAOzd,KAAKmuC,WACnDrB,IAAkBtoC,GAAUuB,KAC5B/F,KAAK8sC,eAAgB,GAErBgB,EAAsB,CACtB,IAAIiC,EACEC,EAAsB,WAAH,OAAU,EAAKhzB,KAAKyxB,uBAAwB,CAAK,EAC1EX,EAAqBrnC,GAAU,WAC3B,EAAKuW,KAAKyxB,uBAAwB,EAClCsB,GAAeA,IACfA,EAAcxc,GAAMyc,EAAqB,KACrCprC,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/C,EAAKqqC,MAAM34B,QAAQ05B,IAE3B,GACJ,CACIlqC,GACA/F,KAAKgd,KAAKkzB,mBAAmBnqC,EAAU/F,OAGd,IAAzBA,KAAKmO,QAAQnL,SACb/B,IACC8E,GAAYvB,IACbxE,KAAKsX,iBAAiB,aAAa,YAA+E,IAA5EyJ,EAAK,EAALA,MAAOolB,EAAgB,EAAhBA,iBAAkBgK,EAAwB,EAAxBA,yBAAkCC,EAAS,EAAjB5rC,OACrF,GAAI,EAAK6rC,yBAGL,OAFA,EAAKrxC,YAASwE,OACd,EAAK8sC,oBAAiB9sC,GAI1B,IAAM+sC,EAAmB,EAAKpiC,QAAQuI,YAClCzV,EAAc+0B,wBACdwa,GACJ,EAA+DvvC,EAAcwY,WAArEg3B,EAAsB,EAAtBA,uBAAwBC,EAAyB,EAAzBA,0BAK1BC,GAAiB,EAAKC,eACvB9E,GAAU,EAAK8E,aAAcR,IAC9BD,EAMEU,GAAgC1K,GAAoBgK,EAC1D,GAAI,EAAKhiC,QAAQ2iC,YACZ,EAAKrE,YAAc,EAAKA,WAAWhmC,UACpCoqC,GACC1K,IACIwK,IAAkB,EAAK7Z,kBAAoB,CAC5C,EAAK2V,aACL,EAAKQ,aAAe,EAAKR,WACzB,EAAKQ,aAAaA,kBAAezpC,GAErC,EAAKutC,mBAAmBhwB,EAAO8vB,GAC/B,IAAMG,GAAmB,kBAClB1a,GAAmBia,EAAkB,WAAS,IACjD3d,OAAQ6d,EACR3d,WAAY4d,KAEZzvC,EAAcq4B,oBACd,EAAKnrB,QAAQ2iC,cACbE,EAAiBzd,MAAQ,EACzByd,EAAiBnoC,MAAO,GAE5B,EAAKwZ,eAAe2uB,EACxB,MAOS7K,GAC0B,IAA3B,EAAKqJ,mBACLS,GAAgB,GAEhB,EAAKjG,UAAY,EAAK77B,QAAQmuB,gBAC9B,EAAKnuB,QAAQmuB,iBAGrB,EAAKsU,aAAeR,CACxB,GA/FM,CAiGd,GAAC,qBACD,WACIpwC,KAAKmO,QAAQpI,UAAY/F,KAAK0pC,aAC9B1pC,KAAKgd,KAAKkyB,MAAM3V,OAAOv5B,MACvB,IAAM6pC,EAAQ7pC,KAAK8pC,WACnBD,GAASA,EAAMtQ,OAAOv5B,MACtBA,KAAKe,QAAUf,KAAKe,OAAO0S,SAASgK,OAAOzd,MAC3CA,KAAKyG,cAAWjD,EAChB0uB,GAAAA,GAAAA,UAAqBlyB,KAAKivC,iBAC9B,GACA,yBACA,WACIjvC,KAAKwuC,uBAAwB,CACjC,GAAC,2BACD,WACIxuC,KAAKwuC,uBAAwB,CACjC,GAAC,6BACD,WACI,OAAOxuC,KAAKwuC,uBAAyBxuC,KAAKyuC,qBAC9C,GAAC,oCACD,WACI,OAAQzuC,KAAK6iC,oBACR7iC,KAAKe,QAAUf,KAAKe,OAAOsvC,2BAC5B,CACR,GACA,yBACA,WACQrwC,KAAKixC,oBAETjxC,KAAK6sC,YAAa,EAClB7sC,KAAKkvC,OAASlvC,KAAKkvC,MAAM34B,QAAQ26B,IACjClxC,KAAKouC,cACT,GAAC,kCACD,WACI,IAAQntC,EAAkBjB,KAAKmO,QAAvBlN,cACR,OAAOA,GAAiBA,EAAcwY,WAAWrL,iBACrD,GAAC,wBACD,WAAyC,IAA9B+iC,IAAwB,UAAH,+CAC5B,GAAInxC,KAAKgd,KAAKi0B,kBACVjxC,KAAKmO,QAAQmuB,gBAAkBt8B,KAAKmO,QAAQmuB,sBAIhD,IADCt8B,KAAKgd,KAAK6vB,YAAc7sC,KAAKgd,KAAKo0B,eAC/BpxC,KAAK8sC,cAAT,CAEA9sC,KAAK8sC,eAAgB,EACrB,IAAK,IAAI79B,EAAI,EAAGA,EAAIjP,KAAK0vC,KAAK7vC,OAAQoP,IAAK,CACvC,IAAMkK,EAAOnZ,KAAK0vC,KAAKzgC,GACvBkK,EAAKy1B,sBAAuB,EAC5Bz1B,EAAKwsB,aAAa,YACdxsB,EAAKhL,QAAQ2iC,YACb33B,EAAKuwB,YAAW,EAExB,CACA,MAA6B1pC,KAAKmO,QAA1BpI,EAAQ,EAARA,SAAUvB,EAAM,EAANA,OAClB,QAAiBhB,IAAbuC,GAA2BvB,EAA/B,CAEA,IAAM4J,EAAoBpO,KAAKqxC,uBAC/BrxC,KAAKsxC,2BAA6BljC,EAC5BA,EAAkBpO,KAAKkO,aAAc,SACrC1K,EACNxD,KAAKuxC,iBACLJ,GAAyBnxC,KAAKwxC,gBAAgB,aANpC,CAZA,CAmBd,GACA,uBACA,WAKI,GAJyBxxC,KAAKixC,kBAQ1B,OAHAjxC,KAAKyxC,gBACLzxC,KAAKgvC,yBACLhvC,KAAKkvC,MAAM34B,QAAQm7B,IAGlB1xC,KAAK6sC,aAEV7sC,KAAK6sC,YAAa,EAOd7sC,KAAK8uC,eAAepjC,OACpB1L,KAAK8uC,eAAev4B,QAAQo7B,IAC5B3xC,KAAK8uC,eAAe5sB,SAKxBliB,KAAKkvC,MAAM34B,QAAQq7B,IAKnB5xC,KAAKkvC,MAAM34B,QAAQqvB,IAKnB5lC,KAAKkvC,MAAM34B,QAAQs7B,IACnB7xC,KAAKgvC,oBAEL8C,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,YACAA,GAAAA,GAAAA,SACJ,GAAC,+BACD,WACI9xC,KAAKkvC,MAAM34B,QAAQw7B,IACnB/xC,KAAKyvC,YAAYl5B,QAAQy7B,GAC7B,GAAC,sCACD,WACI9wB,GAAAA,GAAAA,UAAelhB,KAAKivC,kBAAkB,GAAO,EACjD,GAAC,uCACD,WAA4B,WAMxB/tB,GAAAA,GAAAA,YAAgB,WACR,EAAK4rB,cACL,EAAK9vB,KAAKssB,YAGV,EAAKtsB,KAAK+xB,mBAElB,GACJ,GACA,4BAGA,YACQ/uC,KAAK2sC,UAAa3sC,KAAKyG,WAE3BzG,KAAK2sC,SAAW3sC,KAAKiyC,UACzB,GAAC,0BACD,WACI,GAAKjyC,KAAKyG,WAGVzG,KAAK2lC,eACC3lC,KAAKmO,QAAQ+jC,qBAAuBlyC,KAAKgqC,UAC1ChqC,KAAK8sC,eADV,CAWA,GAAI9sC,KAAKysC,aAAezsC,KAAKysC,WAAWhmC,SACpC,IAAK,IAAIwI,EAAI,EAAGA,EAAIjP,KAAK0vC,KAAK7vC,OAAQoP,IAAK,CAC1BjP,KAAK0vC,KAAKzgC,GAClB02B,cACT,CAEJ,IAAMwM,EAAanyC,KAAKwE,OACxBxE,KAAKwE,OAASxE,KAAKiyC,SAAQ,GAC3BjyC,KAAKoyC,gBAAkBnS,KACvBjgC,KAAK8sC,eAAgB,EACrB9sC,KAAKuoC,qBAAkB/kC,EACvBxD,KAAKwxC,gBAAgB,UAAWxxC,KAAKwE,OAAOw+B,WAC5C,IAAQ/hC,EAAkBjB,KAAKmO,QAAvBlN,cACRA,GACIA,EAAcogB,OAAO,gBAAiBrhB,KAAKwE,OAAOw+B,UAAWmP,EAAaA,EAAWnP,eAAYx/B,EAtBrG,CAuBJ,GAAC,0BACD,WAAgC,IAAnB6uC,EAAQ,UAAH,6CAAG,UACbC,EAAmBlvC,QAAQpD,KAAKmO,QAAQokC,cAAgBvyC,KAAKyG,UAC7DzG,KAAKykC,QACLzkC,KAAKykC,OAAO2J,cAAgBpuC,KAAKgd,KAAKoxB,aACtCpuC,KAAKykC,OAAO4N,QAAUA,IACtBC,GAAmB,GAEnBA,IACAtyC,KAAKykC,OAAS,CACV2J,YAAapuC,KAAKgd,KAAKoxB,YACvBiE,MAAAA,EACAG,OAAQvE,EAAkBjuC,KAAKyG,UAC/B8K,OAAQy8B,EAAchuC,KAAKyG,WAGvC,GAAC,4BACD,WACI,GAAKynC,EAAL,CAEA,IAAMuE,EAAmBzyC,KAAK8sC,eAAiB9sC,KAAK4uC,qBAC9C8D,EAAgB1yC,KAAKuoC,kBAAoBsD,GAAY7rC,KAAKuoC,iBAC1Dn6B,EAAoBpO,KAAKqxC,uBACzBsB,EAAyBvkC,EACzBA,EAAkBpO,KAAKkO,aAAc,SACrC1K,EACAovC,EAA8BD,IAA2B3yC,KAAKsxC,2BAChEmB,IACCC,GACGlkC,GAAaxO,KAAKkO,eAClB0kC,KACJ1E,EAAeluC,KAAKyG,SAAUksC,GAC9B3yC,KAAK4uC,sBAAuB,EAC5B5uC,KAAKisC,iBAdC,CAgBd,GAAC,qBACD,WAAgC,IAk2BtBpL,EAl2BFgS,IAAkB,UAAH,+CACbC,EAAU9yC,KAAK0kC,iBACjB1B,EAAYhjC,KAAK+yC,oBAAoBD,GAUzC,OAJID,IACA7P,EAAYhjC,KAAK6yC,gBAAgB7P,IA01B7CgQ,IADcnS,EAv1BGmC,GAw1BH16B,GACd0qC,GAAUnS,EAAIt4B,GAx1BC,CACH6lC,YAAapuC,KAAKgd,KAAKoxB,YACvB6E,YAAaH,EACb9P,UAAAA,EACA90B,aAAc,CAAC,EACfqB,OAAQvP,KAAK+E,GAErB,GAAC,4BACD,WACI,IAAQ9D,EAAkBjB,KAAKmO,QAAvBlN,cACR,IAAKA,EACD,OAAOg/B,KACX,IAAMY,EAAM5/B,EAAcygC,qBAElB+C,EAAWzkC,KAAKgd,KAAhBynB,OAKR,OAJIA,IACAxD,GAAcJ,EAAIv4B,EAAGm8B,EAAOlzB,OAAOjJ,GACnC24B,GAAcJ,EAAIt4B,EAAGk8B,EAAOlzB,OAAOhJ,IAEhCs4B,CACX,GAAC,iCACD,SAAoBA,GAChB,IAAMqS,EAAmBjT,KACzBmL,GAAY8H,EAAkBrS,GAK9B,IAAK,IAAI5xB,EAAI,EAAGA,EAAIjP,KAAK0vC,KAAK7vC,OAAQoP,IAAK,CACvC,IAAMkK,EAAOnZ,KAAK0vC,KAAKzgC,GACfw1B,EAAoBtrB,EAApBsrB,OAAQt2B,EAAYgL,EAAZhL,QAChB,GAAIgL,IAASnZ,KAAKgd,MAAQynB,GAAUt2B,EAAQokC,aAAc,CAKtD,GAAI9N,EAAO+N,OAAQ,CACfpH,GAAY8H,EAAkBrS,GAC9B,IAAgBsS,EAAenzC,KAAKgd,KAA5BynB,OAKJ0O,IACAlS,GAAciS,EAAiB5qC,GAAI6qC,EAAW5hC,OAAOjJ,GACrD24B,GAAciS,EAAiB3qC,GAAI4qC,EAAW5hC,OAAOhJ,GAE7D,CACA04B,GAAciS,EAAiB5qC,EAAGm8B,EAAOlzB,OAAOjJ,GAChD24B,GAAciS,EAAiB3qC,EAAGk8B,EAAOlzB,OAAOhJ,EACpD,CACJ,CACA,OAAO2qC,CACX,GAAC,4BACD,SAAerS,GAA4B,IAAvBuS,EAAgB,UAAH,8CACvBC,EAAiBpT,KACvBmL,GAAYiI,EAAgBxS,GAC5B,IAAK,IAAI5xB,EAAI,EAAGA,EAAIjP,KAAK0vC,KAAK7vC,OAAQoP,IAAK,CACvC,IAAMkK,EAAOnZ,KAAK0vC,KAAKzgC,IAClBmkC,GACDj6B,EAAKhL,QAAQokC,cACbp5B,EAAKsrB,QACLtrB,IAASA,EAAK6D,MACdykB,GAAa4R,EAAgB,CACzB/qC,GAAI6Q,EAAKsrB,OAAOlzB,OAAOjJ,EACvBC,GAAI4Q,EAAKsrB,OAAOlzB,OAAOhJ,IAG1BiG,GAAa2K,EAAKjL,eAEvBuzB,GAAa4R,EAAgBl6B,EAAKjL,aACtC,CAIA,OAHIM,GAAaxO,KAAKkO,eAClBuzB,GAAa4R,EAAgBrzC,KAAKkO,cAE/BmlC,CACX,GAAC,6BACD,SAAgBxS,GACZ,IAAMyS,EAAsBrT,KAC5BmL,GAAYkI,EAAqBzS,GACjC,IAAK,IAAI5xB,EAAI,EAAGA,EAAIjP,KAAK0vC,KAAK7vC,OAAQoP,IAAK,CACvC,IAAMkK,EAAOnZ,KAAK0vC,KAAKzgC,GACvB,GAAKkK,EAAK1S,UAEL+H,GAAa2K,EAAKjL,cAAvB,CAEAmyB,GAASlnB,EAAKjL,eAAiBiL,EAAKo4B,iBACpC,IAAM5F,EAAY1L,KAElBmL,GAAYO,EADIxyB,EAAKurB,kBAErBgH,GAAoB4H,EAAqBn6B,EAAKjL,aAAciL,EAAKwzB,SAAWxzB,EAAKwzB,SAAS3J,eAAYx/B,EAAWmoC,EALrG,CAMhB,CAIA,OAHIn9B,GAAaxO,KAAKkO,eAClBw9B,GAAoB4H,EAAqBtzC,KAAKkO,cAE3ColC,CACX,GACA,4BAGA,SAAevyB,GACX/gB,KAAKuzC,YAAcxyB,EACnB/gB,KAAKuuC,mBAAoB,EACzBvuC,KAAKgd,KAAKw2B,0BACd,GAAC,wBACD,SAAWrlC,GACPnO,KAAKmO,SAAU,0BACRnO,KAAKmO,SACLA,GAAO,IACV4+B,eAAiCvpC,IAAtB2K,EAAQ4+B,WAA0B5+B,EAAQ4+B,WAE7D,GAAC,+BACD,WACI/sC,KAAKykC,YAASjhC,EACdxD,KAAKwE,YAAShB,EACdxD,KAAK2sC,cAAWnpC,EAChBxD,KAAKsxC,gCAA6B9tC,EAClCxD,KAAKuzC,iBAAc/vC,EACnBxD,KAAKhB,YAASwE,EACdxD,KAAK8sC,eAAgB,CACzB,GACA,gCAGA,WAMI,IAAMX,EAAOnsC,KAAKyzC,UAOlB,GANAzzC,KAAKuuC,oBAAsBvuC,KAAKuuC,kBAAoBpC,EAAKoC,mBACzDvuC,KAAKsuC,mBAAqBtuC,KAAKsuC,iBAAmBnC,EAAKmC,kBAKlDtuC,KAAKuuC,mBAAsBvuC,KAAK0zC,+BAArC,CAEA,MAA6B1zC,KAAKmO,QAA1B3J,EAAM,EAANA,OAAQuB,EAAQ,EAARA,SAIhB,GAAK/F,KAAKwE,SAAYA,GAAUuB,GAAhC,CAQA,IAAK/F,KAAKuzC,cAAgBvzC,KAAKswC,eAAgB,CAE3C,IAAMqD,EAAiB3zC,KAAK4zC,6BACxBD,GAAkBA,EAAenvC,QACjCxE,KAAK2zC,eAAiBA,EACtB3zC,KAAKswC,eAAiBrQ,KACtBjgC,KAAK6zC,qBAAuB5T,KAC5Bb,GAAqBp/B,KAAK6zC,qBAAsB7zC,KAAKwE,OAAOw+B,UAAW2Q,EAAenvC,OAAOw+B,WAC7FoI,GAAYprC,KAAKswC,eAAgBtwC,KAAK6zC,uBAGtC7zC,KAAK2zC,eAAiB3zC,KAAKswC,oBAAiB9sC,CAEpD,CzB5mBZ,IAAyBxE,EAAQkgC,EAAUn+B,EyBinB/B,GAAKf,KAAKswC,gBAAmBtwC,KAAKuzC,YAwClC,GAnCKvzC,KAAKhB,SACNgB,KAAKhB,OAASihC,KACdjgC,KAAK8zC,qBAAuB7T,MAK5BjgC,KAAKswC,gBACLtwC,KAAK6zC,sBACL7zC,KAAK2zC,gBACL3zC,KAAK2zC,eAAe30C,QzBhoBXA,EyBioBOgB,KAAKhB,OzBjoBJkgC,EyBioBYl/B,KAAKswC,ezBjoBPvvC,EyBioBuBf,KAAK2zC,eAAe30C,OzBhoBlFigC,GAAiBjgC,EAAOsJ,EAAG42B,EAAS52B,EAAGvH,EAAOuH,GAC9C22B,GAAiBjgC,EAAOuJ,EAAG22B,EAAS32B,EAAGxH,EAAOwH,IyBooB7BvI,KAAKuzC,aACNnwC,QAAQpD,KAAKitC,cAEbjtC,KAAKhB,OAASgB,KAAK+zC,eAAe/zC,KAAKwE,OAAOw+B,WAG9CoI,GAAYprC,KAAKhB,OAAQgB,KAAKwE,OAAOw+B,WAEzCpC,GAAc5gC,KAAKhB,OAAQgB,KAAKuzC,cAMhCnI,GAAYprC,KAAKhB,OAAQgB,KAAKwE,OAAOw+B,WAKrChjC,KAAK0zC,+BAAgC,CACrC1zC,KAAK0zC,gCAAiC,EACtC,IAAMC,EAAiB3zC,KAAK4zC,6BACxBD,GACAvwC,QAAQuwC,EAAe1G,gBACnB7pC,QAAQpD,KAAKitC,gBAChB0G,EAAexlC,QAAQokC,cACxBoB,EAAe30C,QACfgB,KAAK2zC,eAAiBA,EACtB3zC,KAAKswC,eAAiBrQ,KACtBjgC,KAAK6zC,qBAAuB5T,KAC5Bb,GAAqBp/B,KAAK6zC,qBAAsB7zC,KAAKhB,OAAQ20C,EAAe30C,QAC5EosC,GAAYprC,KAAKswC,eAAgBtwC,KAAK6zC,uBAGtC7zC,KAAK2zC,eAAiB3zC,KAAKswC,oBAAiB9sC,CAEpD,CAlFU,CANA,CAyFd,GAAC,wCACD,WACI,GAAKxD,KAAKe,SACNs/B,GAASrgC,KAAKe,OAAOmN,gBACrBoyB,GAAetgC,KAAKe,OAAOmN,cAG/B,OAAKlO,KAAKe,OAAOuvC,gBACbtwC,KAAKe,OAAOwyC,aACZvzC,KAAKe,OAAOoN,QAAQ2iC,aACpB9wC,KAAKe,OAAOyD,OACLxE,KAAKe,OAGLf,KAAKe,OAAO6yC,4BAE3B,GAAC,4BACD,WACI,IAAQrF,EAAwCvuC,KAAxCuuC,kBAAmBD,EAAqBtuC,KAArBsuC,iBAC3BtuC,KAAKuuC,kBAAoBvuC,KAAKsuC,kBAAmB,EACjD,IAAMnC,EAAOnsC,KAAKyzC,UACZO,EAAW5wC,QAAQpD,KAAKitC,eAAiBjtC,OAASmsC,EACpD8H,GAAU,EAKd,GAJI1F,IACA0F,GAAU,GACVD,GAAY1F,IACZ2F,GAAU,IACVA,EAAJ,CAEA,MAA6Bj0C,KAAKmO,QAA1B3J,EAAM,EAANA,OAAQuB,EAAQ,EAARA,SAWhB,GANA/F,KAAKquC,gBAAkBjrC,QAASpD,KAAKe,QAAUf,KAAKe,OAAOstC,iBACvDruC,KAAK82B,kBACL92B,KAAKk0C,kBACJl0C,KAAKquC,kBACNruC,KAAKuzC,YAAcvzC,KAAKswC,oBAAiB9sC,GAExCxD,KAAKwE,SAAYA,GAAUuB,GAAhC,CAMAqlC,GAAYprC,KAAKoyC,gBAAiBpyC,KAAKwE,OAAOw+B,WnB5sB1D,SAAyBnC,EAAKyH,EAAW6L,GAAsC,IAA5BC,EAAqB,UAAH,8CAC3DC,EAAaF,EAASt0C,OAC5B,GAAKw0C,EAAL,CAIA,IAAIl7B,EACA4H,EAFJunB,EAAUhgC,EAAIggC,EAAU//B,EAAI,EAG5B,IAAK,IAAI0G,EAAI,EAAGA,EAAIolC,EAAYplC,IAAK,CAEjC8R,GADA5H,EAAOg7B,EAASllC,IACHs5B,gBAKb,IAAM9hC,EAAW0S,EAAK1S,SAClBA,GACAA,EAAS4H,OACkB,aAA3B5H,EAAS4H,MAAMimC,UAGfF,GACAj7B,EAAKhL,QAAQokC,cACbp5B,EAAKsrB,QACLtrB,IAASA,EAAK6D,MACdykB,GAAaZ,EAAK,CACdv4B,GAAI6Q,EAAKsrB,OAAOlzB,OAAOjJ,EACvBC,GAAI4Q,EAAKsrB,OAAOlzB,OAAOhJ,IAG3BwY,IAEAunB,EAAUhgC,GAAKyY,EAAMzY,EAAEiB,MACvB++B,EAAU//B,GAAKwY,EAAMxY,EAAEgB,MAEvBq3B,GAAcC,EAAK9f,IAEnBqzB,GAAsB5lC,GAAa2K,EAAKjL,eACxCuzB,GAAaZ,EAAK1nB,EAAKjL,cAE/B,CAKAo6B,EAAUhgC,EAAIw4B,GAAcwH,EAAUhgC,GACtCggC,EAAU//B,EAAIu4B,GAAcwH,EAAU//B,EA3C5B,CA4Cd,CmBkqBYgsC,CAAgBv0C,KAAKoyC,gBAAiBpyC,KAAKsoC,UAAWtoC,KAAK0vC,KAAMsE,GACjE,IAAQh1C,EAAWmtC,EAAXntC,OACR,GAAKA,EAAL,CAEKgB,KAAKuoC,kBACNvoC,KAAKuoC,gBAAkBvI,KACvBhgC,KAAKw0C,6BAA+BxU,MAExC,IAAMyU,EAAiBz0C,KAAKsoC,UAAUhgC,EAChCosC,EAAiB10C,KAAKsoC,UAAU//B,EAChCosC,EAA0B30C,KAAK40C,oBAUrC5V,GAAah/B,KAAKuoC,gBAAiBvoC,KAAKoyC,gBAAiBpzC,EAAQgB,KAAKkO,cACtElO,KAAK40C,oBAAsB1H,GAAyBltC,KAAKuoC,gBAAiBvoC,KAAKsoC,WAC3EtoC,KAAK40C,sBAAwBD,GAC7B30C,KAAKsoC,UAAUhgC,IAAMmsC,GACrBz0C,KAAKsoC,UAAU//B,IAAMmsC,IACrB10C,KAAKsvC,cAAe,EACpBtvC,KAAKisC,iBACLjsC,KAAKwxC,gBAAgB,mBAAoBxyC,GAxBnC,CAbA,CAbA,CAoDd,GAAC,kBACD,WACIgB,KAAKuvC,WAAY,CAErB,GAAC,kBACD,WACIvvC,KAAKuvC,WAAY,CAErB,GAAC,4BACD,WAAiC,IAAlBsF,IAAY,UAAH,+CAEpB,GADA70C,KAAKmO,QAAQ89B,gBAAkBjsC,KAAKmO,QAAQ89B,iBACxC4I,EAAW,CACX,IAAMhL,EAAQ7pC,KAAK8pC,WACnBD,GAASA,EAAMoC,gBACnB,CACIjsC,KAAKitC,eAAiBjtC,KAAKitC,aAAaxmC,WACxCzG,KAAKitC,kBAAezpC,EAE5B,GAAC,gCACD,SAAmBud,GAA6C,WAAtC8vB,EAA+B,UAAH,8CAC5ClE,EAAW3sC,KAAK2sC,SAChBmI,EAAuBnI,EACvBA,EAASz+B,aACT,CAAC,EACD6mC,GAAc,UAAK/0C,KAAKkO,cACxBqlC,EAAcvT,KACfhgC,KAAK2zC,gBACL3zC,KAAK2zC,eAAexlC,QAAQ2iC,aAC7B9wC,KAAKswC,eAAiBtwC,KAAK6zC,0BAAuBrwC,GAEtDxD,KAAK0zC,gCAAkC7C,EACvC,IAAMmE,EAAiB/U,KAGjBgV,GAFiBtI,EAAWA,EAASp9B,YAAS/L,MAC/BxD,KAAKwE,OAASxE,KAAKwE,OAAO+K,YAAS/L,GAElDqmC,EAAQ7pC,KAAK8pC,WACboL,GAAgBrL,GAASA,EAAME,QAAQlqC,QAAU,EACjDs1C,EAAyB/xC,QAAQ6xC,IAClCC,IAC0B,IAA3Bl1C,KAAKmO,QAAQ4+B,YACZ/sC,KAAK0vC,KAAKzsC,KAAKmyC,KACpBp1C,KAAKwvC,kBAAoB,EACzBxvC,KAAKq1C,eAAiB,SAAC7P,GACnB,IAwdAtgB,EAAQ0C,EAAMc,EAAItoB,EAxdZuoB,EAAW6c,EAAS,IAC1B8P,GAAa/B,EAAYjrC,EAAGyY,EAAMzY,EAAGqgB,GACrC2sB,GAAa/B,EAAYhrC,EAAGwY,EAAMxY,EAAGogB,GACrC,EAAK4sB,eAAehC,GAChB,EAAKjD,gBACL,EAAKuD,sBACL,EAAKrvC,QACL,EAAKmvC,gBACL,EAAKA,eAAenvC,SACpB46B,GAAqB4V,EAAgB,EAAKxwC,OAAOw+B,UAAW,EAAK2Q,eAAenvC,OAAOw+B,WA+c3F9d,EA9cW,EAAKorB,eA8cR1oB,EA9cwB,EAAKisB,qBA8cvBnrB,EA9c6CssB,EA8czC50C,EA9cyDuoB,EA+cvF6sB,GAAQtwB,EAAO5c,EAAGsf,EAAKtf,EAAGogB,EAAGpgB,EAAGlI,GAChCo1C,GAAQtwB,EAAO3c,EAAGqf,EAAKrf,EAAGmgB,EAAGngB,EAAGnI,IA9chB60C,IACA,EAAKrI,gBAAkBmI,ERp0B3C,SAAmB/1C,EAAQy2C,EAAQtJ,EAAMxjB,EAAUwsB,EAAwBD,GACnEC,GACAn2C,EAAOwO,QAAU6H,GAAI,OAEJ7R,IAAjB2oC,EAAK3+B,QAAwB2+B,EAAK3+B,QAAU,EAAGu9B,GAAgBpiB,IAC/D3pB,EAAO02C,YAAcrgC,QAAuB7R,IAAnBiyC,EAAOjoC,QAAwBioC,EAAOjoC,QAAU,EAAG,EAAGy9B,GAAiBtiB,KAE3FusB,IACLl2C,EAAOwO,QAAU6H,QAAuB7R,IAAnBiyC,EAAOjoC,QAAwBioC,EAAOjoC,QAAU,OAAoBhK,IAAjB2oC,EAAK3+B,QAAwB2+B,EAAK3+B,QAAU,EAAGmb,IAK3H,IAAK,IAAI1Z,EAAI,EAAGA,EAAIy7B,GAAYz7B,IAAK,CACjC,IAAM0mC,EAAc,SAAH,OAAYlL,GAAQx7B,GAAE,UACnC2mC,EAAe/K,GAAU4K,EAAQE,GACjCE,EAAahL,GAAUsB,EAAMwJ,QACZnyC,IAAjBoyC,QAA6CpyC,IAAfqyC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAjL,GAAKgL,KAAkBhL,GAAKiL,IAE5B72C,EAAO22C,GAAezsC,KAAKD,IAAIoM,GAAIs1B,GAASiL,GAAejL,GAASkL,GAAaltB,GAAW,IACxFve,GAAQxC,KAAKiuC,IAAezrC,GAAQxC,KAAKguC,MACzC52C,EAAO22C,IAAgB,MAI3B32C,EAAO22C,GAAeE,EAE9B,EAIIJ,EAAOhpC,QAAU0/B,EAAK1/B,UACtBzN,EAAOyN,OAAS4I,GAAIogC,EAAOhpC,QAAU,EAAG0/B,EAAK1/B,QAAU,EAAGkc,GAElE,CQ6xBoBmtB,CAAUf,EAAaD,EAAsB,EAAK5mC,aAAcya,EAAUwsB,EAAwBD,IAEtG,EAAKl4B,KAAKw2B,2BACV,EAAKvH,iBACL,EAAKuD,kBAAoB7mB,CAC7B,EACA3oB,KAAKq1C,eAAer1C,KAAKmO,QAAQ2iC,WAAa,IAAO,EACzD,GAAC,4BACD,SAAe3iC,GAAS,WACpBnO,KAAKwxC,gBAAgB,kBACrBxxC,KAAK82B,kBAAoB92B,KAAK82B,iBAAiB9U,OAC3ChiB,KAAKitC,cAAgBjtC,KAAKitC,aAAanW,kBACvC92B,KAAKitC,aAAanW,iBAAiB9U,OAEnChiB,KAAKk0C,mBACLhiB,GAAAA,GAAAA,OAAkBlyB,KAAKk0C,kBACvBl0C,KAAKk0C,sBAAmB1wC,GAO5BxD,KAAKk0C,iBAAmBhzB,GAAAA,GAAAA,QAAY,WAChCtc,EAAsBC,wBAAyB,EAC/C,EAAKiyB,iBCz0BrB,SAAiBlP,EAAMc,GAAqB,IAAjBhS,EAAa,UAAH,6CAAG,CAAC,EAC/B5W,EAAQqI,EAAcyf,GAAQA,EAAO9E,GAAY8E,GAEvD,OADA9nB,EAAM+C,MAAM0zB,GAA2B,GAAIz2B,EAAO4oB,EAAIhS,IAC/C,CACHsL,KAAM,kBAAMliB,EAAMkiB,MAAM,EACxB+zB,YAAa,kBAAMj2C,EAAMi2C,aAAa,EAE9C,CDk0BwC/yC,CAAQ,EAAG4qC,IAAiB,kBAC7Cz/B,GAAO,IACV6kB,SAAU,SAACwS,GACP,EAAK6P,eAAe7P,GACpBr3B,EAAQ6kB,UAAY7kB,EAAQ6kB,SAASwS,EACzC,EACA1S,WAAY,WACR3kB,EAAQ2kB,YAAc3kB,EAAQ2kB,aAC9B,EAAKkjB,mBACT,KAEA,EAAK/I,eACL,EAAKA,aAAanW,iBAAmB,EAAKA,kBAE9C,EAAKod,sBAAmB1wC,CAC5B,GACJ,GAAC,+BACD,WACQxD,KAAKitC,eACLjtC,KAAKitC,aAAanW,sBAAmBtzB,EACrCxD,KAAKitC,aAAaP,qBAAkBlpC,GAExC,IAAMqmC,EAAQ7pC,KAAK8pC,WACnBD,GAASA,EAAMoM,wBACfj2C,KAAKitC,aACDjtC,KAAK82B,iBACD92B,KAAK4sC,qBACDppC,EACZxD,KAAKwxC,gBAAgB,oBACzB,GAAC,6BACD,WACQxxC,KAAK82B,mBACL92B,KAAKq1C,gBAAkBr1C,KAAKq1C,eAAezH,IAC3C5tC,KAAK82B,iBAAiB9U,QAE1BhiB,KAAKg2C,mBACT,GAAC,qCACD,WACI,IAAM7J,EAAOnsC,KAAKyzC,UACZK,EAAuD3H,EAAvD2H,qBAAsB90C,EAAiCmtC,EAAjCntC,OAAQwF,EAAyB2nC,EAAzB3nC,OAAQ0J,EAAiBi+B,EAAjBj+B,aAC5C,GAAK4lC,GAAyB90C,GAAWwF,EAAzC,CAOA,GAAIxE,OAASmsC,GACTnsC,KAAKwE,QACLA,GACA0xC,GAA0Bl2C,KAAKmO,QAAQgoC,cAAen2C,KAAKwE,OAAOw+B,UAAWx+B,EAAOw+B,WAAY,CAChGhkC,EAASgB,KAAKhB,QAAUihC,KACxB,IAAMmW,EAAU3X,GAAWz+B,KAAKwE,OAAOw+B,UAAU16B,GACjDtJ,EAAOsJ,EAAEU,IAAMmjC,EAAKntC,OAAOsJ,EAAEU,IAC7BhK,EAAOsJ,EAAEW,IAAMjK,EAAOsJ,EAAEU,IAAMotC,EAC9B,IAAMC,EAAU5X,GAAWz+B,KAAKwE,OAAOw+B,UAAUz6B,GACjDvJ,EAAOuJ,EAAES,IAAMmjC,EAAKntC,OAAOuJ,EAAES,IAC7BhK,EAAOuJ,EAAEU,IAAMjK,EAAOuJ,EAAES,IAAMqtC,CAClC,CACAjL,GAAY0I,EAAsB90C,GAMlCyiC,GAAaqS,EAAsB5lC,GAOnC8wB,GAAah/B,KAAKw0C,6BAA8Bx0C,KAAKoyC,gBAAiB0B,EAAsB5lC,EA/BlF,CAgCd,GAAC,gCACD,SAAmBnI,EAAUoT,GACpBnZ,KAAKyvC,YAAYnoC,IAAIvB,IACtB/F,KAAKyvC,YAAYloC,IAAIxB,EAAU,IAAIimC,IAEzBhsC,KAAKyvC,YAAY3wC,IAAIiH,GAC7B+b,IAAI3I,GACV,IAAMxD,EAASwD,EAAKhL,QAAQmoC,uBAC5Bn9B,EAAKwwB,QAAQ,CACTjzB,WAAYf,EAASA,EAAOe,gBAAalT,EACzC+oC,sBAAuB52B,GAAUA,EAAO4gC,4BAClC5gC,EAAO4gC,4BAA4Bp9B,QACnC3V,GAEd,GAAC,oBACD,WACI,IAAMqmC,EAAQ7pC,KAAK8pC,WACnB,OAAOD,GAAQA,EAAMsC,OAASnsC,IAClC,GAAC,qBACD,WACI,IAAI6Q,EAEJ,OADqB7Q,KAAKmO,QAAlBpI,WACsC,QAA1B8K,EAAK7Q,KAAK8pC,kBAA+B,IAAPj5B,OAAgB,EAASA,EAAGs7B,OAAgBnsC,IACtG,GAAC,yBACD,WACI,IAAI6Q,EAEJ,OADqB7Q,KAAKmO,QAAlBpI,SACqC,QAA1B8K,EAAK7Q,KAAK8pC,kBAA+B,IAAPj5B,OAAgB,EAASA,EAAGq7B,cAAW1oC,CAChG,GAAC,sBACD,WACI,IAAQuC,EAAa/F,KAAKmO,QAAlBpI,SACR,GAAIA,EACA,OAAO/F,KAAKgd,KAAKyyB,YAAY3wC,IAAIiH,EACzC,GAAC,qBACD,WAAiE,6DAAJ,CAAC,EAApD4oC,EAAU,EAAVA,WAAYj4B,EAAU,EAAVA,WAAY61B,EAAqB,EAArBA,sBACxB1C,EAAQ7pC,KAAK8pC,WACfD,GACAA,EAAMF,QAAQ3pC,KAAMusC,GACpBoC,IACA3uC,KAAKuoC,qBAAkB/kC,EACvBxD,KAAK2uC,YAAa,GAElBj4B,GACA1W,KAAKwpC,WAAW,CAAE9yB,WAAAA,GAC1B,GAAC,sBACD,WACI,IAAMmzB,EAAQ7pC,KAAK8pC,WACnB,QAAID,GACOA,EAAMD,SAAS5pC,KAK9B,GAAC,2BACD,WACI,IAAQiB,EAAkBjB,KAAKmO,QAAvBlN,cACR,GAAKA,EAAL,CAGA,IAAIu1C,GAAY,EAKRtoC,EAAiBjN,EAAjBiN,aAQR,IAPIA,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACb4pC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZxnC,EAAI,EAAGA,EAAI0+B,GAAc9tC,OAAQoP,IAAK,CAC3C,IAAMvK,EAAM,SAAWipC,GAAc1+B,GAEjCf,EAAaxJ,KACb+xC,EAAY/xC,GAAOwJ,EAAaxJ,GAChCzD,EAAcy1C,eAAehyC,EAAK,GAE1C,CAKA,IAAK,IAAMA,KAFXzD,EAAcc,SAEI00C,EACdx1C,EAAcy1C,eAAehyC,EAAK+xC,EAAY/xC,IAIlDzD,EAAcgrC,gBApBJ,CAhBA,CAqCd,GAAC,iCACD,WAAoC,IAC5Bp7B,EAAIwU,EADQpR,EAAY,UAAH,6CAAG,CAAC,EAGvB0iC,EAAS,CAAC,EAChB,IAAK32C,KAAKyG,UAAYzG,KAAK0uC,MACvB,OAAOiI,EACX,IAAK32C,KAAKuvC,UACN,MAAO,CAAEqH,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAMxoC,EAAoBpO,KAAKqxC,uBAC/B,GAAIrxC,KAAK2uC,WAQL,OAPA3uC,KAAK2uC,YAAa,EAClBgI,EAAOnpC,QAAU,GACjBmpC,EAAOE,cACHrhC,GAAmBvB,EAAU4iC,gBAAkB,GACnDF,EAAO7tC,UAAYsF,EACbA,EAAkBpO,KAAKkO,aAAc,IACrC,OACCyoC,EAEX,IAAMxK,EAAOnsC,KAAKyzC,UAClB,IAAKzzC,KAAKuoC,kBAAoBvoC,KAAKwE,SAAW2nC,EAAKntC,OAAQ,CACvD,IAAM83C,EAAc,CAAC,EAerB,OAdI92C,KAAKmO,QAAQpI,WACb+wC,EAAYtpC,aACsBhK,IAA9BxD,KAAKkO,aAAaV,QACZxN,KAAKkO,aAAaV,QAClB,EACVspC,EAAYD,cACRrhC,GAAmBvB,EAAU4iC,gBAAkB,IAEnD72C,KAAKsvC,eAAiB9gC,GAAaxO,KAAKkO,gBACxC4oC,EAAYhuC,UAAYsF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNpO,KAAKsvC,cAAe,GAEjBwH,CACX,CACA,IAAMC,EAAiB5K,EAAKS,iBAAmBT,EAAKj+B,aACpDlO,KAAKg3C,0BACLL,EAAO7tC,UAAYokC,GAAyBltC,KAAKw0C,6BAA8Bx0C,KAAKsoC,UAAWyO,GAC3F3oC,IACAuoC,EAAO7tC,UAAYsF,EAAkB2oC,EAAgBJ,EAAO7tC,YAEhE,MAAiB9I,KAAKuoC,gBAAdjgC,EAAC,EAADA,EAAGC,EAAC,EAADA,EA+BX,IAAK,IAAM7D,KA9BXiyC,EAAOpoC,gBAAkB,GAAH,OAAiB,IAAXjG,EAAEgJ,OAAY,aAAgB,IAAX/I,EAAE+I,OAAY,OACzD66B,EAAKS,gBAKL+J,EAAOnpC,QACH2+B,IAASnsC,KACiG,QAAnGqlB,EAAuC,QAAjCxU,EAAKkmC,EAAevpC,eAA4B,IAAPqD,EAAgBA,EAAK7Q,KAAKkO,aAAaV,eAA4B,IAAP6X,EAAgBA,EAAK,EACjIrlB,KAAK0sC,gBACD1sC,KAAKkO,aAAaV,QAClBupC,EAAerB,YAO7BiB,EAAOnpC,QACH2+B,IAASnsC,UACwBwD,IAA3BuzC,EAAevpC,QACXupC,EAAevpC,QACf,QAC2BhK,IAA/BuzC,EAAerB,YACXqB,EAAerB,YACf,EAKA7tC,EACd,QAA4BrE,IAAxBuzC,EAAeryC,GAAnB,CAEA,MAA6BmD,EAAgBnD,GAArC6iC,EAAO,EAAPA,QAASgD,EAAO,EAAPA,QAOX0M,EAAiC,SAArBN,EAAO7tC,UACnBiuC,EAAeryC,GACf6iC,EAAQwP,EAAeryC,GAAMynC,GACnC,GAAI5B,EAEA,IADA,IAAM2M,EAAM3M,EAAQ1qC,OACXoP,EAAI,EAAGA,EAAIioC,EAAKjoC,IACrB0nC,EAAOpM,EAAQt7B,IAAMgoC,OAIzBN,EAAOjyC,GAAOuyC,CAlBN,CAgChB,OANIj3C,KAAKmO,QAAQpI,WACb4wC,EAAOE,cACH1K,IAASnsC,KACHwV,GAAmBvB,EAAU4iC,gBAAkB,GAC/C,QAEPF,CACX,GAAC,2BACD,WACI32C,KAAKysC,WAAazsC,KAAK2sC,cAAWnpC,CACtC,GACA,uBACA,WACIxD,KAAKgd,KAAKkyB,MAAM34B,SAAQ,SAAC4C,GAAW,IAAItI,EAAI,OAAwC,QAAhCA,EAAKsI,EAAK2d,wBAAqC,IAAPjmB,OAAgB,EAASA,EAAGmR,MAAQ,IAChIhiB,KAAKgd,KAAKkyB,MAAM34B,QAAQm7B,IACxB1xC,KAAKgd,KAAKyyB,YAAYvtB,OAC1B,KAAC,EA7mCL,EA+mCJ,CACA,SAAS0jB,GAAazsB,GAClBA,EAAKysB,cACT,CACA,SAASiM,GAAmB14B,GACxB,IAAItI,EACE87B,GAAuC,QAA1B97B,EAAKsI,EAAKszB,kBAA+B,IAAP57B,OAAgB,EAASA,EAAG87B,WAAaxzB,EAAKwzB,SACnG,GAAIxzB,EAAK6wB,UACL7wB,EAAK3U,QACLmoC,GACAxzB,EAAKg+B,aAAa,aAAc,CAChC,MAA2Dh+B,EAAK3U,OAA7CA,EAAM,EAAjBw+B,UAAgCoU,EAAc,EAA3BnE,YACnBkD,EAAkBh9B,EAAKhL,QAAvBgoC,cACFnC,EAAWrH,EAASp9B,SAAW4J,EAAK3U,OAAO+K,OAG3B,SAAlB4mC,EACAjW,IAAS,SAACxB,GACN,IAAM2Y,EAAerD,EACfrH,EAASsG,YAAYvU,GACrBiO,EAAS3J,UAAUtE,GACnB7+B,EAAS4+B,GAAW4Y,GAC1BA,EAAaruC,IAAMxE,EAAOk6B,GAAM11B,IAChCquC,EAAapuC,IAAMouC,EAAaruC,IAAMnJ,CAC1C,IAEKq2C,GAA0BC,EAAexJ,EAAS3J,UAAWx+B,IAClE07B,IAAS,SAACxB,GACN,IAAM2Y,EAAerD,EACfrH,EAASsG,YAAYvU,GACrBiO,EAAS3J,UAAUtE,GACnB7+B,EAAS4+B,GAAWj6B,EAAOk6B,IACjC2Y,EAAapuC,IAAMouC,EAAaruC,IAAMnJ,CAC1C,IAEJ,IAAMy3C,EAActX,KACpBhB,GAAasY,EAAa9yC,EAAQmoC,EAAS3J,WAC3C,IAAMuU,EAAcvX,KAChBgU,EACAhV,GAAauY,EAAap+B,EAAK46B,eAAeqD,GAAgB,GAAOzK,EAASsG,aAG9EjU,GAAauY,EAAa/yC,EAAQmoC,EAAS3J,WAE/C,IAAMmD,GAAoB0F,GAAYyL,GAClCnH,GAA2B,EAC/B,IAAKh3B,EAAKszB,WAAY,CAClB,IAAMkH,EAAiBx6B,EAAKy6B,6BAK5B,GAAID,IAAmBA,EAAelH,WAAY,CAC9C,IAAkB+K,EAAyC7D,EAAnDhH,SAAkC8K,EAAiB9D,EAAzBnvC,OAClC,GAAIgzC,GAAkBC,EAAc,CAChC,IAAMC,EAAmBzX,KACzBb,GAAqBsY,EAAkB/K,EAAS3J,UAAWwU,EAAexU,WAC1E,IAAMgS,EAAiB/U,KACvBb,GAAqB4V,EAAgBxwC,EAAQizC,EAAazU,WACrD8I,GAAU4L,EAAkB1C,KAC7B7E,GAA2B,GAE3BwD,EAAexlC,QAAQ2iC,aACvB33B,EAAKm3B,eAAiB0E,EACtB77B,EAAK06B,qBAAuB6D,EAC5Bv+B,EAAKw6B,eAAiBA,EAE9B,CACJ,CACJ,CACAx6B,EAAKq4B,gBAAgB,YAAa,CAC9BhtC,OAAAA,EACAmoC,SAAAA,EACA5rB,MAAOw2B,EACPD,YAAAA,EACAnR,iBAAAA,EACAgK,yBAAAA,GAER,MACK,GAAIh3B,EAAK6wB,SAAU,CACpB,IAAQ1N,EAAmBnjB,EAAKhL,QAAxBmuB,eACRA,GAAkBA,GACtB,CAMAnjB,EAAKhL,QAAQuI,gBAAalT,CAC9B,CACA,SAAS2rC,GAAoBh2B,GAKzBA,EAAKo1B,oBAAsBp1B,EAAKo1B,kBAAoBnrC,QAAQ+V,EAAKpY,QAAUoY,EAAKpY,OAAOwtC,oBAIvFp1B,EAAKm1B,mBAAqBn1B,EAAKm1B,iBAAmBlrC,QAAQ+V,EAAKpY,QAAUoY,EAAKpY,OAAOutC,kBACzF,CACA,SAASyD,GAAc54B,GACnBA,EAAK44B,eACT,CACA,SAASL,GAAkBv4B,GACvBA,EAAKu4B,mBACT,CACA,SAASE,GAAoBz4B,GACzB,IAAQlY,EAAkBkY,EAAKhL,QAAvBlN,cACJA,GAAiBA,EAAcwY,WAAWk+B,uBAC1C12C,EAAcogB,OAAO,uBAEzBlI,EAAK+0B,gBACT,CACA,SAAS+B,GAAgB92B,GACrBA,EAAK82B,kBACL92B,EAAKo6B,YAAcp6B,EAAKm3B,eAAiBn3B,EAAKna,YAASwE,CAC3D,CACA,SAAS4rC,GAAmBj2B,GACxBA,EAAKi2B,oBACT,CACA,SAASC,GAAel2B,GACpBA,EAAKk2B,gBACT,CACA,SAAS6B,GAAc/3B,GACnBA,EAAK+3B,eACT,CACA,SAASc,GAAoBnI,GACzBA,EAAM+N,oBACV,CACA,SAAStC,GAAapwB,EAAQnE,EAAO3gB,GACjC8kB,EAAO6Z,UAAY1pB,GAAI0L,EAAMge,UAAW,EAAG3+B,GAC3C8kB,EAAO3b,MAAQ8L,GAAI0L,EAAMxX,MAAO,EAAGnJ,GACnC8kB,EAAO5T,OAASyP,EAAMzP,OACtB4T,EAAO4Z,YAAc/d,EAAM+d,WAC/B,CACA,SAAS0W,GAAQtwB,EAAQ0C,EAAMc,EAAItoB,GAC/B8kB,EAAOlc,IAAMqM,GAAIuS,EAAK5e,IAAK0f,EAAG1f,IAAK5I,GACnC8kB,EAAOjc,IAAMoM,GAAIuS,EAAK3e,IAAKyf,EAAGzf,IAAK7I,EACvC,CAKA,SAASg1C,GAAoBj8B,GACzB,OAAQA,EAAKyzB,sBAAwDppC,IAArC2V,EAAKyzB,gBAAgB8I,WACzD,CACA,IAAMlF,GAA0B,CAC5BhjB,SAAU,IACVjD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAASonB,GAAex4B,EAAMg1B,GAM1B,IADA,IAAI0J,EAAa1+B,EAAK6D,KACb/N,EAAIkK,EAAKu2B,KAAK7vC,OAAS,EAAGoP,GAAK,EAAGA,IACvC,GAAI7L,QAAQ+V,EAAKu2B,KAAKzgC,GAAGxI,UAAW,CAChCoxC,EAAa1+B,EAAKu2B,KAAKzgC,GACvB,KACJ,CAEJ,IACM+E,GADgB6jC,GAAcA,IAAe1+B,EAAK6D,KAAO66B,EAAWpxC,SAAWyW,UACvD46B,cAAc,wBAAD,OAAyB3J,EAAS,OACzEn6B,GACAmF,EAAKzS,MAAMsN,GAAS,EAC5B,CACA,SAASg/B,GAAUtU,GACfA,EAAK11B,IAAME,KAAKQ,MAAMg1B,EAAK11B,KAC3B01B,EAAKz1B,IAAMC,KAAKQ,MAAMg1B,EAAKz1B,IAC/B,CAKA,SAASitC,GAA0BC,EAAexJ,EAAUnoC,GACxD,MAA0B,aAAlB2xC,GACe,oBAAlBA,IACIxX,GAAOoN,GAAYY,GAAWZ,GAAYvnC,GAAS,GAChE,CE9zCA,ICoBIuzC,GDpBEC,GAAyBnK,GAAqB,CAChDC,qBAAsB,SAACvrC,EAAK8e,GAAM,OAAKnK,GAAY3U,EAAK,SAAU8e,EAAO,EACzE2sB,cAAe,iBAAO,CAClB1lC,EAAG4U,SAAS+6B,gBAAgBC,YAAch7B,SAASi7B,KAAKD,WACxD3vC,EAAG2U,SAAS+6B,gBAAgBG,WAAal7B,SAASi7B,KAAKC,UAC1D,EACDnK,kBAAmB,kBAAM,CAAI,IEN3B1J,GAAqB,CACvB9iC,aAAS+B,GAEP60C,GAAqBxK,GAAqB,CAC5CG,cAAe,SAACvnC,GAAQ,MAAM,CAC1B6B,EAAG7B,EAASyxC,WACZ3vC,EAAG9B,EAAS2xC,UACf,EACDrK,cAAe,WACX,IAAKxJ,GAAmB9iC,QAAS,CAC7B,IAAM62C,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAa5xC,MAAMxE,QACnBo2C,EAAa9O,WAAW,CAAE+I,cAAc,IACxChO,GAAmB9iC,QAAU62C,CACjC,CACA,OAAO/T,GAAmB9iC,OAC9B,EACAysC,eAAgB,SAACznC,EAAU3G,GACvB2G,EAAS4H,MAAMvF,eAAsBtF,IAAV1D,EAAsBA,EAAQ,MAC7D,EACAmuC,kBAAmB,SAACxnC,GAAQ,OAAKrD,QAAuD,UAA/ClB,OAAO6lC,iBAAiBthC,GAAU8xC,SAAqB,IClB9Fr0C,GAAO,CACTI,IAAK,CACD4U,QAASutB,IAEbviC,KAAM,CACFgV,QAASktB,GACToS,eAAgBH,GAChBxyC,cAAAA,KFJF4yC,GAAiB,IAAIzwC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEE0wC,GAAkB,SAACh0C,GAAG,OAAK+zC,GAAenxC,IAAI5C,EAAI,EAClDi0C,GAAmB,SAAC35C,GACtB,OAAOK,OAAO4R,KAAKjS,GAAQiE,KAAKy1C,GACpC,EACME,GAAgB,SAACn2C,GAAC,OAAKA,IAAM0G,GAAU1G,IAAM4H,EAAE,GAErD,SAAW0tC,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,QACpC,CAPD,CAOGA,KAAyBA,GAAuB,CAAC,IACpD,IAAMc,GAAmB,SAACC,EAAQC,GAAG,OAAK1vC,WAAWyvC,EAAO5uC,MAAM,MAAM6uC,GAAK,EACvEC,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAO,GAAkB,IAAhBrwC,EAAS,EAATA,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMswC,EAAWtwC,EAAUua,MAAM,sBACjC,GAAI+1B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAAShwC,EAAUua,MAAM,oBAC/B,OAAIy1B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAIrxC,IAAI,CAAC,IAAK,IAAK,MACnCsxC,GAAgCxxC,EAAmBge,QAAO,SAACphB,GAAG,OAAM20C,GAAc/xC,IAAI5C,EAAI,IAehG,IAAM60C,GAAmB,CAErBjuC,MAAO,kBAAGhD,EAAC,EAADA,EAAC,IAAM6D,YAAAA,OAAW,IAAG,MAAG,MAAEF,aAAAA,OAAY,IAAG,MAAG,SAAO3D,EAAEW,IAAMX,EAAEU,IAAMK,WAAW8C,GAAe9C,WAAW4C,EAAa,EAC/HT,OAAQ,kBAAGjD,EAAC,EAADA,EAAC,IAAMyD,WAAAA,OAAU,IAAG,MAAG,MAAEE,cAAAA,OAAa,IAAG,MAAG,SAAO3D,EAAEU,IAAMV,EAAES,IAAMK,WAAW2C,GAAc3C,WAAW6C,EAAc,EAChIP,IAAK,SAACwtC,EAAO,GAAF,IAAIxtC,EAAG,EAAHA,IAAG,OAAOtC,WAAWsC,EAAI,EACxCG,KAAM,SAACqtC,EAAO,GAAF,IAAIrtC,EAAI,EAAJA,KAAI,OAAOzC,WAAWyC,EAAK,EAC3CD,OAAQ,kBAAGtD,EAAC,EAADA,EAAOoD,EAAG,EAAHA,IAAG,OAAOtC,WAAWsC,IAAQpD,EAAEU,IAAMV,EAAES,IAAI,EAC7D4C,MAAO,kBAAGtD,EAAC,EAADA,EAAOwD,EAAI,EAAJA,KAAI,OAAOzC,WAAWyC,IAASxD,EAAEW,IAAMX,EAAEU,IAAI,EAE9DV,EAAG0wC,GAAuB,EAAG,IAC7BzwC,EAAGywC,GAAuB,EAAG,KAE3BQ,GAA2B,SAACx6C,EAAQiC,EAAew4C,GACrD,IAAMC,EAAaz4C,EAAcygC,qBAC3B1tB,EAAU/S,EAAcQ,QACxBk4C,EAAuB5R,iBAAiB/zB,GACtCsgC,EAAYqF,EAAZrF,QACFhjC,EAAS,CAAC,EAGA,SAAZgjC,GACArzC,EAAcy1C,eAAe,UAAW13C,EAAOs1C,SAAW,SAK9DmF,EAAYljC,SAAQ,SAAC7R,GACjB4M,EAAO5M,GAAO60C,GAAiB70C,GAAKg1C,EAAYC,EACpD,IAEA14C,EAAcc,SACd,IAAM63C,EAAa34C,EAAcygC,qBAQjC,OAPA+X,EAAYljC,SAAQ,SAAC7R,GAGjB,IAAM5E,EAAQmB,EAAcsmB,SAAS7iB,GACrC5E,GAASA,EAAM+5C,KAAKvoC,EAAO5M,IAC3B1F,EAAO0F,GAAO60C,GAAiB70C,GAAKk1C,EAAYD,EACpD,IACO36C,CACX,EACM86C,GAAmC,SAAC74C,EAAejC,GAA4C,IAApCsS,EAAS,UAAH,6CAAG,CAAC,EAAGmF,EAAgB,UAAH,6CAAG,CAAC,EAC3FzX,GAAS,UAAKA,GACdyX,GAAgB,UAAKA,GACrB,IAAMsjC,EAAuB16C,OAAO4R,KAAKjS,GAAQ8mB,OAAO4yB,IAGpDsB,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GA4E7B,GA3EAH,EAAqBxjC,SAAQ,SAAC7R,GAC1B,IAAM5E,EAAQmB,EAAcsmB,SAAS7iB,GACrC,GAAKzD,EAAcqmB,SAAS5iB,GAA5B,CAEA,IAGIy1C,EAHAvyB,EAAOtW,EAAO5M,GACd01C,EAAWrzB,GAAuBa,GAChCc,EAAK1pB,EAAO0F,GAMlB,GAAIyQ,GAAkBuT,GAAK,CACvB,IAAM2xB,EAAe3xB,EAAG7oB,OAClBy6C,EAAsB,OAAV5xB,EAAG,GAAc,EAAI,EACvCd,EAAOc,EAAG4xB,GACVF,EAAWrzB,GAAuBa,GAClC,IAAK,IAAI3Y,EAAIqrC,EAAWrrC,EAAIorC,EAAcprC,IACjCkrC,EAMDnyB,GAAUjB,GAAuB2B,EAAGzZ,MAAQkrC,EAAQ,2CALpDA,EAASpzB,GAAuB2B,EAAGzZ,IACnC+Y,GAAUmyB,IAAWC,GAChBxB,GAAcwB,IAAaxB,GAAcuB,GAAU,gEAMpE,MAEIA,EAASpzB,GAAuB2B,GAEpC,GAAI0xB,IAAaD,EAGb,GAAIvB,GAAcwB,IAAaxB,GAAcuB,GAAS,CAClD,IAAM14C,EAAU3B,EAAMhB,MACC,kBAAZ2C,GACP3B,EAAMyH,IAAI8B,WAAW5H,IAEP,kBAAPinB,EACP1pB,EAAO0F,GAAO2E,WAAWqf,GAEpBhmB,MAAMC,QAAQ+lB,IAAOyxB,IAAW9vC,KACrCrL,EAAO0F,GAAOgkB,EAAG7D,IAAIxb,YAE7B,MACuB,OAAb+wC,QAAkC,IAAbA,OAAsB,EAASA,EAAStxC,aACvD,OAAXqxC,QAA8B,IAAXA,OAAoB,EAASA,EAAOrxC,aAC9C,IAAT8e,GAAqB,IAAPc,GAGF,IAATd,EACA9nB,EAAMyH,IAAI4yC,EAAOrxC,UAAU8e,IAG3B5oB,EAAO0F,GAAO01C,EAAStxC,UAAU4f,IAMhCuxB,IACDD,EA9HpB,SAAyC/4C,GACrC,IAAMs5C,EAAoB,GAW1B,OAVAjB,GAA8B/iC,SAAQ,SAAC7R,GACnC,IAAM5E,EAAQmB,EAAcsmB,SAAS7iB,QACvBlB,IAAV1D,IACAy6C,EAAkB76B,KAAK,CAAChb,EAAK5E,EAAMhB,QACnCgB,EAAMyH,IAAI7C,EAAIwD,WAAW,SAAW,EAAI,GAEhD,IAEIqyC,EAAkB16C,QAClBoB,EAAcc,SACXw4C,CACX,CAkHwBC,CAAgCv5C,GACpCg5C,GAAsC,GAE1CC,EAAqBx6B,KAAKhb,GAC1B+R,EAAc/R,QACalB,IAAvBiT,EAAc/R,GACR+R,EAAc/R,GACd1F,EAAO0F,GACjB5E,EAAM+5C,KAAKnxB,GApET,CAuEd,IACIwxB,EAAqBr6C,OAAQ,CAC7B,IAAM46C,EAAUP,EAAqBvyC,QAAQ,WAAa,EACpDzF,OAAOw4C,YACP,KACAC,EAAkBnB,GAAyBx6C,EAAQiC,EAAei5C,GAaxE,OAXIF,EAAuBn6C,QACvBm6C,EAAuBzjC,SAAQ,YAAkB,oBAAhB7R,EAAG,KAAE5E,EAAK,KACvCmB,EAAcsmB,SAAS7iB,GAAK6C,IAAIzH,EACpC,IAGJmB,EAAcc,SAEVoE,EAAAA,GAAyB,OAAZs0C,GACbv4C,OAAO04C,SAAS,CAAEjvC,IAAK8uC,IAEpB,CAAEz7C,OAAQ27C,EAAiBlkC,cAAAA,EACtC,CAEI,MAAO,CAAEzX,OAAAA,EAAQyX,cAAAA,EAEzB,EG9MA,IAAMokC,GAAkB,SAAC55C,EAAejC,EAAQsS,EAAQmF,GACpD,IAAMD,EAAWyxB,GAAoBhnC,EAAejC,EAAQyX,GAG5D,OHkNJ,SAAwBxV,EAAejC,EAAQsS,EAAQmF,GACnD,OAAOkiC,GAAiB35C,GAClB86C,GAAiC74C,EAAejC,EAAQsS,EAAQmF,GAChE,CAAEzX,OAAAA,EAAQyX,cAAAA,EACpB,CGtNWqkC,CAAe75C,EAFtBjC,EAASwX,EAASxX,OAE2BsS,EAD7CmF,EAAgBD,EAASC,cAE7B,ECXMskC,GAAuB,CAAEt5C,QAAS,MAClCu5C,GAA2B,CAAEv5C,SAAS,G,sCCiBtCw5C,GAAe57C,OAAO4R,KAAKxM,GAC3By2C,GAAcD,GAAap7C,OAC3Bs7C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMEC,GAAa,WACf,cAAiG,WAAnFr6C,EAAM,EAANA,OAAQF,EAAK,EAALA,MAAOM,EAAe,EAAfA,gBAAiBE,EAAmB,EAAnBA,oBAAqBT,EAAW,EAAXA,YAAgBuN,EAAU,UAAH,6CAAG,CAAC,GAAC,gBAK3FnO,KAAKyB,QAAU,KAIfzB,KAAKyT,SAAW,IAAIzL,IAIpBhI,KAAKmD,eAAgB,EACrBnD,KAAK+C,uBAAwB,EAQ7B/C,KAAKs5B,mBAAqB,KAM1Bt5B,KAAKsT,OAAS,IAAIlM,IAIlBpH,KAAKwF,SAAW,CAAC,EAKjBxF,KAAKq7C,mBAAqB,IAAIj0C,IAM9BpH,KAAKs7C,iBAAmB,CAAC,EAIzBt7C,KAAK6gB,OAAS,CAAC,EAMf7gB,KAAKu7C,uBAAyB,CAAC,EAC/Bv7C,KAAKw7C,aAAe,kBAAM,EAAKn6B,OAAO,SAAU,EAAKnT,aAAa,EAClElO,KAAK+B,OAAS,WACL,EAAKN,UAEV,EAAKg6C,eACL,EAAKC,eAAe,EAAKj6C,QAAS,EAAK8S,YAAa,EAAK1T,MAAMwN,MAAO,EAAK6F,YAC/E,EACAlU,KAAKisC,eAAiB,kBAAM/qB,GAAAA,GAAAA,OAAY,EAAKnf,QAAQ,GAAO,EAAK,EACjE,IAAQmM,EAA8BtN,EAA9BsN,aAAcqG,EAAgB3T,EAAhB2T,YACtBvU,KAAKkO,aAAeA,EACpBlO,KAAK27C,YAAa,UAAKztC,GACvBlO,KAAK47C,cAAgB/6C,EAAMc,SAAU,UAAKuM,GAAiB,CAAC,EAC5DlO,KAAKuU,YAAcA,EACnBvU,KAAKe,OAASA,EACdf,KAAKa,MAAQA,EACbb,KAAKmB,gBAAkBA,EACvBnB,KAAK2nC,MAAQ5mC,EAASA,EAAO4mC,MAAQ,EAAI,EACzC3nC,KAAKqB,oBAAsBA,EAC3BrB,KAAKmO,QAAUA,EACfnO,KAAK+C,sBAAwBA,EAAsBlC,GACnDb,KAAKmD,cAAgBA,EAActC,GAC/Bb,KAAKmD,gBACLnD,KAAKo4B,gBAAkB,IAAIpwB,KAE/BhI,KAAKi7B,uBAAyB73B,QAAQrC,GAAUA,EAAOU,SAWvD,MAA+CzB,KAAK0U,4BAA4B7T,EAAO,CAAC,GAAhFi4B,EAAU,EAAVA,WAAe+iB,EAAmB,SAC1C,IAAK,IAAMn3C,KAAOm3C,EAAqB,CACnC,IAAM/7C,EAAQ+7C,EAAoBn3C,QACRlB,IAAtB0K,EAAaxJ,IAAsByD,EAAcrI,KACjDA,EAAMyH,IAAI2G,EAAaxJ,IAAM,GACzBmjB,GAAwBiR,IACxBA,EAAWhX,IAAIpd,GAG3B,CACJ,CA4WC,OA3WD,oDAOA,SAA4Bo3C,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,mBACD,SAAMt1C,GAAU,WACZzG,KAAKyB,QAAUgF,EACXzG,KAAKkU,YACLlU,KAAKkU,WAAWxN,MAAMD,GAEtBzG,KAAKe,QAAUf,KAAKmD,gBAAkBnD,KAAK+C,wBAC3C/C,KAAKg8C,sBAAwBh8C,KAAKe,OAAOk7C,gBAAgBj8C,OAE7DA,KAAKsT,OAAOiD,SAAQ,SAACzW,EAAO4E,GAAG,OAAK,EAAKw3C,kBAAkBx3C,EAAK5E,EAAM,IACjEk7C,GAAyBv5C,SCvJtC,WAEI,GADAu5C,GAAyBv5C,SAAU,EAC9B0E,EAAAA,EAEL,GAAIjE,OAAOi6C,WAAY,CACnB,IAAMC,EAAmBl6C,OAAOi6C,WAAW,4BACrCE,EAA8B,WAAH,OAAUtB,GAAqBt5C,QAAU26C,EAAiBpiC,OAAO,EAClGoiC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEItB,GAAqBt5C,SAAU,CAEvC,CD2IY86C,GAEJv8C,KAAKs5B,mBAC4B,UAA7Bt5B,KAAKqB,sBAE8B,WAA7BrB,KAAKqB,qBAED05C,GAAqBt5C,SAI/BzB,KAAKe,QACLf,KAAKe,OAAO0S,SAASqO,IAAI9hB,MAC7BA,KAAK6B,OAAO7B,KAAKa,MAAOb,KAAKmB,gBACjC,GAAC,qBACD,WAOI,IAAK,IAAMuD,KANX1E,KAAKkU,YAAclU,KAAKkU,WAAWvN,UACnCurB,GAAAA,GAAAA,OAAkBlyB,KAAKw7C,cACvBtpB,GAAAA,GAAAA,OAAkBlyB,KAAK+B,QACvB/B,KAAKq7C,mBAAmB9kC,SAAQ,SAACgjB,GAAM,OAAKA,GAAQ,IACpDv5B,KAAKg8C,uBAAyBh8C,KAAKg8C,wBACnCh8C,KAAKe,QAAUf,KAAKe,OAAO0S,SAASgK,OAAOzd,MACzBA,KAAK6gB,OACnB7gB,KAAK6gB,OAAOnc,GAAKwd,QAErB,IAAK,IAAMxd,KAAO1E,KAAKwF,SACnBxF,KAAKwF,SAASd,GAAKiC,UAEvB3G,KAAKyB,QAAU,IACnB,GAAC,+BACD,SAAkBiD,EAAK5E,GAAO,WACpB08C,EAAmBz0C,EAAeT,IAAI5C,GACtC+3C,EAAiB38C,EAAM8hB,GAAG,UAAU,SAAC86B,GACvC,EAAKxuC,aAAaxJ,GAAOg4C,EACzB,EAAK77C,MAAMmyB,UACP9R,GAAAA,GAAAA,OAAY,EAAKs6B,cAAc,GAAO,GACtCgB,GAAoB,EAAKtoC,aACzB,EAAKA,WAAWo6B,kBAAmB,EAE3C,IACMqO,EAAwB78C,EAAM8hB,GAAG,gBAAiB5hB,KAAKisC,gBAC7DjsC,KAAKq7C,mBAAmB9zC,IAAI7C,GAAK,WAC7B+3C,IACAE,GACJ,GACJ,GAAC,8BACD,SAAiBC,GAIb,OAAK58C,KAAKyB,SACLzB,KAAK68C,0BACN78C,KAAK6I,OAAS+zC,EAAM/zC,KAGjB7I,KAAK68C,yBAAyB78C,KAAKyB,QAASm7C,EAAMn7C,SAF9C,CAGf,GAAC,0BACD,WAA6C4E,EAAUhB,EAAmBY,EAAcG,GAepF,IAf8G,IAC1G02C,EACAj3C,EAF0G,OAAtFk3C,GAAL,EAARtpC,SAA0B,UAe5BxE,EAAI,EAAGA,EAAIisC,GAAajsC,IAAK,CAClC,IAAM/L,EAAO+3C,GAAahsC,GAC1B,EAA2GxK,EAAmBvB,GAAtHyB,EAAS,EAATA,UAAoBq4C,EAAkB,EAA3B9jC,QAA6Bs/B,EAAc,EAAdA,eAA+ByE,EAAsB,EAArCp3C,cAC5D2yC,IACAsE,EAA4BtE,GAC5B7zC,EAAUo4C,MACL/8C,KAAKwF,SAAStC,IAAS85C,IACxBh9C,KAAKwF,SAAStC,GAAQ,IAAI85C,EAAmBh9C,OAE7Ci9C,IACAp3C,EAAgBo3C,GAG5B,CACA,IAAKj9C,KAAKkU,YAAc4oC,EAA2B,CAC/C98C,KAAKkU,WAAa,IAAI4oC,EAA0B72C,EAAcjG,KAAKkO,aAAclO,KAAKe,QAAUf,KAAKe,OAAOmT,YAC5G,IAAQnO,EAAuEg3C,EAAvEh3C,SAAUvB,EAA6Du4C,EAA7Dv4C,OAAQN,EAAqD64C,EAArD74C,KAAM2/B,EAA+CkZ,EAA/ClZ,gBAAiB0O,EAA8BwK,EAA9BxK,aAAczB,EAAgBiM,EAAhBjM,WAC/D9wC,KAAKkU,WAAWs1B,WAAW,CACvBzjC,SAAAA,EACAvB,OAAAA,EACA0tC,oBAAqB9uC,QAAQc,IACxB2/B,GAAmBvhC,EAAYuhC,GACpC5iC,cAAejB,KACfisC,eAAgB,kBAAM,EAAKA,gBAAgB,EAQ3CkK,cAAiC,kBAAX3xC,EAAsBA,EAAS,OACrD8xC,uBAAwBlwC,EACxBmsC,aAAAA,EACAzB,WAAAA,GAER,CACA,OAAOjrC,CACX,GAAC,4BACD,WACI,IAAK,IAAMnB,KAAO1E,KAAKwF,SAAU,CAC7B,IAAM03C,EAAUl9C,KAAKwF,SAASd,GAC1Bw4C,EAAQ9jC,UACR8jC,EAAQr7C,OAAO7B,KAAKa,MAAOb,KAAK2U,YAGhCuoC,EAAQx2C,QACRw2C,EAAQ9jC,WAAY,EAE5B,CACJ,GAAC,0BACD,WACIpZ,KAAKm9C,MAAMn9C,KAAKuU,YAAavU,KAAKkO,aAAclO,KAAKmO,QAASnO,KAAKa,MACvE,GACA,gCAKA,WACI,OAAOb,KAAKyB,QACNzB,KAAKo9C,2BAA2Bp9C,KAAKyB,QAASzB,KAAKa,OACnDo/B,IACV,GAAC,4BACD,SAAev7B,GACX,OAAO1E,KAAKkO,aAAaxJ,EAC7B,GAAC,4BACD,SAAeA,EAAK5E,GAChBE,KAAKkO,aAAaxJ,GAAO5E,CAC7B,GACA,kCAOA,SAAqBd,GAA0B,IAAlBq+C,IAAY,UAAH,+CAClC,OAAOr9C,KAAKs9C,iCAAiCt+C,EAAQgB,KAAKa,MAAOw8C,EACrE,GACA,oBAIA,SAAOx8C,EAAOM,IACNN,EAAMuN,mBAAqBpO,KAAKa,MAAMuN,oBACtCpO,KAAKisC,iBAETjsC,KAAK2U,UAAY3U,KAAKa,MACtBb,KAAKa,MAAQA,EACbb,KAAKw8B,oBAAsBx8B,KAAKmB,gBAChCnB,KAAKmB,gBAAkBA,EAIvB,IAAK,IAAI8N,EAAI,EAAGA,EAAIksC,GAAkBt7C,OAAQoP,IAAK,CAC/C,IAAMvK,EAAMy2C,GAAkBlsC,GAC1BjP,KAAKu7C,uBAAuB72C,KAC5B1E,KAAKu7C,uBAAuB72C,YACrB1E,KAAKu7C,uBAAuB72C,IAEvC,IAAM64C,EAAW18C,EAAM,KAAO6D,GAC1B64C,IACAv9C,KAAKu7C,uBAAuB72C,GAAO1E,KAAK4hB,GAAGld,EAAK64C,GAExD,CACAv9C,KAAKs7C,iBExUb,SAAqCtnC,EAASkL,EAAMC,GAChD,IAAQ2Z,EAAe5Z,EAAf4Z,WACR,IAAK,IAAMp0B,KAAOwa,EAAM,CACpB,IAAMs+B,EAAYt+B,EAAKxa,GACjB+4C,EAAYt+B,EAAKza,GACvB,GAAIyD,EAAcq1C,GAKdxpC,EAAQwT,SAAS9iB,EAAK84C,GAClB31B,GAAwBiR,IACxBA,EAAWhX,IAAIpd,QAUlB,GAAIyD,EAAcs1C,GAKnBzpC,EAAQwT,SAAS9iB,EAAKoe,GAAY06B,EAAW,CAAE97B,MAAO1N,KAClD6T,GAAwBiR,IACxBA,EAAWS,OAAO70B,QAGrB,GAAI+4C,IAAcD,EAMnB,GAAIxpC,EAAQsT,SAAS5iB,GAAM,CACvB,IAAMg5C,EAAgB1pC,EAAQuT,SAAS7iB,IAEtCg5C,EAAcj8B,aAAei8B,EAAcn2C,IAAIi2C,EACpD,KACK,CACD,IAAMd,EAAc1oC,EAAQ2pC,eAAej5C,GAC3CsP,EAAQwT,SAAS9iB,EAAKoe,QAA4Btf,IAAhBk5C,EAA4BA,EAAcc,EAAW,CAAE97B,MAAO1N,IACpG,CAER,CAEA,IAAK,IAAMtP,KAAOya,OACI3b,IAAd0b,EAAKxa,IACLsP,EAAQ4pC,YAAYl5C,GAE5B,OAAOwa,CACX,CFiRgC2+B,CAA4B79C,KAAMA,KAAK0U,4BAA4B7T,EAAOb,KAAK2U,WAAY3U,KAAKs7C,kBACpHt7C,KAAK89C,wBACL99C,KAAK89C,wBAEb,GAAC,sBACD,WACI,OAAO99C,KAAKa,KAChB,GACA,wBAGA,SAAWqC,GACP,OAAOlD,KAAKa,MAAMwC,SAAWrD,KAAKa,MAAMwC,SAASH,QAAQM,CAC7D,GACA,kCAGA,WACI,OAAOxD,KAAKa,MAAM6V,UACtB,GAAC,mCACD,WACI,OAAO1W,KAAKa,MAAMV,kBACtB,GAAC,mCACD,WACI,OAAOH,KAAKmD,cACNnD,KACAA,KAAKe,OACDf,KAAKe,OAAOg9C,6BACZv6C,CACd,GAAC,+BACD,WACI,GAD8B,UAAH,8CAEvB,OAAOxD,KAAKe,OAASf,KAAKe,OAAO05B,yBAAsBj3B,EAE3D,IAAKxD,KAAK+C,sBAAuB,CAC7B,IAAMQ,EAAUvD,KAAKe,QACff,KAAKe,OAAO05B,qBACZ,CAAC,EAIP,YAH2Bj3B,IAAvBxD,KAAKa,MAAMc,UACX4B,EAAQ5B,QAAU3B,KAAKa,MAAMc,SAE1B4B,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACR0L,EAAI,EAAGA,EAAI+uC,GAAiB/uC,IAAK,CACtC,IAAM/L,EAAOJ,GAAamM,GACpBpL,EAAO7D,KAAKa,MAAMqC,IACpBV,EAAeqB,KAAkB,IAATA,KACxBN,EAAQL,GAAQW,EAExB,CACA,OAAON,CACX,GACA,6BAGA,SAAgB8W,GACZ,IAAM4jC,EAAqBj+C,KAAK+9C,wBAChC,GAAIE,EAGA,OAFAA,EAAmB7lB,iBACf6lB,EAAmB7lB,gBAAgBtW,IAAIzH,GACpC,kBAAM4jC,EAAmB7lB,gBAAgB3a,OAAOpD,EAAM,CAErE,GACA,sBAGA,SAAS3V,EAAK5E,GAENA,IAAUE,KAAKsT,OAAOxU,IAAI4F,KAC1B1E,KAAK49C,YAAYl5C,GACjB1E,KAAKk8C,kBAAkBx3C,EAAK5E,IAEhCE,KAAKsT,OAAO/L,IAAI7C,EAAK5E,GACrBE,KAAKkO,aAAaxJ,GAAO5E,EAAMhB,KACnC,GACA,yBAGA,SAAY4F,GACR1E,KAAKsT,OAAOmK,OAAO/Y,GACnB,IAAMmd,EAAc7hB,KAAKq7C,mBAAmBv8C,IAAI4F,GAC5Cmd,IACAA,IACA7hB,KAAKq7C,mBAAmB59B,OAAO/Y,WAE5B1E,KAAKkO,aAAaxJ,GACzB1E,KAAKk+C,2BAA2Bx5C,EAAK1E,KAAKuU,YAC9C,GACA,sBAGA,SAAS7P,GACL,OAAO1E,KAAKsT,OAAOhM,IAAI5C,EAC3B,GAAC,sBACD,SAASA,EAAKkhB,GACV,GAAI5lB,KAAKa,MAAMyS,QAAUtT,KAAKa,MAAMyS,OAAO5O,GACvC,OAAO1E,KAAKa,MAAMyS,OAAO5O,GAE7B,IAAI5E,EAAQE,KAAKsT,OAAOxU,IAAI4F,GAK5B,YAJclB,IAAV1D,QAAwC0D,IAAjBoiB,IACvB9lB,EAAQgjB,GAAY8C,EAAc,CAAElE,MAAO1hB,OAC3CA,KAAKwnB,SAAS9iB,EAAK5E,IAEhBA,CACX,GACA,uBAKA,SAAU4E,GACN,YAAkClB,IAA3BxD,KAAKkO,aAAaxJ,IAAuB1E,KAAKyB,QAE/CzB,KAAKm+C,sBAAsBn+C,KAAKyB,QAASiD,EAAK1E,KAAKmO,SADnDnO,KAAKkO,aAAaxJ,EAE5B,GACA,2BAIA,SAAcA,EAAK5E,GACfE,KAAK27C,WAAWj3C,GAAO5E,CAC3B,GACA,2BAIA,SAAc4E,GACV,IAAImM,EACIlP,EAAY3B,KAAKa,MAAjBc,QACFy8C,EAAsC,kBAAZz8C,GAA2C,kBAAZA,EACD,QAAvDkP,EAAKkE,GAAwB/U,KAAKa,MAAOc,UAA6B,IAAPkP,OAAgB,EAASA,EAAGnM,QAC5FlB,EAIN,GAAI7B,QAAgC6B,IAArB46C,EACX,OAAOA,EAMX,IAAMp/C,EAASgB,KAAKq+C,uBAAuBr+C,KAAKa,MAAO6D,GACvD,YAAelB,IAAXxE,GAAyBmJ,EAAcnJ,QAMRwE,IAA5BxD,KAAK47C,cAAcl3C,SACDlB,IAArB46C,OACE56C,EACAxD,KAAK27C,WAAWj3C,GARX1F,CASf,GAAC,gBACD,SAAGmY,EAAWwF,GAIV,OAHK3c,KAAK6gB,OAAO1J,KACbnX,KAAK6gB,OAAO1J,GAAa,IAAI2I,IAE1B9f,KAAK6gB,OAAO1J,GAAW2K,IAAInF,EACtC,GAAC,oBACD,SAAOxF,GACH,GAAInX,KAAK6gB,OAAO1J,GAAY,8BADX04B,EAAI,iCAAJA,EAAI,mBAEjB,EAAA7vC,KAAK6gB,OAAO1J,IAAWkK,OAAM,QAAIwuB,EACrC,CACJ,KAAC,EAhdc,GAkdb/sC,GAAe,CAAC,WAAS,gBAAK22B,KAC9BukB,GAAkBl7C,GAAajD,O,kCGjf/By+C,GAAgB,wGAwCjB,OAxCiB,iDAClB,SAAyBlmC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEmmC,wBAAwBlmC,GAAS,GAAK,CACnD,GAAC,oCACD,SAAuBxX,EAAO6D,GAC1B,OAAO7D,EAAMwN,MAAQxN,EAAMwN,MAAM3J,QAAOlB,CAC5C,GAAC,wCACD,SAA2BkB,EAAK,GAAiB,IAAf4J,EAAI,EAAJA,KAAMD,EAAK,EAALA,aAC7BC,EAAK5J,UACL2J,EAAM3J,EACjB,GAAC,8CACD,aAAgG0U,GAAW,IAAxE1C,EAAU,EAAVA,WAAYD,EAAa,EAAbA,cAAkBzX,EAAM,SAAM2Q,EAAe,EAAfA,gBACrE2B,EjFqFZ,SAAmBtS,EAAQ0X,EAAYzV,GACnC,IAAMqQ,EAAS,CAAC,EAChB,IAAK,IAAM5M,KAAO1F,EAAQ,CACtB,IAAMw/C,EAAmB72B,GAAwBjjB,EAAKgS,GACtD,QAAyBlT,IAArBg7C,EACAltC,EAAO5M,GAAO85C,MAEb,CACD,IAAM1+C,EAAQmB,EAAcsmB,SAAS7iB,GACjC5E,IACAwR,EAAO5M,GAAO5E,EAAMhB,MAE5B,CACJ,CACA,OAAOwS,CACX,CiFpGqBmtC,CAAUz/C,EAAQ0X,GAAc,CAAC,EAAG1W,MAYjD,GARI2P,IACI8G,IACAA,EAAgB9G,EAAgB8G,IAChCzX,IACAA,EAAS2Q,EAAgB3Q,IACzBsS,IACAA,EAAS3B,EAAgB2B,KAE7B8H,EAAW,EjFoBvB,SAAiCnY,EAAejC,EAAQsS,GACpD,IAAIT,EAAIwU,EACFq5B,EAAer/C,OAAO4R,KAAKjS,GAAQ8mB,QAAO,SAACphB,GAAG,OAAMzD,EAAcqmB,SAAS5iB,EAAI,IAC/Ei6C,EAAeD,EAAa7+C,OAClC,GAAK8+C,EAEL,IAAK,IAAI1vC,EAAI,EAAGA,EAAI0vC,EAAc1vC,IAAK,CACnC,IAAMvK,EAAMg6C,EAAazvC,GACnB2vC,EAAc5/C,EAAO0F,GACvB5E,EAAQ,KAKR4C,MAAMC,QAAQi8C,KACd9+C,EAAQ8+C,EAAY,IAOV,OAAV9+C,IACAA,EAAoG,QAA3FulB,EAA4B,QAAtBxU,EAAKS,EAAO5M,UAAyB,IAAPmM,EAAgBA,EAAK5P,EAAc49C,UAAUn6C,UAAyB,IAAP2gB,EAAgBA,EAAKrmB,EAAO0F,SAM9HlB,IAAV1D,GAAiC,OAAVA,IAEN,kBAAVA,IACNuf,GAAkBvf,IAAUwf,GAAkBxf,IAE/CA,EAAQuJ,WAAWvJ,IAEbonB,GAAcpnB,IAAUslB,GAAQxd,KAAKg3C,KAC3C9+C,EAAQwlB,GAAkB5gB,EAAKk6C,IAEnC39C,EAAcumB,SAAS9iB,EAAKoe,GAAYhjB,EAAO,CAAE4hB,MAAOzgB,UACpCuC,IAAhB8N,EAAO5M,KACP4M,EAAO5M,GAAO5E,GAEJ,OAAVA,GACAmB,EAAc69C,cAAcp6C,EAAK5E,GACzC,CACJ,CiFjEYi/C,CAAwB/+C,KAAMhB,EAAQsS,GACtC,IAAMiU,EAASs1B,GAAgB76C,KAAMhB,EAAQsS,EAAQmF,GACrDA,EAAgB8O,EAAO9O,cACvBzX,EAASumB,EAAOvmB,MACpB,CACA,OAAO,QACH0X,WAAAA,EACAD,cAAAA,GACGzX,EAEX,KAAC,EAxCiB,CAASo8C,ICQ9B,IACK4D,GAAiB,wGAsClB,OAtCkB,8CACnB,SAAsBv4C,EAAU/B,GAC5B,GAAIqD,EAAeT,IAAI5C,GAAM,CACzB,IAAMu6C,EAAct4B,GAAoBjiB,GACxC,OAAOu6C,GAAcA,EAAYz1C,SAAe,CACpD,CAEI,IAVcwK,EAURkrC,GAVQlrC,EAUyBvN,EATxCvE,OAAO6lC,iBAAiB/zB,IAUjBlU,GAAS6I,EAAcjE,GACvBw6C,EAAclX,iBAAiBtjC,GAC/Bw6C,EAAcx6C,KAAS,EAC7B,MAAwB,kBAAV5E,EAAqBA,EAAMqP,OAASrP,CAE1D,GAAC,wCACD,SAA2B2G,EAAU,GACjC,OAAOi7B,GAAmBj7B,EAD2B,EAAlBtG,mBAEvC,GAAC,mBACD,SAAMoU,EAAarG,EAAcC,EAAStN,GACtCmN,GAAgBuG,EAAarG,EAAcC,EAAStN,EAAMuN,kBAC9D,GAAC,yCACD,SAA4BvN,EAAO8T,GAC/B,OAAOD,GAA4B7T,EAAO8T,EAC9C,GAAC,oCACD,WAAyB,WACjB3U,KAAKm/C,oBACLn/C,KAAKm/C,2BACEn/C,KAAKm/C,mBAEhB,IAAQ1rC,EAAazT,KAAKa,MAAlB4S,SACJtL,EAAcsL,KACdzT,KAAKm/C,kBAAoB1rC,EAASmO,GAAG,UAAU,SAAC4jB,GACxC,EAAK/jC,UACL,EAAKA,QAAQ29C,YAAc,GAAH,OAAM5Z,GACtC,IAER,GAAC,4BACD,SAAe/+B,EAAU8N,EAAaN,EAAWC,GAC7CH,GAAWtN,EAAU8N,EAAaN,EAAWC,EACjD,KAAC,EAtCkB,CAASoqC,I,sBCF1Be,GAAgB,4CAClB,aAAc,MAEY,OAFZ,iBACV,eAASz/C,YACJgS,UAAW,EAAM,CAC1B,CA2BC,OA3BA,+CACD,SAAuB/Q,EAAO6D,GAC1B,OAAO7D,EAAM6D,EACjB,GAAC,mCACD,SAAsB+B,EAAU/B,GAC5B,GAAIqD,EAAeT,IAAI5C,GAAM,CACzB,IAAMu6C,EAAct4B,GAAoBjiB,GACxC,OAAOu6C,GAAcA,EAAYz1C,SAAe,CACpD,CAEA,OADA9E,EAAO2P,GAAoB/M,IAAI5C,GAA0BA,EAAnBkP,GAAYlP,GAC3C+B,EAAS64C,aAAa56C,EACjC,GAAC,wCACD,WACI,OAAOu7B,IACX,GAAC,yCACD,SAA4Bp/B,EAAO8T,GAC/B,OAAOD,GAA4B7T,EAAO8T,EAC9C,GAAC,mBACD,SAAMJ,EAAarG,EAAcC,EAAStN,GACtC8Q,GAAc4C,EAAarG,EAAcC,EAASnO,KAAK4R,SAAU/Q,EAAMuN,kBAC3E,GAAC,4BACD,SAAe3H,EAAU8N,EAAaN,EAAWC,GAC7CI,GAAU7N,EAAU8N,EAAaN,EAAWC,EAChD,GAAC,mBACD,SAAMzN,GACFzG,KAAK4R,SAAWA,GAASnL,EAASuQ,UAClC,sDAAYvQ,EAChB,KAAC,EA/BiB,CAAS63C,ICPzBiB,GAAyB,SAAC5+C,EAAWwN,GACvC,OAAO1G,EAAe9G,GAChB,IAAI0+C,GAAiBlxC,EAAS,CAAEW,4BAA4B,IAC5D,IAAIkwC,GAAkB7wC,EAAS,CAAEW,4BAA4B,GACvE,ECLMtK,GAAS,CACXA,OAAQ,CACJg0C,eAAgBH,GAChBxyC,cAAAA,KCGFR,IAAoB,kCACnBizB,IACAtZ,IACA9a,IACAM,IAQDg7C,GAAuBz4C,GAAkB,SAACpG,EAAWgV,GAAM,OChBjE,SAA+BhV,EAAW,EAAgC0E,EAAmBvE,GAAqB,QAAtEqS,mBAAAA,OAAkB,IAAG,GAAK,EAC5DssC,EAAah4C,EAAe9G,GAC5BiW,GACAK,GACN,OAAO,kBACAwoC,GAAU,IACbp6C,kBAAAA,EACAC,UAAW4N,GAAgBC,GAC3BrS,oBAAAA,EACAH,UAAAA,GAER,CDKsE++C,CAAsB/+C,EAAWgV,EAAQtQ,GAAmBk6C,GAAuB,G","sources":["../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","AnimationType","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","Hover","HoverGesture","FocusGesture","isFocusVisible","matches","Focus","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","Tap","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","requestAnimationFrame","onViewportEnter","InView","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","viewportFallback","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","addUniqueItem","arr","item","push","removeItem","index","splice","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","delta","frameData","timestamp","sync","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","add","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","cancelSync","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","cancel","setWithVelocity","timeout","performance","now","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","BoundingBoxDimension","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}