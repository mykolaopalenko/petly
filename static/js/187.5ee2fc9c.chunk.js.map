{"version":3,"file":"static/js/187.5ee2fc9c.chunk.js","mappings":"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","sources":["components/Ui-Kit/Button/Button.styled.js","components/Ui-Kit/Button/Button.jsx","components/Ui-Kit/Input/Input.jsx","components/Ui-Kit/Input/Input.styled.js"],"sourcesContent":["import { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { breakpoints } from 'constants/theme';\n\nexport const ButtonStyled = styled(motion.button)`\n  height: 40px;\n  display: block;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  cursor: pointer;\n  width: ${({ theme, width }) => (width ? width : 'auto')};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  border-radius: 40px;\n  border: 2px solid ${({ theme }) => theme.colors.accent};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${({ name }) => name === 'contacts' && '12px'};\n  /* background-color: ${({ theme, name, selected }) =>\n      name === 'filled' || selected ? theme.colors.accent : 'transparent'}; */\n\n  background-color: ${({ theme, name, selected }) => {\n      switch (name) {\n         case 'filter':\n            return selected ? theme.colors.accent : 'transparent';\n         case 'filled':\n            return theme.colors.accent;\n         case 'contacts':\n            return theme.colors.accent;\n         default:\n            return 'transparent';\n      }\n   }};\n  color: ${({ theme, name, selected }) => {\n      switch (name) {\n         case 'transparent':\n            return theme.colors.mainText;\n         case 'filled':\n            return theme.colors.lightText;\n         case 'learnMore':\n            return theme.colors.accent;\n         case 'filter':\n            return selected ? theme.colors.lightText : theme.colors.mainText;\n         case 'addToFavorite':\n            return theme.colors.mainText;\n         default:\n            return theme.colors.lightText;\n      }\n   }};\n\n  transition: color ${({ theme }) => theme.transitionTiming},\n    background-color ${({ theme }) => theme.transitionTiming},\n    border-color ${({ theme }) => theme.transitionTiming};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme, name }) =>\n      name === 'learnMore' && 'contacts' ? 'transparent' : theme.colors.hover};\n    border-color: ${({ theme, name }) =>\n      name === 'learnMore' ? theme.colors.secondaryHover : theme.colors.hover};\n    color: ${({ theme, name }) =>\n      name === 'learnMore'\n         ? theme.colors.secondaryHover\n         : theme.colors.lightText};\n  }\n\n\n    @media (min-width: ${breakpoints[1]}px) {\n      margin-left: ${({ name }) => name === 'contacts' && '12px'};\n      margin-bottom: ${({ name }) => name === 'contacts' && '0px'};\n   }\n`;\n","import React from 'react';\nimport { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\n// name: 'transparent' | 'filled' | 'learnMore'\nconst Button = ({\n  type = 'button',\n  onClick,\n  children,\n  name,\n  width,\n  selected,\n}) => {\n  return (\n    <ButtonStyled\n      name={name}\n      type={type}\n      onClick={onClick}\n      width={width}\n      selected={selected}\n      whileTap={{ scale: 0.95 }}\n    >\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  width: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  selected: PropTypes.bool,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ErrorStyle,\n  FieldStyle,\n  StyledSpan,\n  Label,\n  FieldWrapper,\n} from './Input.styled';\n\nconst InputField = ({\n  label,\n  name,\n  type,\n  placeholder,\n  id,\n  span,\n  autocomplete,\n  children,\n  as,\n}) => {\n  return (\n    <FieldWrapper>\n      <Label htmlFor={name}>\n        {label}\n        <StyledSpan>{span}</StyledSpan>\n      </Label>\n      <FieldStyle\n        type={type}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        autoComplete={autocomplete}\n        as={as}\n      />\n      <ErrorStyle name={name} component=\"div\" />\n      {children}\n    </FieldWrapper>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  span: PropTypes.string,\n  autocomplete: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { theme, breakpoints } from 'constants/theme';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FieldStyle = styled(Field)`\n  width: 100%;\n  border-radius: 40px;\n  cursor: pointer;\n  margin-bottom: 8px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  background-color: ${theme.colors.mainBackground};\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.primaryText};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  ${theme.mq.mobileOnly} {\n    font-size: ${theme.fontSizes.xxs};\n    padding: 12px 14px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 12px;\n  ${theme.mq.mobileOnly} {\n    margin-bottom: 8px;\n  }\n  font-family: ${theme.fontFamily.manrope};\n  font-style: normal;\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.s};\n  line-height: 1.44;\n  @media (min-width: ${breakpoints[1]}px) {\n    font-size: ${theme.fontSizes.l};\n    line-height: 1.08;\n    margin-top: 12px;\n  } ;\n`;\n\nexport const ErrorStyle = styled(ErrorMessage)`\n  position: absolute;\n  left: 0;\n  bottom: -3px;\n  font-size: 8px;\n  color: red;\n  ${theme.mq.mobileOnly} {\n    transform: translate(0px, 0px);\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  color: ${theme.colors.accent};\n`;\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n"],"names":["ButtonStyled","styled","motion","theme","width","colors","accent","name","selected","mainText","lightText","transitionTiming","hover","secondaryHover","breakpoints","type","onClick","children","whileTap","scale","label","placeholder","id","span","autocomplete","as","htmlFor","autoComplete","component","FieldStyle","Field","Label","ErrorStyle","ErrorMessage","StyledSpan","FieldWrapper"],"sourceRoot":""}