{"version":3,"file":"static/js/155.84f294c5.chunk.js","mappings":"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","sources":["components/Ui-Kit/Button/Button.styled.js","components/Ui-Kit/Button/Button.jsx","components/Ui-Kit/Input/Input.styled.js","components/Ui-Kit/Input/Input.jsx","components/LoginForm/LoginInputs.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const ButtonStyled = styled(motion.button)`\n  display: block;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  cursor: pointer;\n  width: ${({ theme, width }) => (width ? width : 'auto')};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  border-radius: 40px;\n  border: 2px solid ${({ theme }) => theme.colors.accent};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, name, selected }) =>\n      name === 'filled' || selected ? theme.colors.accent : 'transparent'};\n\n  color: ${({ theme, name, selected }) => {\n      switch (name) {\n         case 'transparent':\n            return theme.colors.mainText;\n         case 'filled':\n            return theme.colors.lightText;\n         case 'learnMore':\n            return theme.colors.accent;\n         case 'filter':\n            return selected ? theme.colors.lightText : theme.colors.mainText;\n         case 'addToFavorite':\n            return theme.colors.mainText;\n         default:\n            return theme.colors.lightText;\n      }\n   }};\n\n  transition: color ${({ theme }) => theme.transitionTiming},\n    background-color ${({ theme }) => theme.transitionTiming},\n    border-color ${({ theme }) => theme.transitionTiming};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme, name }) =>\n      name === 'learnMore' ? 'transparent' : theme.colors.hover};\n    border-color: ${({ theme, name }) =>\n      name === 'learnMore' ? theme.colors.secondaryHover : theme.colors.hover};\n    color: ${({ theme, name }) =>\n      name === 'learnMore'\n         ? theme.colors.secondaryHover\n         : theme.colors.lightText};\n  }\n`;\n","import React from 'react';\nimport { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\n// name: 'transparent' | 'filled' | 'learnMore'\nconst Button = ({\n  type = 'button',\n  onClick,\n  children,\n  name,\n  width,\n  selected,\n}) => {\n  return (\n    <ButtonStyled\n      name={name}\n      type={type}\n      onClick={onClick}\n      width={width}\n      selected={selected}\n      whileTap={{ scale: 0.95 }}\n    >\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  width: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  selected: PropTypes.bool,\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FieldStyle = styled(Field)`\n  position: relative;\n  width: 100%;\n  border-radius: 40px;\n\n  cursor: pointer;\n\n  margin-bottom: 16px;\n\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  background-color: ${theme.colors.mainBackground};\n  font-family: ${theme.fontFamily.manrope};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.normal};\n  color: ${theme.colors.primaryText};\n\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n`;\n\nexport const ErrorStyle = styled(ErrorMessage)`\n  position: absolute;\n  transform: translate(20px, -15px);\n  font-size: ${theme.fontSizes.xxxs};\n  color: red;\n`;\n\nexport const StyledSpan = styled.span`\n  color: ${theme.colors.accent};\n`;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport {\n  ErrorStyle,\n  FieldStyle,\n  StyledSpan,\n  StyledLabel,\n} from './Input.styled';\n\nconst InputField = ({ label, name, type, placeholder, id, span }) => {\n  return (\n    <>\n      <label htmlFor={name}>\n        {label}\n        <StyledSpan>{span}</StyledSpan>\n      </label>\n      <FieldStyle type={type} name={name} id={id} placeholder={placeholder} />\n      <ErrorStyle name={name} component=\"div\" />\n    </>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  span: PropTypes.string,\n};\n","import React from 'react';\nimport InputField from 'components/Ui-Kit/Input';\n\n\nconst LoginInputs = () => {\n    return (\n        <div>\n            <InputField name=\"email\" type=\"email\" placeholder=\"Email\" />\n            <InputField name=\"password\" type=\"password\" placeholder=\"Password\" />\n        </div>\n    );\n};\n\nexport default LoginInputs;","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\n\nexport const ModalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalContent = styled.div`\n  background-color: ${theme.colors.cardBackground};\n  border-radius: 40px;\n  padding: 60px 80px 40px 80px;\n  width: 618px;\n  max-height: 605px;\n  box-shadow: ${theme.boxShadow.second};\n`;\n\nexport const FormTitle = styled.h1`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.medium};\n  font-size: 36px;\n  line-height: 49px;\n  text-align: center;\n  align-items: center;\n  color: ${theme.colors.mainText};\n`;\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  gap: 30px;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 100%;\n`;\n\nexport const Paragraph = styled.p`\n  font-family: ${theme.fontFamily.manrope};\n  font-weight: ${theme.fontWeight.normal};\n  font-size: ${theme.fontSizes.xxxs};\n  line-height: 16px;\n  align-items: center;\n  text-align: center;\n  color: ${theme.colors.secondaryText};\n`;\n\nexport const LoginLink = styled(NavLink)`\n  color: #3091EB;\n  text-decoration: none;\n`;\n\n","import React from \"react\";\nimport { useEffect } from 'react';\n\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from 'react-router-dom';\n\nimport { useLoginUserMutation } from \"redux/api/userApi\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport LoginInputs from \"./LoginInputs\";\nimport { ModalContent, ModalWrapper, FormWrapper, ButtonWrapper, FormTitle, LoginLink, Paragraph } from \"./LoginForm.styled\";\n\nimport Button from 'components/Ui-Kit/Button';\n\n\n// Values for Formik\n\nconst initialValues = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n\n};\n\n\n// Yup validation\n\nconst validationSchema = Yup.object().shape({\n\n    email: Yup.string()\n        .email(\"Invalid email address\")\n        .required(\"Email is required\"),\n    password: Yup.string()\n        .min(7, \"Password must be at least 7 characters long\")\n        .required(\"Password is required\"),\n});\n\n\n\n// main function\n\nconst LoginForm = () => {\n\n    const [loginUser, { isError }] = useLoginUserMutation();\n    const navigate = useNavigate();\n    const { isAuth } = useSelector(state => state.user);\n\n    const handleSubmit = (values) => {\n\n        const credentials = {\n            email: values.email,\n            password: values.password,\n        };\n        loginUser(credentials);\n    };\n\n    useEffect(() => {\n        if (isAuth) {\n            console.log('Congratulations! You are successfully signed up!');\n            navigate('/');\n        }\n    });\n\n    return (\n        <ModalWrapper>\n            <ModalContent>\n                <FormTitle>Login</FormTitle>\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={handleSubmit}\n                >\n                    {({ isSubmitting }) => {\n                        return (\n                            <FormWrapper>\n                                <LoginInputs />\n                                <ButtonWrapper>\n                                    <Button name=\"filled\" type=\"submit\" disabled={isSubmitting}>\n                                        Submit\n                                    </Button>\n                                </ButtonWrapper>\n                            </FormWrapper>);\n                    }}\n                </Formik>\n                <Paragraph>Don&apos;t have an account? <LoginLink to=\"/register\">Regiser</LoginLink></Paragraph>\n            </ModalContent>\n        </ModalWrapper>\n    );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport { logout } from '../../redux/user/userSlice';\nimport AuthPageContainer from 'components/AuthPageContainer';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { isAuth } = useSelector(state => state.user);\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <AuthPageContainer>\n      <Section>\n        {isAuth ? (\n          <button onClick={handleLogout}>Logout</button>\n        ) : (\n          <LoginForm />\n        )}\n      </Section>\n    </AuthPageContainer>\n  );\n};\n\nexport default Login;\n"],"names":["ButtonStyled","styled","motion","theme","width","colors","accent","name","selected","mainText","lightText","transitionTiming","hover","secondaryHover","type","onClick","children","whileTap","scale","FieldStyle","Field","ErrorStyle","ErrorMessage","StyledSpan","label","placeholder","id","span","htmlFor","component","Input","ModalWrapper","ModalContent","FormTitle","FormWrapper","Form","ButtonWrapper","Paragraph","LoginLink","NavLink","initialValues","email","password","confirmPassword","validationSchema","Yup","shape","required","min","useLoginUserMutation","loginUser","navigate","isError","useNavigate","isAuth","useSelector","state","user","useEffect","console","log","onSubmit","values","credentials","isSubmitting","Button","disabled","to","dispatch","useDispatch","AuthPageContainer","Section","logout"],"sourceRoot":""}