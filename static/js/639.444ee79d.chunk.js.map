{"version":3,"file":"static/js/639.444ee79d.chunk.js","mappings":"sKAeA,SAASA,EAAiBC,GACtB,IAAIC,GAAOC,EAAAA,EAAAA,KACPC,EAAgBF,EAAKE,cAAeC,EAAKH,EAAKI,cAAeC,OAAc,IAAPF,EAAgBG,EAAAA,SAAiBH,EACrGI,EAAKR,EAAMQ,GAAIC,EAAcT,EAAMS,YAAaC,EAAiBV,EAAMU,eAAgBC,EAASX,EAAMW,OAAQC,EAAWZ,EAAMY,SAAUC,EAAKb,EAAMc,QAASC,OAAmB,IAAPF,EAAgBP,EAAOO,EAEhMG,EAAQb,EADK,CAAEK,GAAIA,EAAIC,YAAaA,EAAaC,eAAgBA,GAC/BC,EAAQ,CAC1CM,UAHgNjB,EAAMiB,YAK1N,MAAwB,oBAAbL,EACAA,EAASM,MAAMC,QAAQH,GAASA,EAAQ,CAACA,IAEhDD,EACOR,EAAAA,cAAoBQ,EAAW,KAAMR,EAAAA,SAAAA,QAAuBS,IAEhET,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMS,EACrD,CACAjB,EAAiBqB,YAAc,mBAC/B,IAAIC,EAA2Bd,EAAAA,KAAWR,GAvB1C,SAAkBuB,EAAWC,GACzB,IAAIZ,EAASW,EAAUX,OAAQa,GAAaC,EAAAA,EAAAA,IAAOH,EAAW,CAAC,WAC3DI,EAAaH,EAAUZ,OAAQgB,GAAiBF,EAAAA,EAAAA,IAAOF,EAAW,CAAC,WACvE,OAAQK,EAAAA,EAAAA,IAAaF,EAAYf,KAC7BiB,EAAAA,EAAAA,IAAaJ,EAAYG,EACjC,IAmBAN,EAAyBD,YAAc,2BACvC,K,wFC/Be,SAASlB,IACpB,IAAID,EAAOM,EAAAA,WAAiBsB,EAAAA,IAE5B,OADAC,EAAAA,EAAAA,IAAqB7B,GACdA,CACX,C,qECNe,SAAS8B,IActB,OAZEA,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAAIC,OAEZ,SAAcC,EAAQC,EAAUC,GACrC,IAAIC,ECLK,SAAwBC,EAAQH,GAC7C,MAAQI,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQH,IAEpC,QADfG,GAAS,EAAAK,EAAA,GAAeL,MAG1B,OAAOA,CACT,CDDiB,CAAcJ,EAAQC,GACjC,GAAKE,EAAL,CACA,IAAIO,EAAOL,OAAOM,yBAAyBR,EAAMF,GACjD,OAAIS,EAAKZ,IACAY,EAAKZ,IAAIU,KAAKI,UAAUC,OAAS,EAAIb,EAASE,GAEhDQ,EAAKI,KALK,CAMnB,EAEKlB,EAAKmB,MAAMC,KAAMJ,UAC1B,C,gFEXMK,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAC,OAAKA,CAAC,EAC5BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,G,uBCA/BM,GAAcN,EAAAA,EAAAA,eAAc,CAAEO,QAAQ,ICK5C,SAASC,EAAiB9C,EAAW+C,EAAa9D,EAAO+D,GACrD,IAAMC,GFJCC,EAAAA,EAAAA,YAAWP,GAAeQ,cEK3BC,GAAcF,EAAAA,EAAAA,YAAWN,GACzBS,GAAkBH,EAAAA,EAAAA,YAAWI,EAAAA,GAC7BC,GAAsBL,EAAAA,EAAAA,YAAWb,GAAqBK,cACtDc,GAAmBC,EAAAA,EAAAA,UAIzBT,EAAsBA,GAAuBI,EAAYM,UACpDF,EAAiBG,SAAWX,IAC7BQ,EAAiBG,QAAUX,EAAoBhD,EAAW,CACtD+C,YAAAA,EACAE,OAAAA,EACAhE,MAAAA,EACAoE,gBAAAA,EACAO,wBAAuBP,IACW,IAA5BA,EAAgBQ,QAEtBN,oBAAAA,KAGR,IAAMJ,EAAgBK,EAAiBG,QA4BvC,OA3BAG,EAAAA,EAAAA,qBAAmB,WACfX,GAAiBA,EAAcY,OAAO9E,EAAOoE,EACjD,KACAW,EAAAA,EAAAA,IAA0B,WACtBb,GAAiBA,EAAcc,QACnC,KACAC,EAAAA,EAAAA,YAAU,WACNf,GAAiBA,EAAcgB,gBACnC,KAWgCC,OAAOC,wBACjCL,EAAAA,EACAE,EAAAA,YACkB,WAChBf,GAAiBA,EAAcmB,gBAC/BnB,EAAcmB,eAAeC,gBAErC,IACOpB,CACX,CC1DA,SAASqB,EAAYC,GACjB,MAAuB,kBAARA,GACXhD,OAAOC,UAAUC,eAAeC,KAAK6C,EAAK,UAClD,CCAA,SAASC,EAAeC,GACpB,MAAoB,kBAANA,GAAkBxE,MAAMC,QAAQuE,EAClD,CCLA,SAASC,EAAoBD,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEE,KAC7C,CCCA,IAAMC,EAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsB9F,GAC3B,OAAQ2F,EAAoB3F,EAAM+F,UAC9BF,EAAaG,MAAK,SAACC,GAAI,OAAKR,EAAezF,EAAMiG,GAAM,GAC/D,CACA,SAASC,EAAclG,GACnB,OAAOmG,QAAQL,EAAsB9F,IAAUA,EAAMoG,SACzD,CCfA,SAASC,EAAuBrG,GAC5B,MCFJ,SAAgCA,EAAOsG,GACnC,GAAIR,EAAsB9F,GAAQ,CAC9B,IAAQ4E,EAAqB5E,EAArB4E,QAASmB,EAAY/F,EAAZ+F,QACjB,MAAO,CACHnB,SAAqB,IAAZA,GAAqBa,EAAeb,GACvCA,OACA2B,EACNR,QAASN,EAAeM,GAAWA,OAAUQ,EAErD,CACA,OAAyB,IAAlBvG,EAAMwG,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuBzG,GAAOiE,EAAAA,EAAAA,YAAWP,IAA9DkB,EAAO,EAAPA,QAASmB,EAAO,EAAPA,QACjB,OAAOW,EAAAA,EAAAA,UAAQ,iBAAO,CAAE9B,QAAAA,EAASmB,QAAAA,EAAS,GAAG,CAACY,EAA0B/B,GAAU+B,EAA0BZ,IAChH,CACA,SAASY,EAA0BC,GAC/B,OAAO1F,MAAMC,QAAQyF,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAe,CACjBC,UAAW,CACP,UACA,OACA,WACA,aACA,WACA,aACA,YACA,eAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAAE,cAE1BA,EAAmBC,GAAO,CACtBC,UAAW,SAAC1H,GAAK,OAAK8G,EAAaW,GAAKzB,MAAK,SAACC,GAAI,QAAOjG,EAAMiG,EAAK,GAAC,EAE7E,EAJA,IAAK,IAAMwB,KAAOX,EAAY,K,wBChBxBa,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZhBrH,EAAK,E,cCEHsH,GAA2BzE,EAAAA,EAAAA,eAAc,CAAC,GCL1C0E,EAAwBC,OAAOC,IAAI,yBCwBzC,SAASC,EAAsB,GAAmF,IAAjFC,EAAiB,EAAjBA,kBAAmBpE,EAAmB,EAAnBA,oBAAqBqE,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAgBtH,EAAS,EAATA,UAChGoH,GCvBJ,SAAsBG,GAClB,IAAK,IAAMb,KAAOa,EACdd,EAAmBC,IAAO,kBACnBD,EAAmBC,IACnBa,EAASb,GAGxB,CDgByBc,CAAaJ,GAuDlC,IAAMK,GAAsBC,EAAAA,EAAAA,aAtD5B,SAAyBzI,EAAO0I,GAK5B,IAAIC,EACEC,GAAiB,2BAChB3E,EAAAA,EAAAA,YAAWb,IACXpD,GAAK,IACR6I,SAAUC,EAAY9I,KAElBwD,EAAaoF,EAAbpF,SACF8C,EAAUD,EAAuBrG,GAYjC+I,EAAevF,OAAW+C,GH7C7ByC,EAAAA,EAAAA,IAAY,WACf,GAAIrB,EAAsBE,eACtB,OAAOrH,GAEf,IG0CUsD,EAAcuE,EAAerI,EAAOwD,GAC1C,IAAKA,GAAYyF,EAAAA,EAAW,CAOxB3C,EAAQpC,cAAgBL,EAAiB9C,EAAW+C,EAAa8E,EAAgB7E,GAKjF,IAAMmF,GAA2BjF,EAAAA,EAAAA,YAAW6D,GACtCqB,GAAWlF,EAAAA,EAAAA,YAAWN,GAAaC,OACrC0C,EAAQpC,gBACRyE,EAAgBrC,EAAQpC,cAAcqE,aAEtCK,EAAgBO,EAAUhB,EAAmBY,EAAcG,GAEnE,CAKA,OAAQ3I,EAAAA,cAAoBmD,EAAc0F,SAAU,CAAEnG,MAAOqD,GACzDqC,GAAiBrC,EAAQpC,cAAiB3D,EAAAA,cAAoBoI,GAAe,QAAEzE,cAAeoC,EAAQpC,eAAkB0E,IAAqB,KAC7IR,EAAUrH,EAAWf,EAAO+I,EEvExC,SAAsBjF,EAAaI,EAAewE,GAC9C,OAAOW,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAYxF,EAAYyF,OAASzF,EAAYyF,MAAMD,GAC/CpF,IACAoF,EACMpF,EAAcqF,MAAMD,GACpBpF,EAAcsF,WAEpBd,IAC2B,oBAAhBA,EACPA,EAAYY,GAEP/D,EAAYmD,KACjBA,EAAYhE,QAAU4E,GAGlC,GAMA,CAACpF,GACL,CFgDsDuF,CAAa3F,EAAawC,EAAQpC,cAAewE,GAAc5E,EAAaN,EAAU8C,EAAQpC,eAChJ,IAGA,OADAsE,EAAoBT,GAAyBhH,EACtCyH,CACX,CACA,SAASM,EAAY,GAAc,IAAZD,EAAQ,EAARA,SACba,GAAgBzF,EAAAA,EAAAA,YAAW0F,EAAAA,GAAoBnJ,GACrD,OAAOkJ,QAA8BnD,IAAbsC,EAClBa,EAAgB,IAAMb,EACtBA,CACV,CGzEA,SAASe,EAAkBC,GACvB,SAASC,EAAO/I,GACZ,OAAOmH,EAAsB2B,EAAa9I,EADW,UAAH,6CAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVgJ,MACP,OAAOD,EAMX,IAAME,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMD,EAAQ,CAMrB7H,IAAK,SAACiI,EAASzC,GAOX,OAHKuC,EAAeG,IAAI1C,IACpBuC,EAAeI,IAAI3C,EAAKqC,EAAOrC,IAE5BuC,EAAe/H,IAAIwF,EAC9B,GAER,CCxCA,IAAM4C,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAevJ,GACpB,MAKqB,kBAAdA,IAIHA,EAAUwJ,SAAS,SAOvBF,EAAqBG,QAAQzJ,IAAc,GAIvC,QAAQ0J,KAAK1J,GAIrB,CC3BA,IAAM2J,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBrD,EAAK,GAAsB,IAApBF,EAAM,EAANA,OAAQsB,EAAQ,EAARA,SACxC,OAAQ+B,EAAeT,IAAI1C,IACvBA,EAAIsD,WAAW,YACbxD,QAAuBhB,IAAbsC,OACL6B,EAAgBjD,IAAgB,YAARA,EACvC,CCRA,IAAMuD,EAAgB,SAAC/H,GAAK,OAAKkD,QAAQlD,GAASA,EAAMgI,YAAY,ECE9DC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmB3H,OCLzC,SAASwI,EAAc/D,GACnB,OAAOA,EAAIsD,WAAW,KAC1B,CCFA,IAAMU,EAAiB,SAACxI,EAAOyI,GAC3B,OAAOA,GAAyB,kBAAVzI,EAChByI,EAAKC,UAAU1I,GACfA,CACV,ECPM2I,EAAQ,SAACC,EAAKC,EAAKpG,GAAC,OAAKqG,KAAKF,IAAIE,KAAKD,IAAIpG,EAAGmG,GAAMC,EAAI,ECExDE,EAAS,CACXvB,KAAM,SAAC/E,GAAC,MAAkB,kBAANA,CAAc,EAClCuG,MAAOC,WACPP,UAAW,SAACjG,GAAC,OAAKA,CAAC,GAEjByG,GAAQ,kBACPH,GAAM,IACTL,UAAW,SAACjG,GAAC,OAAKkG,EAAM,EAAG,EAAGlG,EAAE,IAE9B0G,GAAQ,kBACPJ,GAAM,IACTK,QAAS,ICPPC,EAAW,SAAC5G,GAAC,OAAKqG,KAAKQ,MAAU,IAAJ7G,GAAc,GAAM,EACjD8G,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASjH,GACd,MAAoB,kBAANA,CAClB,CCVA,IAAMkH,EAAiB,SAACC,GAAI,MAAM,CAC9BpC,KAAM,SAAC/E,GAAC,OAAKiH,EAASjH,IAAMA,EAAEoH,SAASD,IAAiC,IAAxBnH,EAAEqH,MAAM,KAAK/J,MAAY,EACzEiJ,MAAOC,WACPP,UAAW,SAACjG,GAAC,gBAAQA,GAAC,OAAGmH,EAAI,EAChC,EACKG,GAAUJ,EAAe,OACzBK,GAAUL,EAAe,KACzBM,GAAKN,EAAe,MACpBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,IAAqB,kBACpBJ,IAAO,IACVhB,MAAO,SAACvG,GAAC,OAAKuH,GAAQhB,MAAMvG,GAAK,GAAG,EACpCiG,UAAW,SAACjG,GAAC,OAAKuH,GAAQtB,UAAc,IAAJjG,EAAQ,ICb1C4H,IAAM,kBACLtB,GAAM,IACTL,UAAWI,KAAKQ,QCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,GACRuC,QAASvC,GACTwC,QAASxC,GACTyC,QAASzC,GACTZ,MAAAA,EACAsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,GACN8C,MAAO9C,GACP+C,MAAO/C,GACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZ/B,EAAG+B,GACH9B,EAAG8B,GACH7B,EAAG6B,GACHkD,YAAalD,GACb5B,qBAAsB4B,GACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,IAAQC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,KAAMxF,EAA+BmF,EAA/BnF,UAAWyF,EAAoBN,EAApBM,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAM9J,KAAOsJ,EAAc,CAC5B,IAAM9N,EAAQ8N,EAAatJ,GAI3B,GAAI+D,EAAc/D,GACd0J,EAAK1J,GAAOxE,MADhB,CAKA,IAAMuO,EAAYjE,GAAiB9F,GAC7BgK,EAAchG,EAAexI,EAAOuO,GAC1C,GAAI5G,EAAeT,IAAI1C,GAAM,CAKzB,GAHA4J,GAAe,EACf1F,EAAUlE,GAAOgK,GAEZF,EACD,SAEAtO,KAAWuO,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACS9J,EAAIsD,WAAW,WAEpBuG,GAAqB,EACrBF,EAAgB3J,GAAOgK,GAGvBP,EAAMzJ,GAAOgK,CArBjB,CAuBJ,CAiBA,GAhBKV,EAAapF,YACV0F,GAAgBJ,EAChBC,EAAMvF,UTtClB,SAAwBA,EAAW,EAAmE+F,EAAoBT,GAOtH,IAPyI,QAAxGU,2BAAAA,OAA0B,IAAG,GAAI,MAAEC,mBAAAA,OAAkB,IAAG,GAAI,EAEzFC,EAAkB,GAKbC,EAAI,EAAGA,EAAIvG,EAAeuG,IAAK,CACpC,IAAMrK,EAAMkD,EAAmBmH,GAC/B,QAAuBvL,IAAnBoF,EAAUlE,GAAoB,CAC9B,IAAMsK,EAAgB7G,EAAezD,IAAQA,EAC7CoK,GAAmB,GAAJ,OAAOE,EAAa,YAAIpG,EAAUlE,GAAI,KACzD,CACJ,CAaA,OAZIkK,IAA+BhG,EAAUN,IACzCwG,GAAmB,iBAEvBA,EAAkBA,EAAgBG,OAG9Bf,EACAY,EAAkBZ,EAAkBtF,EAAW+F,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CSW8BI,CAAenB,EAAMnF,UAAWqF,EAASO,EAAiBN,GAEvEC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB2F,EAAoB,CACpB,MAA2DF,EAAnDd,QAAAA,OAAO,IAAG,QAAK,IAAoCc,EAAlCb,QAAAA,OAAO,IAAG,QAAK,IAAmBa,EAAjBZ,QAAAA,OAAO,IAAG,IAAC,EACrDU,EAAME,gBAAkB,GAAH,OAAMd,EAAO,YAAIC,EAAO,YAAIC,EACrD,CACJ,CCvEA,IAAM0B,GAAwB,WAAH,MAAU,CACjChB,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,EACV,ECCD,SAASgB,GAAkBhQ,EAAQiQ,EAAQpS,GACvC,IAAK,IAAMyH,KAAO2K,EACTpH,EAAcoH,EAAO3K,KAAUqD,EAAoBrD,EAAKzH,KACzDmC,EAAOsF,GAAO2K,EAAO3K,GAGjC,CAQA,SAAS4K,GAASrS,EAAO8D,EAAaN,GAClC,IACM0N,EAAQ,CAAC,EAMf,OAFAiB,GAAkBjB,EALAlR,EAAMkR,OAAS,CAAC,EAKElR,GACpCwC,OAAO8P,OAAOpB,EAdlB,SAAgC,EAAuBpN,EAAaN,GAAU,IAA5CyN,EAAiB,EAAjBA,kBAC9B,OAAOvK,EAAAA,EAAAA,UAAQ,WACX,IAAMoK,EAAQoB,KAEd,OADArB,GAAgBC,EAAOhN,EAAa,CAAE6N,4BAA6BnO,GAAYyN,GACxEzO,OAAO8P,OAAO,CAAC,EAAGxB,EAAMK,KAAML,EAAMI,MAC/C,GAAG,CAACpN,GACR,CAQyByO,CAAuBvS,EAAO8D,EAAaN,IACzDxD,EAAMwS,gBAAkBxS,EAAMwS,gBAAgBtB,GAASA,CAClE,CACA,SAASuB,GAAazS,EAAO8D,EAAaN,GAEtC,IAAMkP,EAAY,CAAC,EACbxB,EAAQmB,GAASrS,EAAO8D,EAAaN,GAoB3C,OAnBIxD,EAAMiH,OAA+B,IAAvBjH,EAAM2S,eAEpBD,EAAUE,WAAY,EAEtB1B,EAAM2B,WACF3B,EAAM4B,iBACF5B,EAAM6B,mBACF,OAEZ7B,EAAM8B,aACa,IAAfhT,EAAMiH,KACA,OAAM,cACgB,MAAfjH,EAAMiH,KAAe,IAAM,WAEzBV,IAAnBvG,EAAMiT,WACLjT,EAAMkT,OAASlT,EAAMmT,YAAcnT,EAAMoT,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUxB,MAAQA,EACXwB,CACX,CChDA,IAAMW,GAAmB,IAAIxI,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAASyI,GAAkB7L,GACvB,OAAQA,EAAIsD,WAAW,UAClBtD,EAAIsD,WAAW,SAAmB,cAARtD,GAC3BA,EAAIsD,WAAW,WACftD,EAAIsD,WAAW,UACftD,EAAIsD,WAAW,UACfsI,GAAiBlJ,IAAI1C,EAC7B,CCtDA,IACiC8L,GAD7BC,GAAgB,SAAC/L,GAAG,OAAM6L,GAAkB7L,EAAI,EAoBpD,KAnBiC8L,GAyBLE,QAAQ,0BAA0BpH,WArB1DmH,GAAgB,SAAC/L,GAAG,OAAKA,EAAIsD,WAAW,OAASuI,GAAkB7L,GAAO8L,GAAY9L,EAAI,EAwB1F,CADJ,MAAOrH,IACH,C,eC7BJ,SAASsT,GAAWC,EAAQC,EAAQrF,GAChC,MAAyB,kBAAXoF,EACRA,EACAzG,GAAGvB,UAAUiI,EAASrF,EAAOoF,EACvC,CCJA,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,qFCDX,SAASE,GAAclD,EAAO,EAEjBE,EAASiD,EAAUhD,GAAmB,IAFnBiD,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAO7D,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAAS6D,EAAU,EAAVA,WAAU,IAAEC,YAAAA,OAAW,IAAG,IAAC,MAAEC,WAAAA,OAAU,IAAG,IAAC,EAQvG,GALAzD,GAAgBC,GADX,cAC0BE,EAASC,GAKpCgD,EACInD,EAAMI,MAAMqD,UACZzD,EAAM0D,MAAMD,QAAUzD,EAAMI,MAAMqD,aAF1C,CAMAzD,EAAM0D,MAAQ1D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,IAAQsD,EAA6B1D,EAA7B0D,MAAOtD,EAAsBJ,EAAtBI,MAAOuD,EAAe3D,EAAf2D,WAKlBD,EAAM7I,YACF8I,IACAvD,EAAMvF,UAAY6I,EAAM7I,kBACrB6I,EAAM7I,WAGb8I,SACalO,IAAZ+J,QAAqC/J,IAAZgK,GAAyBW,EAAMvF,aACzDuF,EAAME,gBFzBd,SAAgCqD,EAAYnE,EAASC,GACjD,IAAMmE,EAAYhB,GAAWpD,EAASmE,EAAWtJ,EAAGsJ,EAAWtG,OACzDwG,EAAYjB,GAAWnD,EAASkE,EAAWrJ,EAAGqJ,EAAWpG,QAC/D,MAAO,GAAP,OAAUqG,EAAS,YAAIC,EAC3B,CEqBgCC,CAAuBH,OAAwBlO,IAAZ+J,EAAwBA,EAAU,QAAiB/J,IAAZgK,EAAwBA,EAAU,UAG1HhK,IAAV2N,IACAM,EAAMrJ,EAAI+I,QACA3N,IAAV4N,IACAK,EAAMpJ,EAAI+I,QAEK5N,IAAf6N,GD3BR,SAAsBI,EAAOxR,GAAqD,IAA7C6R,EAAU,UAAH,6CAAG,EAAGjB,EAAS,UAAH,6CAAG,EAAGkB,IAAc,UAAH,+CAErEN,EAAMJ,WAAa,EAGnB,IAAMW,EAAOD,EAAcjB,GAAWE,GAEtCS,EAAMO,EAAKnB,QAAU1G,GAAGvB,WAAWiI,GAEnC,IAAMQ,EAAalH,GAAGvB,UAAU3I,GAC1BqR,EAAcnH,GAAGvB,UAAUkJ,GACjCL,EAAMO,EAAKjB,OAAS,GAAH,OAAMM,EAAU,YAAIC,EACzC,CCgBQW,CAAaR,EAAOJ,EAAYC,EAAaC,GAAY,EAzB7D,CA2BJ,CC7CA,IAAMW,GAAuB,WAAH,yBACnB/C,MAAuB,IAC1BsC,MAAO,CAAC,GAAC,ECJPP,GAAW,SAACiB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAIC,aAAuB,ECMhF,SAASC,GAAYpV,EAAO8D,EAAauR,EAAWtU,GAChD,IAAMuU,GAAc5O,EAAAA,EAAAA,UAAQ,WACxB,IAAMoK,EAAQmE,KAEd,OADAjB,GAAclD,EAAOhN,EAAa,CAAE6N,4BAA4B,GAASsC,GAASlT,GAAYf,EAAMiR,oBAC7F,kBACAH,EAAM0D,OAAK,IACdtD,OAAO,UAAKJ,EAAMI,QAE1B,GAAG,CAACpN,IACJ,GAAI9D,EAAMkR,MAAO,CACb,IAAMqE,EAAY,CAAC,EACnBpD,GAAkBoD,EAAWvV,EAAMkR,MAAOlR,GAC1CsV,EAAYpE,OAAQ,kBAAKqE,GAAcD,EAAYpE,MACvD,CACA,OAAOoE,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAqB,UAAH,8CA2BvC,OA1BkB,SAAC1U,EAAWf,EAAO+I,EAAcvD,EAAK,EAAkBhC,GAAa,IAA7BuN,EAAY,EAAZA,aAIhDuE,GAHiBhL,EAAevJ,GAChCqU,GACA3C,IAC6BzS,EAAO+Q,EAAcvN,EAAUzC,GAC5D2U,EPoBd,SAAqB1V,EAAO2V,EAAOF,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAMjO,KAAOzH,EAQF,WAARyH,GAA4C,kBAAjBzH,EAAMW,SAEjC6S,GAAc/L,KACU,IAAvBgO,GAA+BnC,GAAkB7L,KAChDkO,IAAUrC,GAAkB7L,IAE7BzH,EAAiB,WAAKyH,EAAIsD,WAAW,aACtC2K,EAAcjO,GAAOzH,EAAMyH,IAGnC,OAAOiO,CACX,COzC8BE,CAAY5V,EAA4B,kBAAde,EAAwB0U,GAClEI,GAAe,0BACdH,GACAJ,GAAW,IACd9P,IAAAA,IAOI5E,EAAaZ,EAAbY,SACFkV,GAAmBpP,EAAAA,EAAAA,UAAQ,kBAAOsE,EAAcpK,GAAYA,EAASqB,MAAQrB,CAAQ,GAAG,CAACA,IAI/F,OAHImI,IACA8M,EAAa,sBAAwB9M,IAElCgN,EAAAA,EAAAA,eAAchV,GAAW,kBACzB8U,GAAY,IACfjV,SAAUkV,IAElB,CAEJ,CChCA,IAAME,GAAc,SAACC,GAAG,OAAKA,EAAIC,QAAQ,kBAAmB,SAASf,aAAa,ECHlF,SAASgB,GAAWC,EAAS,EAAiBC,EAAWC,GAAY,IAAtCpF,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAGlC,IAAK,IAAM1J,KAFXjF,OAAO8P,OAAO8D,EAAQlF,MAAOA,EAAOoF,GAAcA,EAAWC,oBAAoBF,IAE/DlF,EACdiF,EAAQlF,MAAMsF,YAAY/O,EAAK0J,EAAK1J,GAE5C,CCHA,IAAMgP,GAAsB,IAAI5L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS6L,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAM7O,KADX0O,GAAWC,EAASO,OAAapQ,EAAW+P,GAC1BK,EAAYnC,MAC1B4B,EAAQS,aAAcJ,GAAoBtM,IAAI1C,GAA0BA,EAAnBuO,GAAYvO,GAAYkP,EAAYnC,MAAM/M,GAEvG,CCNA,SAASqP,GAA4B9W,EAAOsB,GACxC,IAAQ4P,EAAUlR,EAAVkR,MACF6F,EAAY,CAAC,EACnB,IAAK,IAAMtP,KAAOyJ,GACVlG,EAAckG,EAAMzJ,KACnBnG,EAAU4P,OAASlG,EAAc1J,EAAU4P,MAAMzJ,KAClDqD,EAAoBrD,EAAKzH,MACzB+W,EAAUtP,GAAOyJ,EAAMzJ,IAG/B,OAAOsP,CACX,CCXA,SAASD,GAA4B9W,EAAOsB,GACxC,IAAMyV,EAAYC,GAA8BhX,EAAOsB,GACvD,IAAK,IAAMmG,KAAOzH,EAAO,CACrB,GAAIgL,EAAchL,EAAMyH,KAASuD,EAAc1J,EAAUmG,IAErDsP,EAD0B,MAARtP,GAAuB,MAARA,EAAc,OAASA,EAAIwP,cAAgBxP,GACrDzH,EAAMyH,EAErC,CACA,OAAOsP,CACX,CCZA,SAASG,GAAwBlX,EAAOmX,EAAYrN,GAAkD,IAA1CsN,EAAgB,UAAH,6CAAG,CAAC,EAAGC,EAAkB,UAAH,6CAAG,CAAC,EAsB/F,MAlB0B,oBAAfF,IACPA,EAAaA,OAAsB5Q,IAAXuD,EAAuBA,EAAS9J,EAAM8J,OAAQsN,EAAeC,IAM/D,kBAAfF,IACPA,EAAanX,EAAMoG,UAAYpG,EAAMoG,SAAS+Q,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB5Q,IAAXuD,EAAuBA,EAAS9J,EAAM8J,OAAQsN,EAAeC,IAElFF,CACX,CCvBA,IAAMG,GAAoB,SAAC5R,GACvB,OAAOxE,MAAMC,QAAQuE,EACzB,ECAM6R,GAAgB,SAAC7R,GACnB,OAAOS,QAAQT,GAAkB,kBAANA,GAAkBA,EAAE8R,KAAO9R,EAAE+R,QAC5D,EACMC,GAA+B,SAAChS,GAElC,OAAO4R,GAAkB5R,GAAKA,EAAEA,EAAE1C,OAAS,IAAM,EAAI0C,CACzD,ECAA,SAASiS,GAAmB1U,GACxB,IAAM2U,EAAiB5M,EAAc/H,GAASA,EAAMhB,MAAQgB,EAC5D,OAAOsU,GAAcK,GACfA,EAAeH,UACfG,CACV,C,sCCMA,IAAMC,GAAqB,SAACC,GAAM,OAAK,SAAC9X,EAAOwD,GAC3C,IAAM8C,GAAUrC,EAAAA,EAAAA,YAAWP,GACrBU,GAAkBH,EAAAA,EAAAA,YAAWI,EAAAA,GAC7B0T,EAAO,WAAH,OAbd,SAAmB,EAA8D/X,EAAOsG,EAASlC,GAAiB,IAA7F0S,EAA2B,EAA3BA,4BAA6BkB,EAAiB,EAAjBA,kBAAmBC,EAAO,EAAPA,QAC3DnH,EAAQ,CACVC,aAAcmH,GAAiBlY,EAAOsG,EAASlC,EAAiB0S,GAChEH,YAAaqB,KAKjB,OAHIC,IACAnH,EAAMvH,MAAQ,SAACD,GAAQ,OAAK2O,EAAQjY,EAAOsJ,EAAUwH,EAAM,GAExDA,CACX,CAIuBqH,CAAUL,EAAQ9X,EAAOsG,EAASlC,EAAgB,EACrE,OAAOZ,EAAWuU,KAAS/O,EAAAA,EAAAA,GAAY+O,EAC3C,CAAC,EACD,SAASG,GAAiBlY,EAAOsG,EAASlC,EAAiBgU,GACvD,IAAMzX,EAAS,CAAC,EACV0X,EAAeD,EAAmBpY,EAAO,CAAC,GAChD,IAAK,IAAMyH,KAAO4Q,EACd1X,EAAO8G,GAAOkQ,GAAmBU,EAAa5Q,IAElD,IAAM7C,EAAqB5E,EAArB4E,QAASmB,EAAY/F,EAAZ+F,QACTuS,EAA0BxS,EAAsB9F,GAChDuY,EAAkBrS,EAAclG,GAClCsG,GACAiS,IACCD,IACiB,IAAlBtY,EAAMwG,eACUD,IAAZ3B,IACAA,EAAU0B,EAAQ1B,cACN2B,IAAZR,IACAA,EAAUO,EAAQP,UAE1B,IAAIyS,IAA4BpU,IACE,IAA5BA,EAAgBQ,QAGhB6T,GADND,EAA4BA,IAAyC,IAAZ5T,GACRmB,EAAUnB,EACvD6T,GACwB,mBAAjBA,IACN9S,EAAoB8S,KACRvX,MAAMC,QAAQsX,GAAgBA,EAAe,CAACA,IACtDC,SAAQ,SAACvB,GACV,IAAMwB,EAAWzB,GAAwBlX,EAAOmX,GAChD,GAAKwB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8BzW,GAAWwW,EAA1BE,YAAqB,QAAKF,EAAQ,KACzD,IAAK,IAAMlR,KAAOtF,EAAQ,CACtB,IAAI2W,EAAc3W,EAAOsF,GACzB,GAAIvG,MAAMC,QAAQ2X,GAQdA,EAAcA,EAHAN,EACRM,EAAY9V,OAAS,EACrB,GAGU,OAAhB8V,IACAnY,EAAO8G,GAAOqR,EAEtB,CACA,IAAK,IAAMrR,KAAOmR,EACdjY,EAAO8G,GAAOmR,EAAcnR,EAnBtB,CAoBd,IAEJ,OAAO9G,CACX,CCvEA,IAAMoY,GAAkB,CACpB1Q,eAAgBwP,GAAmB,CAC/Bf,4BAA6BA,GAC7BkB,kBAAmB/C,GACnBgD,QAAS,SAACjY,EAAOsJ,EAAU,GAAkC,IAAhCqN,EAAW,EAAXA,YAAa5F,EAAY,EAAZA,aACtC,IACI4F,EAAYlC,WAEJ,oBADGnL,EAAS0P,QAEV1P,EAAS0P,UACT1P,EAAS2P,uBAUvB,CARA,MAAOC,GAEHvC,EAAYlC,WAAa,CACrBtJ,EAAG,EACHC,EAAG,EACH+C,MAAO,EACPE,OAAQ,EAEhB,CACA2F,GAAc2C,EAAa5F,EAAc,CAAEY,4BAA4B,GAASsC,GAAS3K,EAASxI,SAAUd,EAAMiR,mBAClHyF,GAAUpN,EAAUqN,EACxB,KC1BFwC,GAAmB,CACrB9Q,eAAgBwP,GAAmB,CAC/Bf,4BAAAA,GACAkB,kBAAmB9F,M,+CCP3B,SAASkH,GAAYjX,EAAQkX,EAAWC,GAAsC,IAA7BtI,EAAU,UAAH,6CAAG,CAAEuI,SAAS,GAElE,OADApX,EAAOqX,iBAAiBH,EAAWC,EAAStI,GACrC,kBAAM7O,EAAOsX,oBAAoBJ,EAAWC,EAAQ,CAC/D,CCHA,IAAMI,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAAY,UAAH,6CAAG,OACzC,MAAO,CACHC,MAAO,CACH9O,EAAGwO,EAAMK,EAAY,KACrB5O,EAAGuO,EAAMK,EAAY,MAGjC,CACA,ICVIE,GDUEC,GAAiB,SAACb,GACpB,OAAO,SAACK,GAAK,OAAKD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,GAAO,CACxF,EETA,SAASS,GAAgBjY,EAAQkX,EAAWC,EAAStI,GACjD,OAAOoI,GAAYjX,EAAQkX,EAAWc,GAAeb,GAAUtI,EACnE,EDJA,SAAWkJ,GACPA,EAAuB,QAAI,UAC3BA,EAAqB,MAAI,aACzBA,EAAmB,IAAI,WACvBA,EAAoB,KAAI,YACxBA,EAAqB,MAAI,aACzBA,EAAsB,OAAI,cAC1BA,EAAoB,KAAI,MAC3B,CARD,CAQGA,KAAkBA,GAAgB,CAAC,IEFtC,IAAMG,GAAmB,SAACC,EAAGC,GAAC,OAAK,SAAC7U,GAAC,OAAK6U,EAAED,EAAE5U,GAAG,GAC3C8U,GAAO,WAAH,2BAAOC,EAAY,yBAAZA,EAAY,uBAAKA,EAAaC,OAAOL,GAAiB,ECRvE,SAASM,GAAW1U,GAChB,IAAI2U,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAO3U,EAJM,WACb2U,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAc9T,GACnB,IAAI2T,GAAO,EACX,GAAa,MAAT3T,EACA2T,EAAOE,UAEN,GAAa,MAAT7T,EACL2T,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,C,IClDMC,GAAO,WACT,WAAYC,IAAM,gBACdlY,KAAKmY,WAAY,EACjBnY,KAAKkY,KAAOA,CAChB,CACY,OADX,+BACD,WAAW,KAAC,EALH,GCMb,SAASE,GAAcF,EAAMG,GACzB,IAAMnC,EAAY,WAAamC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOpB,GAAgBiB,EAAK3W,QAAS2U,GAXjB,SAACM,EAAO+B,GACxB,GAAmB,UAAf/B,EAAMjO,OAAoBwP,KAA9B,CAEA,IAAMlb,EAAQqb,EAAKM,WACfN,EAAKhW,gBAAkBrF,EAAM4b,YAC7BP,EAAKhW,eAAewW,UAAU3B,GAAc4B,MAAON,GAEnDxb,EAAMyb,IACNzb,EAAMyb,GAAc9B,EAAO+B,EANrB,CAQd,GAC6D,CACzDnC,SAAU8B,EAAKM,WAAWF,IAElC,CAAC,IACKM,GAAY,wGAID,OAJC,8BACd,WACI5Y,KAAKqG,QAAUgR,GAAKe,GAAcpY,KAAKkY,MAAM,GAAOE,GAAcpY,KAAKkY,MAAM,GACjF,GAAC,qBACD,WAAY,KAAC,EAJC,CAASD,ICnBrBY,GAAY,4CACd,aAAc,MAEY,OAFZ,iBACV,eAASjZ,YACJyY,UAAW,EAAM,CAC1B,CA6Ba,OA7BZ,gCACD,WACI,IAAIS,GAAiB,EAOrB,IACIA,EAAiB9Y,KAAKkY,KAAK3W,QAAQwX,QAAQ,iBAI/C,CAFA,MAAOhD,GACH+C,GAAiB,CACrB,CACKA,GAAmB9Y,KAAKkY,KAAKhW,iBAElClC,KAAKkY,KAAKhW,eAAewW,UAAU3B,GAAciC,OAAO,GACxDhZ,KAAKqY,UAAW,EACpB,GAAC,oBACD,WACSrY,KAAKqY,UAAarY,KAAKkY,KAAKhW,iBAEjClC,KAAKkY,KAAKhW,eAAewW,UAAU3B,GAAciC,OAAO,GACxDhZ,KAAKqY,UAAW,EACpB,GAAC,mBACD,WAAQ,WACJrY,KAAKqG,QAAUgR,GAAKpB,GAAYjW,KAAKkY,KAAK3W,QAAS,SAAS,kBAAM,EAAK0X,SAAS,IAAGhD,GAAYjW,KAAKkY,KAAK3W,QAAS,QAAQ,kBAAM,EAAK2X,QAAQ,IACjJ,GAAC,qBACD,WAAY,KAAC,EAjCC,CAASjB,ICErBkB,GAAgB,SAAhBA,EAAiBtY,EAAQuY,GAC3B,QAAKA,IAGIvY,IAAWuY,GAITD,EAActY,EAAQuY,EAAMC,eAE3C,ECjBMC,GAAO,SAACC,GAAG,OAAKA,CAAG,ECUzB,SAASC,GAA0B1W,EAAMqT,GACrC,GAAKA,EAAL,CAEA,IAAMsD,EAAwB,IAAIC,aAAa,UAAY5W,GAC3DqT,EAAQsD,EAAuB7C,GAAiB6C,GAFtC,CAGd,CAAC,IACKE,GAAY,4CACd,aAAc,MAkDR,OAlDQ,iBACV,eAAS/Z,YACJga,qBAAuBN,GAC5B,EAAKO,mBAAqBP,GAC1B,EAAKQ,0BAA4BR,GACjC,EAAKS,kBAAoB,SAACC,EAAYC,GAElC,GADA,EAAKJ,sBACD,EAAKK,WAAT,CAEA,IAAMrd,EAAQ,EAAKqb,KAAKM,WAalB2B,EAA0BlD,GAAgBjV,OAAQ,aAZhC,SAACoY,EAAUC,GAC/B,GAAK,EAAKC,gBAAV,CAEA,MAA+B,EAAKpC,KAAKM,WAAjCzI,EAAK,EAALA,MAAOwK,EAAW,EAAXA,YAKdpB,GAAc,EAAKjB,KAAK3W,QAAS6Y,EAASpb,QAErC+Q,GAASA,EAAMqK,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EAPjC,CASd,GACsF,CAAEjE,UAAWvZ,EAAMkT,OAASlT,EAAmB,eAC/H2d,EAA8BvD,GAAgBjV,OAAQ,iBAAiB,SAACyY,EAAaC,GAAU,OAAK,EAAKC,YAAYF,EAAaC,EAAW,GAAE,CAAEtE,UAAWvZ,EAAM0d,aAAe1d,EAAuB,mBAC9M,EAAKgd,mBAAqBxC,GAAK8C,EAAyBK,GACxD,EAAKI,WAAWZ,EAAYC,EAjBlB,CAkBd,EACA,EAAKY,qBAAuB,WACxB,IAcMC,EAAwB7E,GAAY,EAAKiC,KAAK3W,QAAS,WAdvC,SAACwZ,GACnB,GAAyB,UAArBA,EAAazW,MAAmB,EAAK4V,WAAzC,CAOA,EAAKL,qBACL,EAAKA,mBAAqB5D,GAAY,EAAKiC,KAAK3W,QAAS,SANrC,SAACyZ,GACM,UAAnBA,EAAW1W,KAAoB,EAAKgW,iBAExCd,GAA0B,KAAM,EAAKtB,KAAKM,WAAWzI,MACzD,IAGAyJ,GAA0B,QAAQ,SAAChD,EAAO+B,GACtC,EAAKqC,WAAWpE,EAAO+B,EAC3B,GAVU,CAWd,IAOM0C,EAAqBhF,GAAY,EAAKiC,KAAK3W,QAAS,QALvC,WACV,EAAK2Y,YAEVV,GAA0B,UAAU,SAACiB,EAAaC,GAAU,OAAK,EAAKC,YAAYF,EAAaC,EAAW,GAC9G,IAEA,EAAKZ,0BAA4BzC,GAAKyD,EAAuBG,EACjE,EAAE,CACN,CAqCC,OArCA,mCACD,SAAWzE,EAAO+B,GACdvY,KAAKka,YAAa,EAClB,MAAiCla,KAAKkY,KAAKM,WAAnCxI,EAAU,EAAVA,WAAoB,EAARC,UAIJjQ,KAAKkY,KAAKhW,gBACtBlC,KAAKkY,KAAKhW,eAAewW,UAAU3B,GAAcmE,KAAK,GAE1DlL,GAAcA,EAAWwG,EAAO+B,EACpC,GAAC,2BACD,WAOI,OANAvY,KAAK6Z,qBACL7Z,KAAKka,YAAa,EACJla,KAAKkY,KAAKM,WACdvI,UAAYjQ,KAAKkY,KAAKhW,gBAC5BlC,KAAKkY,KAAKhW,eAAewW,UAAU3B,GAAcmE,KAAK,IAElDnD,IACZ,GAAC,yBACD,SAAYvB,EAAO+B,GACf,GAAKvY,KAAKsa,gBAAV,CAEA,IAAQC,EAAgBva,KAAKkY,KAAKM,WAA1B+B,YACRA,GAAeA,EAAY/D,EAAO+B,EAFxB,CAGd,GAAC,mBACD,WACI,IAAM1b,EAAQmD,KAAKkY,KAAKM,WAClB2C,EAAwBlE,GAAgBjX,KAAKkY,KAAK3W,QAAS,cAAevB,KAAK+Z,kBAAmB,CAAE3D,UAAWvZ,EAAMmT,YAAcnT,EAAsB,kBACzJue,EAAsBnF,GAAYjW,KAAKkY,KAAK3W,QAAS,QAASvB,KAAK6a,sBACzE7a,KAAK4Z,qBAAuBvC,GAAK8D,EAAuBC,EAC5D,GAAC,qBACD,WACIpb,KAAK4Z,uBACL5Z,KAAK6Z,qBACL7Z,KAAK8Z,2BACT,KAAC,EAzFa,CAAS7B,I,YCXrBoD,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMC,EAAWL,GAAkBvc,IAAI2c,EAAMzc,QAC7C0c,GAAYA,EAASD,EACzB,EACME,GAA2B,SAACC,GAC9BA,EAAQrG,QAAQiG,GACpB,EAoBA,SAASK,GAAoB5I,EAASpF,EAAS6N,GAC3C,IAAMI,EApBV,SAAkC,GAAsB,IAApBC,EAAI,EAAJA,KAASlO,GAAO,cAC1CmO,EAAaD,GAAQE,SAItBV,GAAUvU,IAAIgV,IACfT,GAAUtU,IAAI+U,EAAY,CAAC,GAE/B,IAAME,EAAgBX,GAAUzc,IAAIkd,GAC9B1X,EAAM6X,KAAKC,UAAUvO,GAQ3B,OAHKqO,EAAc5X,KACf4X,EAAc5X,GAAO,IAAI+X,qBAAqBV,IAA0B,QAAEI,KAAAA,GAASlO,KAEhFqO,EAAc5X,EACzB,CAEsCgY,CAAyBzO,GAG3D,OAFAwN,GAAkBpU,IAAIgM,EAASyI,GAC/BI,EAA0BS,QAAQtJ,GAC3B,WACHoI,GAAkBmB,OAAOvJ,GACzB6I,EAA0BW,UAAUxJ,EACxC,CACJ,CC1CA,IAAMyJ,GAAiB,CACnB7Z,KAAM,EACN8Z,IAAK,GAEHC,GAAa,4CACf,aAAc,MAGY,OAHZ,iBACV,eAAShd,YACJid,gBAAiB,EACtB,EAAKC,UAAW,EAAM,CAC1B,CA4Ea,OA3Eb,yCAGA,WAAmB,WAMfC,uBAAsB,WAClB,EAAKF,gBAAiB,EACtB,IAAQG,EAAoB,EAAK9E,KAAKM,WAA9BwE,gBACRA,GAAmBA,EAAgB,MAC/B,EAAK9E,KAAKhW,gBACV,EAAKgW,KAAKhW,eAAewW,UAAU3B,GAAckG,QAAQ,EAEjE,GACJ,GAAC,2BACD,WAAgB,WACZjd,KAAKqG,UACL,IAA8C,EAApBrG,KAAKkY,KAAKM,WAA5B0E,SAAAA,OAAQ,IAAG,GAAC,EAAC,EACbnB,EAAsEmB,EAAtEnB,KAAcoB,EAAwDD,EAAhEpR,OAAM,EAA0DoR,EAA5CE,OAAAA,OAAM,IAAG,SAAM,EAAEC,EAA2BH,EAA3BG,KAAI,EAAuBH,EAArBI,SAAAA,OAAQ,IAAG,GAAI,EACxE,GAAoC,qBAAzBjB,qBAAX,CAKA,IAAMxO,EAAU,CACZkO,KAAMA,EAAOA,EAAKxa,aAAU6B,EAC5B+Z,WAAAA,EACAI,UAA6B,kBAAXH,EAAsBA,EAASV,GAAeU,IA+BpE,OAAOvB,GAAoB7b,KAAKkY,KAAK3W,QAASsM,GA7BjB,SAAC4N,GAC1B,IAAQ+B,EAAmB/B,EAAnB+B,eAIR,GAAI,EAAKV,WAAaU,IAEtB,EAAKV,SAAWU,GAKZH,GAASG,IAAkB,EAAKX,gBAApC,CAGSW,IACL,EAAKX,gBAAiB,GAEtB,EAAK3E,KAAKhW,gBACV,EAAKgW,KAAKhW,eAAewW,UAAU3B,GAAckG,OAAQO,GAM7D,MAA6C,EAAKtF,KAAKM,WAA/CwE,EAAe,EAAfA,gBAAiBS,EAAe,EAAfA,gBACnB/B,EAAW8B,EAAiBR,EAAkBS,EACpD/B,GAAYA,EAASD,EAVrB,CAWJ,GAlCA,CAHQ6B,GACAtd,KAAK0d,kBAsCjB,GAAC,mBACD,WACI1d,KAAK2d,eACT,GAAC,oBACD,WACI,GAAoC,qBAAzBtB,qBAAX,CAEA,MAA6Brc,KAAKkY,KAA1Brb,EAAK,EAALA,MAAOsB,EAAS,EAATA,UACTyf,EAAoB,CAAC,SAAU,SAAU,QAAQ/a,KAO/D,SAAkC,GAAyD,QAAvDqa,SAAAA,OAAQ,IAAG,GAAC,EAAC,2DAAsC,CAAC,EAAC,IAAlCA,SAAUW,OAAY,IAAG,GAAC,EAAC,EAC9E,OAAO,SAAC/a,GAAI,OAAKoa,EAASpa,KAAU+a,EAAa/a,EAAK,CAC1D,CAToEgb,CAAyBjhB,EAAOsB,IACxFyf,GACA5d,KAAK2d,eAJC,CAMd,GAAC,qBACD,WAAY,KAAC,EAjFE,CAAS1F,ICH5B,IAAM8F,GAAoB,CACtB5Z,OAAQ,CACJ8T,QAAS2E,IAEb3Y,IAAK,CACDgU,QAAS0B,IAEb5V,MAAO,CACHkU,QAASY,IAEb7U,MAAO,CACHiU,QAASW,K,sBChBjB,SAASoF,GAAeC,EAAMC,GAC1B,IAAKngB,MAAMC,QAAQkgB,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKre,OACxB,GAAIse,IAAeF,EAAKpe,OACpB,OAAO,EACX,IAAK,IAAI8O,EAAI,EAAGA,EAAIwP,EAAYxP,IAC5B,GAAIuP,EAAKvP,KAAOsP,EAAKtP,GACjB,OAAO,EAEf,OAAO,CACX,C,eCRMyP,GAAoB,SAAC7b,GAAC,MAAK,iBAAiB+E,KAAK/E,EAAE,ECAnD8b,GAAoB,SAAC9b,GAAC,MAAK,aAAa+E,KAAK/E,EAAE,E,sBCHrD,SAAS+b,GAAcC,EAAKC,IACG,IAAvBD,EAAIlX,QAAQmX,IACZD,EAAIE,KAAKD,EACjB,CACA,SAASE,GAAWH,EAAKC,GACrB,IAAMG,EAAQJ,EAAIlX,QAAQmX,GACtBG,GAAS,GACTJ,EAAIK,OAAOD,EAAO,EAC1B,CCRwD,IAElDE,GAAmB,WACrB,cAAc,gBACV7e,KAAK8e,cAAgB,EACzB,CA+BC,OA/BA,4BACD,SAAI3I,GAAS,WAET,OADAmI,GAActe,KAAK8e,cAAe3I,GAC3B,kBAAMuI,GAAW,EAAKI,cAAe3I,EAAQ,CACxD,GAAC,oBACD,SAAOgB,EAAGC,EAAG2H,GACT,IAAMC,EAAmBhf,KAAK8e,cAAcjf,OAC5C,GAAKmf,EAEL,GAAyB,IAArBA,EAIAhf,KAAK8e,cAAc,GAAG3H,EAAGC,EAAG2H,QAG5B,IAAK,IAAIpQ,EAAI,EAAGA,EAAIqQ,EAAkBrQ,IAAK,CAKvC,IAAMwH,EAAUnW,KAAK8e,cAAcnQ,GACnCwH,GAAWA,EAAQgB,EAAGC,EAAG2H,EAC7B,CAER,GAAC,qBACD,WACI,OAAO/e,KAAK8e,cAAcjf,MAC9B,GAAC,mBACD,WACIG,KAAK8e,cAAcjf,OAAS,CAChC,KAAC,EAlCoB,GCIzB,SAASof,GAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC/D,CCHA,IAAMC,GAAU,SAACtf,GACb,OAAQuf,MAAMtW,WAAWjJ,GAC7B,EAMMwf,GAAW,WASb,WAAYC,GAAoB,WAAd1R,EAAU,UAAH,6CAAG,CAAC,GAAC,gBAK1B7N,KAAKwf,QAAU,QAMfxf,KAAKyf,UAAY,EAMjBzf,KAAK0f,YAAc,EAQnB1f,KAAK2f,kBAAmB,EAIxB3f,KAAK4f,OAAS,CAAC,EACf5f,KAAK6f,gBAAkB,SAACtd,GAAqB,IAAlBV,IAAS,UAAH,+CAC7B,EAAKqc,KAAO,EAAK3c,QACjB,EAAKA,QAAUgB,EAEf,IAAQud,EAAqBC,GAAAA,EAAAA,MAAdC,EAAcD,GAAAA,EAAAA,UACzB,EAAKL,cAAgBM,IACrB,EAAKP,UAAYK,EACjB,EAAKJ,YAAcM,EACnBC,GAAAA,GAAAA,WAAgB,EAAKC,wBAGrB,EAAKhC,OAAS,EAAK3c,SAAW,EAAKqe,OAAOO,QAC1C,EAAKP,OAAOO,OAAOC,OAAO,EAAK7e,SAG/B,EAAKqe,OAAOS,gBACZ,EAAKT,OAAOS,eAAeD,OAAO,EAAKtY,eAGvCjG,GAAU,EAAK+d,OAAOU,eACtB,EAAKV,OAAOU,cAAcF,OAAO,EAAK7e,QAE9C,EASAvB,KAAKkgB,sBAAwB,kBAAMD,GAAAA,GAAAA,WAAgB,EAAKM,cAAc,EAUtEvgB,KAAKugB,cAAgB,YAAY,EAATP,YACF,EAAKN,cACnB,EAAKxB,KAAO,EAAK3c,QACb,EAAKqe,OAAOS,gBACZ,EAAKT,OAAOS,eAAeD,OAAO,EAAKtY,eAGnD,EACA9H,KAAKwgB,aAAc,EACnBxgB,KAAKke,KAAOle,KAAKuB,QAAUge,EAC3Bvf,KAAK2f,iBAAmBP,GAAQpf,KAAKuB,SACrCvB,KAAKygB,MAAQ5S,EAAQ4S,KACzB,CAwNC,OAvND,iCAwCA,SAASC,GACL,OAAO1gB,KAAK2gB,GAAG,SAAUD,EAC7B,GAAC,gBACD,SAAGxK,EAAWwF,GAAU,WACf1b,KAAK4f,OAAO1J,KACblW,KAAK4f,OAAO1J,GAAa,IAAI2I,IAEjC,IAAM+B,EAAc5gB,KAAK4f,OAAO1J,GAAW2K,IAAInF,GAC/C,MAAkB,WAAdxF,EACO,WACH0K,IAKAX,GAAAA,GAAAA,MAAU,WACD,EAAKL,OAAOO,OAAOW,WACpB,EAAKC,MAEb,GACJ,EAEGH,CACX,GAAC,4BACD,WACI,IAAK,IAAMI,KAAiBhhB,KAAK4f,OAC7B5f,KAAK4f,OAAOoB,GAAeC,OAEnC,GACA,oBAKA,SAAOC,EAAeC,GAClBnhB,KAAKkhB,cAAgBA,EACrBlhB,KAAKmhB,kBAAoBA,CAC7B,GACA,iBAeA,SAAI5e,GAAkB,IAAfV,IAAS,UAAH,+CACJA,GAAW7B,KAAKkhB,cAIjBlhB,KAAKkhB,cAAc3e,EAAGvC,KAAK6f,iBAH3B7f,KAAK6f,gBAAgBtd,EAAGV,EAKhC,GAAC,6BACD,SAAgBqc,EAAM3c,EAASue,GAC3B9f,KAAKiH,IAAI1F,GACTvB,KAAKke,KAAOA,EACZle,KAAKyf,UAAYK,CACrB,GACA,kBAIA,SAAKvd,GACDvC,KAAK6f,gBAAgBtd,GACrBvC,KAAKke,KAAO3b,EACZvC,KAAK+gB,OACD/gB,KAAKmhB,mBACLnhB,KAAKmhB,mBACb,GACA,iBAOA,WACI,OAAOnhB,KAAKuB,OAChB,GACA,yBAGA,WACI,OAAOvB,KAAKke,IAChB,GACA,yBAOA,WAEI,OAAOle,KAAK2f,iBAEJV,GAAkBlW,WAAW/I,KAAKuB,SAC9BwH,WAAW/I,KAAKke,MAAOle,KAAKyf,WAClC,CACV,GACA,mBAYA,SAAM2B,GAAgB,WAElB,OADAphB,KAAK+gB,OACE,IAAIM,SAAQ,SAACC,GAChB,EAAKd,aAAc,EACnB,EAAK5c,UAAYwd,EAAeE,IAAY,KACxC,EAAK1B,OAAO2B,gBACZ,EAAK3B,OAAO2B,eAAenB,QAEnC,IAAGoB,MAAK,WACA,EAAK5B,OAAO6B,mBACZ,EAAK7B,OAAO6B,kBAAkBrB,SAElC,EAAKsB,gBACT,GACJ,GACA,kBAKA,WACQ1hB,KAAK4D,YACL5D,KAAK4D,UAAUmd,OACX/gB,KAAK4f,OAAO+B,iBACZ3hB,KAAK4f,OAAO+B,gBAAgBvB,UAGpCpgB,KAAK0hB,gBACT,GACA,yBAKA,WACI,QAAS1hB,KAAK4D,SAClB,GAAC,4BACD,WACI5D,KAAK4D,UAAY,IACrB,GACA,qBASA,WACI5D,KAAK4hB,iBACL5hB,KAAK+gB,OACD/gB,KAAKmhB,mBACLnhB,KAAKmhB,mBAEb,KAAC,EApTY,GAsTjB,SAASU,GAAYtC,EAAM1R,GACvB,OAAO,IAAIyR,GAAYC,EAAM1R,EACjC,CC/TA,IAAMiU,GAAgB,SAACvZ,EAAMwZ,GAAQ,OAAK,SAACxf,GACvC,OAAOS,QAASwG,EAASjH,IAAMgH,EAAiBjC,KAAK/E,IAAMA,EAAEqF,WAAWW,IACnEwZ,GAAY1iB,OAAOC,UAAUC,eAAeC,KAAK+C,EAAGwf,GAC7D,CAAC,EACKC,GAAa,SAACC,EAAOC,EAAOC,GAAK,OAAK,SAAC5f,GAAM,MAC/C,IAAKiH,EAASjH,GACV,OAAOA,EACX,MAAyBA,EAAE6f,MAAM/Y,GAAW,gBAArC8N,EAAC,KAAEC,EAAC,KAAE2H,EAAC,KAAE/V,EAAK,KACrB,OAAO,EAAP,cACKiZ,EAAQlZ,WAAWoO,KAAE,UACrB+K,EAAQnZ,WAAWqO,KAAE,UACrB+K,EAAQpZ,WAAWgW,KAAE,uBACL3b,IAAV4F,EAAsBD,WAAWC,GAAS,GAAC,CAE1D,CAAC,ECdKqZ,IAAU,kBACTxZ,GAAM,IACTL,UAAW,SAACjG,GAAC,OAAKqG,KAAKQ,MAHN,SAAC7G,GAAC,OAAKkG,EAAM,EAAG,IAAKlG,EAAE,CAGX+f,CAAa/f,GAAG,IAE3CggB,GAAO,CACTjb,KAAMwa,GAAc,MAAO,OAC3BhZ,MAAOkZ,GAAW,MAAO,QAAS,QAClCxZ,UAAW,gBAAGga,EAAG,EAAHA,IAAKC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,IAAE1Z,MAAO2Z,OAAO,IAAG,IAAC,QAAO,QACrDN,GAAQ7Z,UAAUga,GAClB,KACAH,GAAQ7Z,UAAUia,GAClB,KACAJ,GAAQ7Z,UAAUka,GAClB,KACAvZ,EAASH,EAAMR,UAAUma,IACzB,GAAG,GCYX,IAAMC,GAAM,CACRtb,KAAMwa,GAAc,KACpBhZ,MAhCJ,SAAkBvG,GACd,IAAIsgB,EAAI,GACJC,EAAI,GACJ1L,EAAI,GACJD,EAAI,GAmBR,OAjBI5U,EAAE1C,OAAS,GACXgjB,EAAItgB,EAAEwgB,UAAU,EAAG,GACnBD,EAAIvgB,EAAEwgB,UAAU,EAAG,GACnB3L,EAAI7U,EAAEwgB,UAAU,EAAG,GACnB5L,EAAI5U,EAAEwgB,UAAU,EAAG,KAInBF,EAAItgB,EAAEwgB,UAAU,EAAG,GACnBD,EAAIvgB,EAAEwgB,UAAU,EAAG,GACnB3L,EAAI7U,EAAEwgB,UAAU,EAAG,GACnB5L,EAAI5U,EAAEwgB,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACL1L,GAAKA,EACLD,GAAKA,GAEF,CACHqL,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAAS5L,EAAG,IAClBpO,MAAOmO,EAAI6L,SAAS7L,EAAG,IAAM,IAAM,EAE3C,EAII3O,UAAW+Z,GAAK/Z,WC/Bdya,GAAO,CACT3b,KAAMwa,GAAc,MAAO,OAC3BhZ,MAAOkZ,GAAW,MAAO,aAAc,aACvCxZ,UAAW,YAAwD,IAArD0a,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAS,IAAEpa,MAAO2Z,OAAO,IAAG,IAAC,EACxD,MAAQ,QACJ/Z,KAAKQ,MAAM8Z,GACX,KACApZ,GAAQtB,UAAUW,EAASga,IAC3B,KACArZ,GAAQtB,UAAUW,EAASia,IAC3B,KACAja,EAASH,EAAMR,UAAUma,IACzB,GACR,GCbEU,GAAQ,CACV/b,KAAM,SAAC/E,GAAC,OAAKggB,GAAKjb,KAAK/E,IAAMqgB,GAAItb,KAAK/E,IAAM0gB,GAAK3b,KAAK/E,EAAE,EACxDuG,MAAO,SAACvG,GACJ,OAAIggB,GAAKjb,KAAK/E,GACHggB,GAAKzZ,MAAMvG,GAEb0gB,GAAK3b,KAAK/E,GACR0gB,GAAKna,MAAMvG,GAGXqgB,GAAI9Z,MAAMvG,EAEzB,EACAiG,UAAW,SAACjG,GACR,OAAOiH,EAASjH,GACVA,EACAA,EAAEhD,eAAe,OACbgjB,GAAK/Z,UAAUjG,GACf0gB,GAAKza,UAAUjG,EAC7B,GCpBE+gB,GAAa,OACbC,GAAc,OASpB,SAASC,GAAoBjhB,GACR,kBAANA,IACPA,EAAI,GAAH,OAAMA,IACX,IAAM/E,EAAS,GACXimB,EAAY,EACZC,EAAa,EACXC,EAASphB,EAAE6f,MAAM9Y,GACnBqa,IACAF,EAAYE,EAAO9jB,OAGnB0C,EAAIA,EAAEwQ,QAAQzJ,EAAYga,IAC1B9lB,EAAOihB,KAAI,MAAXjhB,GAAM,QAASmmB,EAAOC,IAAIP,GAAMva,UAEpC,IAAM+a,EAAUthB,EAAE6f,MAAM/Y,GAMxB,OALIwa,IACAH,EAAaG,EAAQhkB,OACrB0C,EAAIA,EAAEwQ,QAAQ1J,EAAYka,IAC1B/lB,EAAOihB,KAAI,MAAXjhB,GAAM,QAASqmB,EAAQD,IAAI/a,EAAOC,UAE/B,CAAEtL,OAAAA,EAAQimB,UAAAA,EAAWC,WAAAA,EAAYI,UAAWvhB,EACvD,CACA,SAASuG,GAAMvG,GACX,OAAOihB,GAAoBjhB,GAAG/E,MAClC,CACA,SAASumB,GAAkB9U,GACvB,MAAyCuU,GAAoBvU,GAArDzR,EAAM,EAANA,OAAQimB,EAAS,EAATA,UAAWK,EAAS,EAATA,UACrBE,EAAYxmB,EAAOqC,OACzB,OAAO,SAAC0C,GAEJ,IADA,IAAI0hB,EAASH,EACJnV,EAAI,EAAGA,EAAIqV,EAAWrV,IAC3BsV,EAASA,EAAOlR,QAAQpE,EAAI8U,EAAYH,GAAaC,GAAa5U,EAAI8U,EAChEJ,GAAM7a,UAAUjG,EAAEoM,IAClBxF,EAAS5G,EAAEoM,KAErB,OAAOsV,CACX,CACJ,CACA,IAAMC,GAAuB,SAAC3hB,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAM4hB,GAAU,CAAE7c,KApDlB,SAAc/E,GACV,IAAItF,EAAIS,EACR,OAAQ2hB,MAAM9c,IACViH,EAASjH,MACwB,QAA9BtF,EAAKsF,EAAE6f,MAAM/Y,UAAgC,IAAPpM,OAAgB,EAASA,EAAG4C,SAAW,KAC3C,QAA9BnC,EAAK6E,EAAE6f,MAAM9Y,UAAgC,IAAP5L,OAAgB,EAASA,EAAGmC,SAAW,GAChF,CACZ,EA6CwBiJ,MAAAA,GAAOib,kBAAAA,GAAmBK,kBALlD,SAA2B7hB,GACvB,IAAM8hB,EAASvb,GAAMvG,GAErB,OADoBwhB,GAAkBxhB,EAC/B+hB,CAAYD,EAAOT,IAAIM,IAClC,GCnDMK,GAAc,IAAI7c,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS8c,GAAmBjiB,GACxB,MAAsBA,EAAEkiB,MAAM,GAAI,GAAG7a,MAAM,KAAI,gBAAxC9G,EAAI,KAAEhD,EAAK,KAClB,GAAa,gBAATgD,EACA,OAAOP,EACX,MAAiBzC,EAAMsiB,MAAM/Y,IAAe,GAArCR,GAAuC,aAAjC,GACb,IAAKA,EACD,OAAOtG,EACX,IAAMmH,EAAO5J,EAAMiT,QAAQlK,EAAQ,IAC/B6b,EAAeH,GAAYvd,IAAIlE,GAAQ,EAAI,EAG/C,OAFI+F,IAAW/I,IACX4kB,GAAgB,KACb5hB,EAAO,IAAM4hB,EAAehb,EAAO,GAC9C,CACA,IAAMib,GAAgB,oBAChBC,IAAS,kBACRT,IAAO,IACVC,kBAAmB,SAAC7hB,GAChB,IAAMsiB,EAAYtiB,EAAE6f,MAAMuC,IAC1B,OAAOE,EAAYA,EAAUjB,IAAIY,IAAoB9gB,KAAK,KAAOnB,CACrE,ICnBEuiB,IAAoB,kBACnB1a,IAAgB,IAEnBiZ,MAAAA,GACA0B,gBAAiB1B,GACjB2B,aAAc3B,GACd4B,KAAM5B,GACN6B,OAAQ7B,GAER8B,YAAa9B,GACb+B,eAAgB/B,GAChBgC,iBAAkBhC,GAClBiC,kBAAmBjC,GACnBkC,gBAAiBlC,GACjBuB,OAAAA,GACAY,aAAcZ,KAKZa,GAAsB,SAACnhB,GAAG,OAAKwgB,GAAkBxgB,EAAI,ECvB3D,SAAS8f,GAAkB9f,EAAKxE,GAC5B,IAAI4lB,EAAmBD,GAAoBnhB,GAI3C,OAHIohB,IAAqBd,KACrBc,EAAmBvB,IAEhBuB,EAAiBtB,kBAClBsB,EAAiBtB,kBAAkBtkB,QACnCsD,CACV,CCTA,IAAMuiB,GAAgB,SAACpjB,GAAC,OAAK,SAACgG,GAAI,OAAKA,EAAKjB,KAAK/E,EAAE,GCK7CqjB,GAAsB,CAAC/c,EAAQkB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT1C,KAAM,SAAC/E,GAAC,MAAW,SAANA,CAAY,EACzBuG,MAAO,SAACvG,GAAC,OAAKA,CAAC,IDObsjB,GAAyB,SAACtjB,GAAC,OAAKqjB,GAAoBE,KAAKH,GAAcpjB,GAAG,EEJ1EwjB,GAAa,GAAH,gBAAOH,IAAmB,CAAEvC,GAAOc,KAI7C6B,GAAgB,SAACzjB,GAAC,OAAKwjB,GAAWD,KAAKH,GAAcpjB,GAAG,ECM9D,SAAS0jB,GAAellB,EAAeiT,EAAYrN,GAC/C,IAAM9J,EAAQkE,EAAcyX,WAC5B,OAAOzE,GAAwBlX,EAAOmX,OAAuB5Q,IAAXuD,EAAuBA,EAAS9J,EAAM8J,OAf5F,SAAoB5F,GAChB,IAAMQ,EAAU,CAAC,EAEjB,OADAR,EAAcvD,OAAO+X,SAAQ,SAACzV,EAAOwE,GAAG,OAAM/C,EAAQ+C,GAAOxE,EAAMhB,KAAK,IACjEyC,CACX,CAWoG2kB,CAAWnlB,GAP/G,SAAqBA,GACjB,IAAMme,EAAW,CAAC,EAElB,OADAne,EAAcvD,OAAO+X,SAAQ,SAACzV,EAAOwE,GAAG,OAAM4a,EAAS5a,GAAOxE,EAAMgI,aAAa,IAC1EoX,CACX,CAG+HpX,CAAY/G,GAC3I,C,sCCRA,SAASolB,GAAeplB,EAAeuD,EAAKxE,GACpCiB,EAAcqlB,SAAS9hB,GACvBvD,EAAcslB,SAAS/hB,GAAK2C,IAAInH,GAGhCiB,EAAculB,SAAShiB,EAAKud,GAAY/hB,GAEhD,CACA,SAASymB,GAAUxlB,EAAeiT,GAC9B,IAAMwB,EAAWyQ,GAAellB,EAAeiT,GAC/C,EAAyDwB,EAAWzU,EAAcylB,qBAAqBhR,GAAU,GAAS,CAAC,EAAC,IAAtHC,cAAAA,OAAa,IAAG,GAAC,EAAC,EAAsBzW,GAAtB,EAAE0W,YAA0B,eAEpD,IAAK,IAAMpR,KADXtF,GAAS,kBAAKA,GAAWyW,GACC,CAEtB0Q,GAAeplB,EAAeuD,EADhBiQ,GAA6BvV,EAAOsF,IAEtD,CACJ,CAuEA,SAASmiB,GAAwBniB,EAAKoR,GAClC,GAAKA,EAGL,OADwBA,EAAWpR,IAAQoR,EAAoB,SAAKA,GAC7CgR,IAC3B,CCvGA,SAASC,GAAwB7mB,GAC7B,OAAOkD,QAAQ6E,EAAc/H,IAAUA,EAAM+gB,IACjD,CCFA,IACM+F,GAA+B,QAAU/T,GADjB,kBCF1BgU,GAAU,WAAc,EACxBC,GAAY,WAAc,ECK9B,IAAMC,GAAwB,SAACC,GAAO,OAAe,IAAVA,CAAc,ECNnDC,GAAwB,CAC1B1lB,SAAS,GCCP2lB,GAAe,SAACC,GAAM,OAAK,SAAC/mB,GAAC,OAAKA,GAAK,GAAM+mB,EAAO,EAAI/mB,GAAK,GAAK,EAAI+mB,EAAO,GAAK,EAAI/mB,KAAO,CAAC,GCA9FgnB,GAAgB,SAACD,GAAM,OAAK,SAAC/mB,GAAC,OAAK,EAAI+mB,EAAO,EAAI/mB,EAAE,GCCpDinB,GAAS,SAACjnB,GAAC,OAAKA,EAAIA,CAAC,EACrBknB,GAAUF,GAAcC,IACxBE,GAAYL,GAAaG,ICgBzBhT,GAAM,SAACqS,EAAMc,EAAIC,GAAQ,OAAMA,EAAWf,EAAOe,EAAWD,EAAKd,CAAI,ECpB3E,SAASgB,GAAStnB,EAAGunB,EAAGC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDxnB,EAAc,GAATunB,EAAIvnB,GAASwnB,EACzBA,EAAI,GACGD,EACPC,EAAI,EAAI,EACDxnB,GAAKunB,EAAIvnB,IAAM,EAAI,EAAIwnB,GAAK,EAChCxnB,CACX,CCHA,IAAMynB,GAAiB,SAACnB,EAAMc,EAAIjlB,GAC9B,IAAMulB,EAAWpB,EAAOA,EACxB,OAAO9d,KAAKmf,KAAKnf,KAAKD,IAAI,EAAGpG,GAAKilB,EAAKA,EAAKM,GAAYA,GAC5D,EACME,GAAa,CAACpF,GAAKL,GAAMU,IACzBgF,GAAe,SAAC1lB,GAAC,OAAKylB,GAAWlC,MAAK,SAACvd,GAAI,OAAKA,EAAKjB,KAAK/E,EAAE,GAAC,EACnE,SAAS2lB,GAAO7E,GACZ,IAAM9a,EAAO0f,GAAa5E,GAC1ByD,GAAU9jB,QAAQuF,GAAO,IAAF,OAAM8a,EAAK,yEAClC,IAAI8E,EAAQ5f,EAAKO,MAAMua,GAKvB,OAJI9a,IAAS0a,KAETkF,EDRR,SAAoB,GAAuC,IAArCjF,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWpa,EAAK,EAALA,MAC9Cka,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAMwE,EAAIvE,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC/iB,EAAI,EAAIgjB,EAAYuE,EAC1BnF,EAAMkF,GAAStnB,EAAGunB,EAAGzE,EAAM,EAAI,GAC/BT,EAAQiF,GAAStnB,EAAGunB,EAAGzE,GACvBR,EAAOgF,GAAStnB,EAAGunB,EAAGzE,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAK5Z,KAAKQ,MAAY,IAANoZ,GAChBC,MAAO7Z,KAAKQ,MAAc,IAARqZ,GAClBC,KAAM9Z,KAAKQ,MAAa,IAAPsZ,GACjB1Z,MAAAA,EAER,CCjBgBof,CAAWD,IAEhBA,CACX,CACA,IAAME,GAAW,SAAC3B,EAAMc,GACpB,IAAMc,EAAWJ,GAAOxB,GAClB6B,EAASL,GAAOV,GAChBgB,GAAU,UAAKF,GACrB,OAAO,SAAC/lB,GAKJ,OAJAimB,EAAQhG,IAAMqF,GAAeS,EAAS9F,IAAK+F,EAAO/F,IAAKjgB,GACvDimB,EAAQ/F,MAAQoF,GAAeS,EAAS7F,MAAO8F,EAAO9F,MAAOlgB,GAC7DimB,EAAQ9F,KAAOmF,GAAeS,EAAS5F,KAAM6F,EAAO7F,KAAMngB,GAC1DimB,EAAQxf,MAAQqL,GAAIiU,EAAStf,MAAOuf,EAAOvf,MAAOzG,GAC3CggB,GAAK/Z,UAAUggB,EAC1B,CACJ,EC9BA,SAASC,GAASjY,EAAQxR,GACtB,MAAsB,kBAAXwR,EACA,SAACjO,GAAC,OAAK8R,GAAI7D,EAAQxR,EAAQuD,EAAE,EAE/B8gB,GAAM/b,KAAKkJ,GACT6X,GAAS7X,EAAQxR,GAGjB0pB,GAAWlY,EAAQxR,EAElC,CACA,IAAM2pB,GAAW,SAACjC,EAAMc,GACpB,IAAMvD,GAAS,QAAIyC,GACb1C,EAAYC,EAAOpkB,OACnB+oB,EAAalC,EAAK9C,KAAI,SAACiF,EAAUla,GAAC,OAAK8Z,GAASI,EAAUrB,EAAG7Y,GAAG,IACtE,OAAO,SAACpM,GACJ,IAAK,IAAIoM,EAAI,EAAGA,EAAIqV,EAAWrV,IAC3BsV,EAAOtV,GAAKia,EAAWja,GAAGpM,GAE9B,OAAO0hB,CACX,CACJ,EACM6E,GAAY,SAACtY,EAAQxR,GACvB,IAAMilB,GAAS,kBAAKzT,GAAWxR,GACzB4pB,EAAa,CAAC,EACpB,IAAK,IAAMtkB,KAAO2f,OACM7gB,IAAhBoN,EAAOlM,SAAsClB,IAAhBpE,EAAOsF,KACpCskB,EAAWtkB,GAAOmkB,GAASjY,EAAOlM,GAAMtF,EAAOsF,KAGvD,OAAO,SAAC/B,GACJ,IAAK,IAAM+B,KAAOskB,EACd3E,EAAO3f,GAAOskB,EAAWtkB,GAAK/B,GAElC,OAAO0hB,CACX,CACJ,EACMyE,GAAa,SAAClY,EAAQxR,GACxB,IAAM+pB,EAAW5E,GAAQJ,kBAAkB/kB,GACrCgqB,EAAcxF,GAAoBhT,GAClCyY,EAAczF,GAAoBxkB,GAGxC,OAFuBgqB,EAAYvF,YAAcwF,EAAYxF,WACzDuF,EAAYtF,YAAcuF,EAAYvF,WAE/BrM,GAAKsR,GAASK,EAAYxrB,OAAQyrB,EAAYzrB,QAASurB,IAG9DlC,IAAQ,EAAM,mBAAF,OAAqBrW,EAAM,kBAAUxR,EAAM,6KAChD,SAACoB,GAAC,gBAAQA,EAAI,EAAIpB,EAASwR,EAAM,EAEhD,EC7CMiX,GAAW,SAACf,EAAMc,EAAI1nB,GACxB,IAAMopB,EAAmB1B,EAAKd,EAC9B,OAA4B,IAArBwC,EAAyB,GAAKppB,EAAQ4mB,GAAQwC,CACzD,ECNMC,GAAY,SAACzC,EAAMc,GAAE,OAAK,SAACpnB,GAAC,OAAKiU,GAAIqS,EAAMc,EAAIpnB,EAAE,GAqBvD,SAASgpB,GAAanF,EAAQoF,EAAMC,GAIhC,IAHA,IArBwB/mB,EAqBlBgnB,EAAS,GACTC,EAAeF,IArBJ,kBADO/mB,EAsB+B0hB,EAAO,IApBnDkF,GAEW,kBAAN5mB,EACR8gB,GAAM/b,KAAK/E,GACJ8lB,GAGAK,GAGN3qB,MAAMC,QAAQuE,GACZomB,GAEW,kBAANpmB,EACLumB,GAEJK,IAKDM,EAAYxF,EAAOpkB,OAAS,EACzB8O,EAAI,EAAGA,EAAI8a,EAAW9a,IAAK,CAChC,IAAI+a,EAAQF,EAAavF,EAAOtV,GAAIsV,EAAOtV,EAAI,IAC/C,GAAI0a,EAAM,CACN,IAAMM,EAAiB5rB,MAAMC,QAAQqrB,GAAQA,EAAK1a,GAAK0a,EACvDK,EAAQrS,GAAKsS,EAAgBD,EACjC,CACAH,EAAO9K,KAAKiL,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO5F,GAAqD,6DAAJ,CAAC,EAAC,IAAzCxb,MAAOqhB,OAAO,IAAG,GAAI,EAAET,EAAI,EAAJA,KAAMK,EAAK,EAALA,MACzDK,EAAcF,EAAMhqB,OAC1BinB,GAAUiD,IAAgB9F,EAAOpkB,OAAQ,wDACzCinB,IAAWuC,IAAStrB,MAAMC,QAAQqrB,IAASA,EAAKxpB,SAAWkqB,EAAc,EAAG,oIAExEF,EAAM,GAAKA,EAAME,EAAc,KAC/BF,GAAQ,QAAIA,GAAOG,UACnB/F,GAAS,QAAIA,GAAQ+F,WAEzB,IAAMT,EAASH,GAAanF,EAAQoF,EAAMK,GACpCD,EAAYF,EAAO1pB,OACnBoqB,EAAe,SAAC1nB,GAClB,IAAIoM,EAAI,EACR,GAAI8a,EAAY,EACZ,KAAO9a,EAAIkb,EAAMhqB,OAAS,KAClB0C,EAAIsnB,EAAMlb,EAAI,IADOA,KAKjC,IAAMub,EAAkBzC,GAASoC,EAAMlb,GAAIkb,EAAMlb,EAAI,GAAIpM,GACzD,OAAOgnB,EAAO5a,GAAGub,EACrB,EACA,OAAOJ,EACD,SAACvnB,GAAC,OAAK0nB,EAAaxhB,EAAMohB,EAAM,GAAIA,EAAME,EAAc,GAAIxnB,GAAG,EAC/D0nB,CACV,CCpEA,IAAME,GAAa,SAACvC,EAAGwC,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAMxC,GAAK,EAAMyC,EAAK,EAAMD,IAAOxC,EAAI,EAAMwC,GACrGxC,CAAC,EACC0C,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOtR,GACX,IAAMuR,EAAW,SAACC,GAAE,OArBxB,SAAyB9iB,EAAG+iB,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAvc,EAAI,EACR,IAEIsc,EAAWd,GADXe,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAO3iB,GAC7B,EACXgjB,EAAaE,EAGbH,EAAaG,QAEZtiB,KAAKuiB,IAAIF,GAAYX,MACxB3b,EAAI4b,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAI,EAE5D,OAAO,SAAC/C,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAIuC,GAAWU,EAASjD,GAAI8C,EAAKE,EAAI,CAC5E,CC7CA,IAAMS,GAAS,SAACjrB,GAAC,OAAK,EAAIwI,KAAK0iB,IAAI1iB,KAAK2iB,KAAKnrB,GAAG,EAC1CorB,GAAUpE,GAAciE,IACxBI,GAAYvE,GAAasE,ICDzBE,GAAUlB,GAAY,IAAM,KAAM,IAAM,KACxCmB,GAASvE,GAAcsE,IACvBE,GAAY1E,GAAayE,ICEzBE,GAAe,CACjBC,OAAQxS,GACR+N,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACA+D,OAAAA,GACAI,UAAAA,GACAD,QAAAA,GACAG,OAAAA,GACAC,UAAAA,GACAF,QAAAA,GACAK,WCjBe,SAAC3rB,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAMurB,GAAOvrB,GAAK,IAAO,EAAIwI,KAAKojB,IAAI,GAAI,IAAM5rB,EAAI,IAAI,GDmB3F6rB,GAA6B,SAACjY,GAChC,GAAIjW,MAAMC,QAAQgW,GAAa,CAE3B8S,GAAgC,IAAtB9S,EAAWnU,OAAc,2DACnC,eAAyBmU,EAAU,GACnC,OAAOwW,GADE,KAAI,KAAI,KAAI,KAEzB,CACK,MAA0B,kBAAfxW,GAEZ8S,QAAuC1jB,IAA7ByoB,GAAa7X,GAA2B,wBAAF,OAA0BA,EAAU,MAC7E6X,GAAa7X,IAEjBA,CACX,EACMkY,GAAgB,SAAC7C,GACnB,OAAOtrB,MAAMC,QAAQqrB,IAA4B,kBAAZA,EAAK,EAC9C,EEvBA,SAAS8C,GAAU,GAAyE,IAA5DC,EAAc,EAAzBD,UAAS,IAAkB9C,KAAAA,OAAI,IAAG,EAAA9B,GAAS,EAAE8E,EAAK,EAALA,MAAK,IAAEC,SAAAA,OAAQ,IAAG,MAAG,EACnFF,GAAiB,QAAIA,GAKrB,IAAMG,EAAkBL,GAAc7C,GAChCA,EAAKzF,IAAIqI,IACTA,GAA2B5C,GAK3B1b,EAAQ,CACV6e,MAAM,EACN1sB,MAAOssB,EAAe,IAKpBK,EAvBV,SAA8Bhc,EAAQ6b,GAClC,OAAO7b,EAAOmT,KAAI,SAAC8I,GAAC,OAAKA,EAAIJ,CAAQ,GACzC,CAqB0BK,CAGtBN,GAASA,EAAMxsB,SAAWusB,EAAevsB,OACnCwsB,EA/BV,SAAuB7uB,GACnB,IAAMwmB,EAAYxmB,EAAOqC,OACzB,OAAOrC,EAAOomB,KAAI,SAACgJ,EAAQje,GAAC,OAAW,IAANA,EAAUA,GAAKqV,EAAY,GAAK,CAAC,GACtE,CA6BU6I,CAAcT,GAAiBE,GACrC,SAASQ,IACL,OAAOlD,GAAY6C,EAAeL,EAAgB,CAC9C/C,KAAMtrB,MAAMC,QAAQuuB,GACdA,GAvCK/uB,EAwCS4uB,EAxCDjF,EAwCiBoF,EAvCrC/uB,EAAOomB,KAAI,kBAAMuD,GAAUI,EAAS,IAAE3I,OAAO,EAAGphB,EAAOqC,OAAS,MAD3E,IAAuBrC,EAAQ2pB,CA0C3B,CACA,IAAI8C,EAAe6C,IACnB,MAAO,CACH7O,KAAM,SAAC2J,GAGH,OAFAja,EAAM7N,MAAQmqB,EAAarC,GAC3Bja,EAAM6e,KAAO5E,GAAK0E,EACX3e,CACX,EACAof,WAAY,WACRX,EAAepC,UACfC,EAAe6C,GACnB,EAER,CCxDA,IAAME,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAW,GAA4D,IACxEC,EACAC,EAFwE,IAA1DjB,SAAAA,OAAQ,IAAG,MAAG,MAAEkB,OAAAA,OAAM,IAAG,MAAI,MAAEtO,SAAAA,OAAQ,IAAG,IAAC,MAAEuO,KAAAA,OAAI,IAAG,IAAC,EAGvE5G,GAAQyF,GAA0B,IAAdY,GAAoB,8CACxC,IAAIQ,EAAe,EAAIF,EAIvBE,EAAejlB,EAAM0kB,GAAYC,GAAYM,GAC7CpB,EAAW7jB,EAAMwkB,GAAaC,GAAaZ,EAAW,KAClDoB,EAAe,GAIfJ,EAAW,SAACK,GACR,IAAMC,EAAmBD,EAAeD,EAClC5N,EAAQ8N,EAAmBtB,EAC3BnV,EAAIyW,EAAmB1O,EACvB9H,EAAIyW,GAAgBF,EAAcD,GAClC3O,EAAInW,KAAKklB,KAAKhO,GACpB,OAAOkN,GAAW7V,EAAIC,EAAK2H,CAC/B,EACAwO,EAAa,SAACI,GACV,IACM7N,EADmB6N,EAAeD,EACPpB,EAC3ByB,EAAIjO,EAAQZ,EAAWA,EACvBnJ,EAAInN,KAAKojB,IAAI0B,EAAc,GAAK9kB,KAAKojB,IAAI2B,EAAc,GAAKrB,EAC5D0B,EAAIplB,KAAKklB,KAAKhO,GACdgD,EAAI+K,GAAgBjlB,KAAKojB,IAAI2B,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBX,GAAU,GAAK,EAAI,KACzCe,EAAIhY,GAAKiY,GAAMlL,CACtC,IAMAwK,EAAW,SAACK,GAGR,OAFU/kB,KAAKklB,KAAKH,EAAerB,KACxBqB,EAAezO,GAAYoN,EAAW,GACzCU,EACZ,EACAO,EAAa,SAACI,GAGV,OAFU/kB,KAAKklB,KAAKH,EAAerB,IACIA,EAAWA,GAAvCpN,EAAWyO,GAE1B,GAEJ,IACMA,EAmBV,SAAyBL,EAAUC,EAAYU,GAE3C,IADA,IAAIC,EAASD,EACJtf,EAAI,EAAGA,EAAIwf,GAAgBxf,IAChCuf,GAAkBZ,EAASY,GAAUX,EAAWW,GAEpD,OAAOA,CACX,CAzByBE,CAAgBd,EAAUC,EAD1B,EAAIjB,GAGzB,GADAA,GAAsB,IAClBjN,MAAMsO,GACN,MAAO,CACHU,UAAW,IACXC,QAAS,GACThC,SAAAA,GAIJ,IAAM+B,EAAYzlB,KAAKojB,IAAI2B,EAAc,GAAKF,EAC9C,MAAO,CACHY,UAAAA,EACAC,QAAwB,EAAfZ,EAAmB9kB,KAAKmf,KAAK0F,EAAOY,GAC7C/B,SAAAA,EAGZ,CACA,IAAM6B,GAAiB,GAQvB,SAASN,GAAgBF,EAAcD,GACnC,OAAOC,EAAe/kB,KAAKmf,KAAK,EAAI2F,EAAeA,EACvD,C,6CClFMa,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa5gB,EAAS+D,GAC3B,OAAOA,EAAK/O,MAAK,SAACyB,GAAG,YAAsBlB,IAAjByK,EAAQvJ,EAAkB,GACxD,CAwBA,IAAMoqB,GAAyB,EAI/B,SAASC,GAAO,GAAiD,IAA/CxC,EAAS,EAATA,UAAWyC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAchhB,GAAO,cACrD2C,EAAS2b,EAAU,GACnBntB,EAASmtB,EAAUA,EAAUtsB,OAAS,GAKpC8N,EAAQ,CAAE6e,MAAM,EAAO1sB,MAAO0Q,GACpC,EAnCJ,SAA0B3C,GACtB,IAAIihB,GAAgB,QAChB5P,SAAU,EACVmP,UAAW,IACXC,QAAS,GACTb,KAAM,EACNsB,wBAAwB,GACrBlhB,GAGP,IAAK4gB,GAAa5gB,EAAS2gB,KACvBC,GAAa5gB,EAAS0gB,IAAe,CACrC,IAAMS,EAAU3B,GAAWxf,IAC3BihB,GAAgB,0BACTA,GACAE,GAAO,IACV9P,SAAU,EACVuO,KAAM,KAEIsB,wBAAyB,CAC3C,CACA,OAAOD,CACX,CAasFG,CAAiBphB,GAA3FwgB,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASb,EAAI,EAAJA,KAAMvO,EAAQ,EAARA,SAAUoN,EAAQ,EAARA,SAAUyC,EAAsB,EAAtBA,uBAClDG,EAAgBC,GAChBC,EAAkBlQ,GAAaA,EAAW,IAAQ,EAChDwO,EAAeY,GAAW,EAAI1lB,KAAKmf,KAAKsG,EAAYZ,IAC1D,SAAS4B,IACL,IAAMC,EAAetwB,EAASwR,EACxB+e,EAAsB3mB,KAAKmf,KAAKsG,EAAYZ,GAAQ,IAQpD+B,EAAkB5mB,KAAKuiB,IAAImE,GAAgB,EAGjD,GAFAT,IAAcA,EAAYW,EAAkB,IAAO,GACnDZ,IAAcA,EAAYY,EAAkB,KAAQ,IAChD9B,EAAe,EAAG,CAClB,IAAM+B,EAAc5B,GAAgB0B,EAAqB7B,GAEzDwB,EAAgB,SAACtH,GACb,IAAM0F,EAAW1kB,KAAKklB,KAAKJ,EAAe6B,EAAsB3H,GAChE,OAAQ5oB,EACJsuB,IACO8B,EACC1B,EAAe6B,EAAsBD,GACrCG,EACA7mB,KAAK0iB,IAAImE,EAAc7H,GACvB0H,EAAe1mB,KAAK8mB,IAAID,EAAc7H,GACtD,CACJ,MACK,GAAqB,IAAjB8F,EAELwB,EAAgB,SAACtH,GAAC,OAAK5oB,EACnB4J,KAAKklB,KAAKyB,EAAsB3H,IAC3B0H,GACIF,EAAkBG,EAAsBD,GACrC1H,EAAE,MAEjB,CAED,IAAM+H,EAAoBJ,EAAsB3mB,KAAKmf,KAAK2F,EAAeA,EAAe,GACxFwB,EAAgB,SAACtH,GACb,IAAM0F,EAAW1kB,KAAKklB,KAAKJ,EAAe6B,EAAsB3H,GAE1DgI,EAAWhnB,KAAKF,IAAIinB,EAAoB/H,EAAG,KACjD,OAAQ5oB,EACHsuB,IACK8B,EACE1B,EAAe6B,EAAsBD,GACrC1mB,KAAKinB,KAAKD,GACVD,EACIL,EACA1mB,KAAKknB,KAAKF,IAClBD,CACZ,CACJ,CACJ,CAEA,OADAN,IACO,CACHpR,KAAM,SAAC2J,GACH,IAAMrmB,EAAU2tB,EAActH,GAC9B,GAAKmH,EAsBDphB,EAAM6e,KAAO5E,GAAK0E,MAtBO,CACzB,IAAIpY,EAAkBkb,EACtB,GAAU,IAANxH,EAMA,GAAI8F,EAAe,EAAG,CAClB,IAAMqC,EAAQnnB,KAAKD,IAAI,EAAGif,EAAI8G,IAC9Bxa,EAAkB+K,GAAkB1d,EAAU2tB,EAAca,GAAQnI,EAAImI,EAC5E,MAEI7b,EAAkB,EAG1B,IAAM8b,EAA2BpnB,KAAKuiB,IAAIjX,IAAoB2a,EACxDoB,EAA+BrnB,KAAKuiB,IAAInsB,EAASuC,IAAYqtB,EACnEjhB,EAAM6e,KACFwD,GAA4BC,CACpC,CAKA,OADAtiB,EAAM7N,MAAQ6N,EAAM6e,KAAOxtB,EAASuC,EAC7BoM,CACX,EACAof,WAAY,WACRqC,GAAmBA,EAAgB,MAChB,CAACpwB,EAAQwR,GAA3BA,EAAM,KAAExR,EAAM,KACfqwB,GACJ,EAER,CACAV,GAAOuB,mBAAqB,SAAC/Y,EAAGC,GAAC,MAAkB,kBAAND,GAA+B,kBAANC,CAAc,EACpF,IAAM+X,GAAO,SAACgB,GAAE,OAAK,CAAC,E,8JCtIhBC,GAAQ,CACVC,MCPJ,SAAe,GAMmF,QAAlGlE,UAAAA,OAAS,IAAG,GAAC,GAAE,MAAEjN,SAAAA,OAAQ,IAAG,IAAC,MAAEoR,MAAAA,OAAK,IAAG,KAAG,MAAEC,aAAAA,OAAY,IAAG,MAAG,MAAE3B,UAAAA,OAAS,IAAG,KAAG,EAAE4B,EAAY,EAAZA,aACvEhgB,EAAS2b,EAAU,GAKnBxe,EAAQ,CAAE6e,MAAM,EAAO1sB,MAAO0Q,GAChCigB,EAAYH,EAAQpR,EAClBwR,EAAQlgB,EAASigB,EACjBzxB,OAA0BoE,IAAjBotB,EAA6BE,EAAQF,EAAaE,GAOjE,OAFI1xB,IAAW0xB,IACXD,EAAYzxB,EAASwR,GAClB,CACHyN,KAAM,SAAC2J,GACH,IAAM9H,GAAS2Q,EAAY7nB,KAAKklB,KAAKlG,EAAI2I,GAGzC,OAFA5iB,EAAM6e,OAAS1M,EAAQ8O,GAAa9O,GAAS8O,GAC7CjhB,EAAM7N,MAAQ6N,EAAM6e,KAAOxtB,EAASA,EAAS8gB,EACtCnS,CACX,EACAof,WAAY,WAAQ,EAE5B,EDvBIZ,UAAWA,GACXwE,MAAOxE,GACPwC,OAAAA,IAEJ,SAASiC,GAAYC,EAASvE,GAC1B,OAAOuE,EAAUvE,GAD2B,UAAH,6CAAG,EAEhD,CASA,IAAMwE,GAAY,SAACnvB,GACf,IAAMovB,EAAgB,SAAH,OAAMjR,EAAK,EAALA,MAAK,OAAOne,EAAOme,EAAM,EAClD,MAAO,CACHrd,MAAO,kBAAMwd,GAAAA,GAAAA,OAAY8Q,GAAe,EAAK,EAC7ChQ,KAAM,kBAAMiQ,GAAAA,GAAAA,OAAkBD,EAAc,EAEpD,EACA,SAASnuB,GAAQ,GAAqO,IAE9OquB,EAKAC,EAPW5E,EAAQ,EAARA,SAAQ,IAAE6E,OAAAA,OAAM,IAAG,EAAAL,GAAS,MAAED,QAAAA,OAAO,IAAG,IAAC,MAAEO,OAAQC,OAAS,IAAG,IAAC,MAAEC,WAAAA,OAAU,IAAG,SAAM,MAAEC,YAAAA,OAAW,IAAG,IAAC,EAAaC,EAAW,EAAtBrF,UAAS,IAAesF,SAAAA,OAAQ,IAAG,GAAI,EAAEC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,IAAEvpB,KAAAA,OAAI,IAAG,cAAW,EAAKsF,GAAO,cACxOkkB,EAAiBlB,EAEnBmB,EAAc,EACdC,EAAmB3F,EACnB4F,GAAa,EACbC,GAAoB,EAElBC,EAAWhC,GAAMoB,EAAY3xB,OAAS,EAAI,YAAc0I,IAAS4jB,GACjE3b,EAASghB,EAAY,GACrBxyB,EAASwyB,EAAYA,EAAY3xB,OAAS,GAC5C8N,EAAQ,CAAE6e,MAAM,EAAO1sB,MAAO0Q,GAK1B0f,EAAuBkC,EAAvBlC,mBACJA,GAAsBA,EAAmB1f,EAAQxR,KACjDkyB,EAAwBtH,GAAY,CAAC,EAAG,KAAM,CAACpZ,EAAQxR,GAAS,CAC5DyJ,OAAO,IAEX+oB,EAAc,CAAC,EAAG,MAEtB,IAAM5tB,EAAYwuB,GAAS,kBACpBvkB,GAAO,IACVye,SAAAA,EACAH,UAAWqF,KAEf,SAASJ,IACLY,IACmB,YAAfV,EAEAT,EA/CZ,SAAwBA,GAA4D,IAAnDvE,EAAW,UAAH,6CAAG,EAAG+F,EAAQ,UAAH,6CAAG,EACnD,OAD0E,UAAH,+CAGjE/F,GAAYuE,EAAUvE,GAAY+F,EADlCzB,GAAYtE,GAAYuE,EAASvE,EAAU+F,EAErD,CA2CsBC,CAAezB,EAASoB,EAAkBV,EADpDY,EAAoBH,EAAc,IAAM,IAIxCnB,EAAUD,GAAYC,EAASoB,EAAkBV,GAC9B,WAAfD,GACA1tB,EAAUmpB,cAElBmF,GAAa,EACbL,GAAYA,GAChB,CAKA,SAASlwB,EAAOme,GACPqS,IACDrS,GAASA,GACb+Q,GAAW/Q,EACNoS,IACDvkB,EAAQ/J,EAAUqa,KAAKrV,KAAKD,IAAI,EAAGkoB,IAC/BK,IACAvjB,EAAM7N,MAAQoxB,EAAsBvjB,EAAM7N,QAC9CoyB,EAAaC,EAAoBxkB,EAAM6e,KAAOqE,GAAW,GAE7DiB,GAAYA,EAASnkB,EAAM7N,OACvBoyB,IACoB,IAAhBF,IACAC,OACyB7uB,IAArB6uB,EAAiCA,EAAmBpB,GAExDmB,EAAcX,EAxE9B,SAA+BR,EAASvE,EAAU+F,EAAOF,GACrD,OAAOA,EAAoBtB,GAAWvE,EAAW+F,EAAQxB,IAAYwB,CACzE,CAuEgBE,CAAsB1B,EAASoB,EAAkBV,EAAaY,IAAsBf,KApB5FH,GAAkBA,EAAelQ,OACjC6Q,GAAcA,KAyBlB,CAOA,OADAH,IAJIC,GAAUA,KACVT,EAAiBE,EAAOxvB,IACTc,SAGZ,CACHse,KAAM,WACF4Q,GAAUA,IACVV,GAAkBA,EAAelQ,MACrC,EAgBIyR,gBAAY5K,GACZiJ,EAAUkB,EACVpwB,EAAOimB,EACX,EAMA6K,OAAQ,SAAC7K,GACLiJ,EAAUkB,EACV,IAAMW,EAAmBpG,GAAgC,kBAAbA,EACtC1jB,KAAKD,IAAe,GAAX2jB,EAAgB,IACzB,GACFqG,EAAgB,EAEpB,IADAhxB,EAAO,GACAgxB,GAAiB/K,GAAG,CACvB,IAAMgL,EAAYhL,EAAI+K,EACtBhxB,EAAOiH,KAAKF,IAAIkqB,EAAWF,IAC3BC,GAAiBD,CACrB,CACA,OAAO/kB,CACX,EAER,CEjJA,IAAMklB,GAAsB,SAAH,uBAAK1b,EAAC,KAAEC,EAAC,KAAE2H,EAAC,KAAEgP,EAAC,kCAAsB5W,EAAC,aAAKC,EAAC,aAAK2H,EAAC,aAAKgP,EAAC,MAC3E+E,GAAuB,CACzBhH,OAAQ,SACRzC,KAAM,OACNhC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACX8D,OAAQwH,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CrH,QAASqH,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1ClH,OAAQkH,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDnH,QAASmH,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASE,GAAwB5L,GAC7B,GAAKA,EAEL,OAAOppB,MAAMC,QAAQmpB,GACf0L,GAAoB1L,GACpB2L,GAAqB3L,EAC/B,CCvBA,IAAM6L,GAAe,CACjBC,MAAO,kBAAM5zB,OAAOE,eAAeC,KAAK0zB,QAAQ5zB,UAAW,UAAU,GAEnE6zB,GAAU,CAAC,EACXC,GAAW,CAAC,EAClB,eAIIA,GAAS9uB,GAAO,WAGZ,YAFqBlB,IAAjB+vB,GAAQ7uB,KACR6uB,GAAQ7uB,GAAO0uB,GAAa1uB,MACzB6uB,GAAQ7uB,EACnB,CACJ,EANA,IAAK,IAAMA,MAAO0uB,GAAY,O,iCCExBK,GAAoB,IAAI3rB,IAAI,CAAC,YAM7B4rB,GAAc,GACpB,SAASC,GAA2BzzB,EAAO0zB,EAAW,GAAU,EAAR1B,SAAoC,IAA1BF,EAAU,EAAVA,WAAe/jB,GAAO,cAMpF,KAL+BulB,GAASH,SACpCI,GAAkBrsB,IAAIwsB,KACrB3lB,EAAQ0jB,aACc,WAAvB1jB,EAAQyjB,YACY,IAApBzjB,EAAQygB,SAER,OAAO,EACX,IFzB4BnH,EEyBtBgF,EAAiDte,EAAjDse,UAAS,EAAwCte,EAAtCye,SAAAA,OAAQ,IAAG,MAAG,IAAwBze,EAAtBgjB,QAAAA,OAAO,IAAG,IAAC,EAAExH,EAASxb,EAATwb,KAI9C,GAAqB,WAAjBxb,EAAQtF,UF7BgB4e,EE6B6BtZ,EAAQwb,OF3B7DtrB,MAAMC,QAAQmpB,IACK,kBAAXA,GAAuB2L,GAAqB3L,IE0BgB,CAKpE,GAAItZ,EAAQujB,SAAWqC,IACnB,OASJ,IARA,IAAMC,EAAkB9wB,IAAQ,kBAAKiL,GAAO,IAAEgjB,QAAS,KACnDljB,EAAQ,CAAE6e,MAAM,EAAO1sB,MAAOqsB,EAAU,IACtCwH,EAAwB,GAK1B/L,EAAI,GACAja,EAAM6e,MAAQ5E,EAAI,KACtBja,EAAQ+lB,EAAgBjB,OAAO7K,GAC/B+L,EAAsBlV,KAAK9Q,EAAM7N,OACjC8nB,GAAK0L,GAETnH,EAAYwH,EACZrH,EAAW1E,EAAI0L,GACfjK,EAAO,QACX,CACA,IAAMzlB,ECnDV,SAAsBqP,EAASugB,EAAWrH,GAAwF,+DAAJ,CAAC,EAAC,IAAzEkG,MAAAA,OAAK,IAAG,IAAC,EAAE/F,EAAQ,EAARA,SAAQ,IAAE8E,OAAAA,OAAM,IAAG,IAAC,MAAEE,WAAAA,OAAU,IAAG,SAAM,EAAEjI,EAAI,EAAJA,KAAMgD,EAAK,EAALA,MAC/G,OAAOpZ,EAAQrQ,SAAO,gBAAI4wB,EAAYrH,IAAS,mBAAUE,GAAK,GAAI,CAC9DgG,MAAAA,EACA/F,SAAAA,EACAnF,OAAQ4L,GAAwB1J,GAChCpE,KAAM,OACN2O,WAAYxC,EAAS,EACrByC,UAA0B,YAAfvC,EAA2B,YAAc,UAE5D,CD0CsBwC,CAAah0B,EAAM2gB,MAAMlf,QAASiyB,EAAWrH,GAAW,kBACnEte,GAAO,IACVwkB,OAAQxB,EACRvE,SAAAA,EASAjD,KAAMA,KAkBV,OARAzlB,EAAUmwB,SAAW,WACjBj0B,EAAMmH,IE5Ed,SAA0BklB,EAAW,GAAiC,IAA/BiF,EAAM,EAANA,OAAM,IAAEE,WAI3C,OAAOnF,EAHOiF,GAAyB,eADc,IAAG,SAAM,IACbA,EAAS,IAAM,EAC1D,EACAjF,EAAUtsB,OAAS,EAE7B,CFuEkBm0B,CAAiB7H,EAAWte,IACtCoS,GAAAA,GAAAA,QAAY,kBAAMrc,EAAUqwB,QAAQ,IACpCrC,GAAcA,GAClB,EAIO,CACCY,kBACA,OAAO5uB,EAAU4uB,aAAe,CACpC,EACIA,gBAAY5K,GACZhkB,EAAU4uB,YAAc5K,CAC5B,EACA7G,KAAM,WASF,IAAQyR,EAAgB5uB,EAAhB4uB,YACR,GAAIA,EAAa,CACb,IAAMkB,EAAkB9wB,IAAQ,kBAAKiL,GAAO,IAAE4jB,UAAU,KACxD3xB,EAAMo0B,gBAAgBR,EAAgBjB,OAAOD,EAAcc,IAAaxzB,MAAO4zB,EAAgBjB,OAAOD,GAAa1yB,MAAOwzB,GAC9H,CACArT,GAAAA,GAAAA,QAAY,kBAAMrc,EAAUqwB,QAAQ,GACxC,EAER,CGtGA,SAAS5B,GAAM3W,EAAUyY,GACrB,IAAM1xB,EAAQ2xB,YAAYC,MACpBC,EAAe,SAAfA,EAAY,GAAsB,IAC9BzD,EADuB,EAAT7Q,UACQvd,EACxBouB,GAAWsD,IACXnD,GAAAA,GAAAA,KAAgBsD,GAChB5Y,EAASmV,EAAUsD,GAE3B,EAEA,OADAlU,GAAAA,GAAAA,KAAUqU,GAAc,GACjB,kBAAMtD,GAAAA,GAAAA,KAAgBsD,EAAa,CAC9C,CCdA,SAASC,GAAuB,GAA+C,IAA7CpI,EAAS,EAATA,UAAW0E,EAAO,EAAPA,QAASiB,EAAQ,EAARA,SAAUF,EAAU,EAAVA,WACtD4C,EAAW,WACb1C,GAAYA,EAAS3F,EAAUA,EAAUtsB,OAAS,IAClD+xB,GAAcA,GAClB,EACA,OAAOf,EAAU,CAAE9P,KAAMsR,GAAMmC,GAAW3D,IAAa2D,GAC3D,CCRA,IAAMC,GAAoB,WAAH,MAAU,CAC7BlsB,KAAM,SACN8lB,UAAW,IACXC,QAAS,GACTO,UAAW,GACd,EACK6F,GAAyB,SAAC11B,GAAM,MAAM,CACxCuJ,KAAM,SACN8lB,UAAW,IACXC,QAAoB,IAAXtvB,EAAe,EAAI4J,KAAKmf,KAAK,KAAO,GAC7C8G,UAAW,GACd,EACK8F,GAAc,WAAH,MAAU,CACvBpsB,KAAM,YACN8gB,KAAM,SACNiD,SAAU,GACb,EACKsI,GAAsB,CACxBrsB,KAAM,YACN+jB,SAAU,IAERuI,GAAqB,CACvB7sB,EAAGysB,GACHxsB,EAAGwsB,GACHvsB,EAAGusB,GACHtoB,OAAQsoB,GACRroB,QAASqoB,GACTpoB,QAASooB,GACTnoB,QAASmoB,GACTloB,OAAQmoB,GACRloB,OAAQkoB,GACRzrB,MAAOyrB,GACPxnB,QAASynB,GACT5P,gBAAiB4P,GACjBtR,MAAOsR,GACPzrB,QAASwrB,IAEPI,GAAuB,SAACC,EAAU,GAAkB,IAAhB5I,EAAS,EAATA,UACtC,OAAIA,EAAUtsB,OAAS,EACZ+0B,IAGSC,GAAmBE,IAAaF,GAAmB3rB,SACpDijB,EAAU,GAEjC,EClCM6I,GAAe,SAAC1wB,EAAKxE,GAEvB,MAAY,WAARwE,MAKiB,kBAAVxE,IAAsB/B,MAAMC,QAAQ8B,OAE1B,kBAAVA,IACPqkB,GAAQ7c,KAAKxH,IACZA,EAAM8H,WAAW,SAK1B,E,8HCjBA,SAASqtB,GAAOn1B,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtBiJ,WAAWjJ,KACa,IAAxBA,EAAMuH,QAAQ,IAC1B,CACA,SAAS6tB,GAAYC,GACjB,MAAoC,kBAAtBA,EACR,EACA/Q,GAAkB,GAAI+Q,EAChC,CACA,SAASC,GAAmB1f,EAAYpR,GACpC,OAAOoR,EAAWpR,IAAQoR,EAAoB,SAAKA,CACvD,CCXA,IAAM2f,GAA6B,SAAC7B,EAAW1zB,EAAOd,GAA4B,IAApB0W,EAAa,UAAH,6CAAG,CAAC,EACxE,OAAO,SAACkc,GACJ,IAAM0D,EAAkBF,GAAmB1f,EAAY8d,IAAc,CAAC,EAMhEnB,EAAQiD,EAAgBjD,OAAS3c,EAAW2c,OAAS,EAK3D,EAAsB3c,EAAhBmb,QAAAA,OAAO,IAAG,IAAC,EACjBA,GAAoB9J,GAAsBsL,GAC1C,IAAMlG,ECvBd,SAAsBrsB,EAAO0zB,EAAWx0B,EAAQ0W,GAC5C,IAAM6f,EAAqBP,GAAaxB,EAAWx0B,GAC/CwR,OAA6BpN,IAApBsS,EAAWgR,KAAqBhR,EAAWgR,KAAO5mB,EAAMhB,MAmBrE,MAlBe,SAAX0R,GAAqB+kB,GAAwC,kBAAXv2B,EAKlDwR,EAAS4T,GAAkBoP,EAAWx0B,GAEjCi2B,GAAOzkB,IAA6B,kBAAXxR,EAC9BwR,EAAS0kB,GAAYl2B,IAEfjB,MAAMC,QAAQgB,IACpBi2B,GAAOj2B,IACW,kBAAXwR,IACPxR,EAASk2B,GAAY1kB,IAKrBzS,MAAMC,QAAQgB,IAKI,OAAdA,EAAO,KACPA,EAAO,GAAKwR,GAETxR,GAGA,CAACwR,EAAQxR,EAExB,CDX0Bw2B,CAAa11B,EAAO0zB,EAAWx0B,EAAQs2B,GAMnDG,EAAiBtJ,EAAU,GAC3BuJ,EAAiBvJ,EAAUA,EAAUtsB,OAAS,GAC9C81B,EAAqBX,GAAaxB,EAAWiC,GAC7CF,EAAqBP,GAAaxB,EAAWkC,GACnD7O,GAAQ8O,IAAuBJ,EAAoB,6BAAF,OAA+B/B,EAAS,kBAAUiC,EAAc,iBAASC,EAAc,cAAMD,EAAc,sEAA8DA,EAAc,qCAA6BC,EAAc,+BACnR,IAAI7nB,GAAU,gBACVse,UAAAA,EACAjN,SAAUpf,EAAMgI,eACbwtB,GAAe,IAClBzE,QAAAA,EACAiB,SAAU,SAACvvB,GACPzC,EAAMmH,IAAI1E,GACV+yB,EAAgBxD,UAAYwD,EAAgBxD,SAASvvB,EACzD,EACAqvB,WAAY,WACRA,IACA0D,EAAgB1D,YAAc0D,EAAgB1D,YAClD,IAEJ,IAAK+D,IACAJ,GACDtO,GAAsB1lB,UACG,IAAzB+zB,EAAgB/sB,KAKhB,OAAOgsB,GAAuB1mB,GAE7B,GAA6B,YAAzBynB,EAAgB/sB,KAKrB,OE/DZ,SAAiB,GAAuL,IAEhMqtB,EAFWzJ,EAAS,EAATA,UAAS,IAAEjN,SAAAA,OAAQ,IAAG,IAAC,EAAExW,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAG,IAAE2nB,MAAAA,OAAK,IAAG,KAAG,MAAEC,aAAAA,OAAY,IAAG,MAAG,MAAEsF,gBAAAA,OAAe,IAAG,MAAG,MAAEC,cAAAA,OAAa,IAAG,KAAE,MAAElH,UAAAA,OAAS,IAAG,IAAC,EAAE4B,EAAY,EAAZA,aAAcW,EAAM,EAANA,OAAQW,EAAQ,EAARA,SAAUF,EAAU,EAAVA,WAAYD,EAAM,EAANA,OACnLnhB,EAAS2b,EAAU,GAEzB,SAAS4J,EAAcxzB,GACnB,YAAgBa,IAARsF,GAAqBnG,EAAImG,QAAiBtF,IAARuF,GAAqBpG,EAAIoG,CACvE,CACA,SAASqtB,EAAoBzzB,GACzB,YAAYa,IAARsF,EACOC,OACCvF,IAARuF,GAEGC,KAAKuiB,IAAIziB,EAAMnG,GAAKqG,KAAKuiB,IAAIxiB,EAAMpG,GAD/BmG,EAC0CC,CACzD,CACA,SAASyY,EAAevT,GACpB+nB,GAAoBA,EAAiB7U,OACrC6U,EAAmBhzB,IAAQ,gBACvBupB,UAAW,CAAC,EAAG,GACfjN,SAAU,GACPrR,GAAO,IACVsjB,OAAAA,EACAW,SAAU,SAACvvB,GACPuvB,GAAYA,EAASvvB,GACrBsL,EAAQikB,UAAYjkB,EAAQikB,SAASvvB,EACzC,EACAqvB,WAAAA,EACAD,OAAAA,IAER,CACA,SAASsE,EAAYpoB,GACjBuT,GAAe,QACX7Y,KAAM,SACN8lB,UAAWwH,EACXvH,QAASwH,EACTlH,UAAAA,GACG/gB,GAEX,CACA,GAAIkoB,EAAcvlB,GAEdylB,EAAY,CACR/W,SAAAA,EACAiN,UAAW,CAAC3b,EAAQwlB,EAAoBxlB,UAG3C,CASD,IAAIxR,EAASsxB,EAAQpR,EAAW1O,EACJ,qBAAjBggB,IACPxxB,EAASwxB,EAAaxxB,IAC1B,IAEIkf,EACA3c,EAHE20B,EAAWF,EAAoBh3B,GAC/Bm3B,EAAUD,IAAaxtB,GAAO,EAAI,EAYxC0Y,EAAe,CACX7Y,KAAM,QACN4jB,UAAW,CAAC3b,EAAQ,GACpB0O,SAAAA,EACAqR,aAAAA,EACAD,MAAAA,EACA1B,UAAAA,EACA4B,aAAAA,EACAsB,SAAUiE,EAAc/2B,GAjBN,SAACuD,GACnB2b,EAAO3c,EACPA,EAAUgB,EACV2c,EAAWD,GAAkB1c,EAAI2b,EAAM6B,GAAAA,EAAAA,QACtB,IAAZoW,GAAiB5zB,EAAI2zB,IACR,IAAbC,GAAkB5zB,EAAI2zB,IACvBD,EAAY,CAAE9J,UAAW,CAAC5pB,EAAG2zB,GAAWhX,SAAAA,GAEhD,OASsD9b,GAE1D,CACA,MAAO,CACH2d,KAAM,kBAAM6U,GAAoBA,EAAiB7U,MAAM,EAE/D,CFpBmBqV,CAAQvoB,GA0BnB,GDtFR,SAA6B,GAAM,EAAJwoB,KAAmB,EAAbhE,MAA4B,EAAbiE,cAA8B,EAAfC,gBAAiC,EAAhBC,iBAAwB,EAANpF,OAAkB,EAAVE,WAAuB,EAAXC,YAAiB,EAAJ7K,KAAa,EAAPmK,QAA0B,IAAdnb,GAAU,cAC/J,QAASrW,OAAOuS,KAAK8D,GAAY7V,MACrC,CCgEa42B,CAAoBnB,KACrBznB,GAAU,kBACHA,GACAinB,GAAqBtB,EAAW3lB,KAQvCA,EAAQye,WACRze,EAAQye,SAAWvF,GAAsBlZ,EAAQye,WAEjDze,EAAQ0jB,cACR1jB,EAAQ0jB,YAAcxK,GAAsBlZ,EAAQ0jB,cAKpDzxB,EAAM2gB,OACN3gB,EAAM2gB,MAAMlf,mBAAmBm1B,cAC9B52B,EAAM2gB,MAAMjI,WAAWsZ,SAAU,CAClC,IAAM6E,EAAuBpD,GAA2BzzB,EAAO0zB,EAAW3lB,GAC1E,GAAI8oB,EACA,OAAOA,CACf,CAIA,OAAO/zB,GAAQiL,EACnB,CACJ,E,kCG/EA,SAAS+oB,GAAe71B,EAAe81B,GAAuB,IAAdhpB,EAAU,UAAH,6CAAG,CAAC,EACjD2H,EAAWyQ,GAAellB,EAAe81B,EAAShpB,EAAQlH,QACgB,GAAd6O,GAAY,CAAC,GAAzEE,WAAAA,OAAU,IAAG,EAAA3U,EAAc+zB,wBAA0B,CAAC,EAAC,EACzDjnB,EAAQipB,qBACRphB,EAAa7H,EAAQipB,oBAMzB,IAAMC,EAAevhB,EACf,kBAAMwhB,GAAcj2B,EAAeyU,EAAU3H,EAAQ,EACrD,kBAAMwT,QAAQC,SAAS,EAKvB2V,EAAqBl2B,EAAcm2B,iBAAmBn2B,EAAcm2B,gBAAgB9rB,KACpF,WAAsB,IAArB+rB,EAAe,UAAH,6CAAG,EACd,EAAkEzhB,EAAU,IAApE4gB,cAAAA,OAAa,IAAG,IAAC,EAAEC,EAAe,EAAfA,gBAAiBC,EAAgB,EAAhBA,iBAC5C,OA+DZ,SAAyBz1B,EAAe81B,GAAgF,IAAvEP,EAAgB,UAAH,6CAAG,EAAGC,EAAkB,UAAH,6CAAG,EAAGC,EAAmB,UAAH,6CAAG,EAAG3oB,EAAO,uCAC5GupB,EAAa,GACbC,GAAsBt2B,EAAcm2B,gBAAgB9rB,KAAO,GAAKmrB,EAChEe,EAA+C,IAArBd,EAC1B,WAAM,OAAD,UAAH,6CAAG,GAAUD,CAAe,EAC9B,WAAM,OAAKc,GAAN,UAAH,6CAAG,GAA+Bd,CAAe,EAUzD,OATAx4B,MAAM2oB,KAAK3lB,EAAcm2B,iBACpBK,KAAKC,IACLjiB,SAAQ,SAAC6D,EAAOzK,GACjByK,EAAMgH,OAAO,iBAAkByW,GAC/BO,EAAW3Y,KAAKmY,GAAexd,EAAOyd,GAAS,kBACxChpB,GAAO,IACVwkB,MAAOiE,EAAgBgB,EAAwB3oB,MAChD6S,MAAK,kBAAMpI,EAAMgH,OAAO,oBAAqByW,EAAQ,IAC5D,IACOxV,QAAQ1E,IAAIya,EACvB,CA/EmBK,CAAgB12B,EAAe81B,EAASP,EAAgBa,EAAcZ,EAAiBC,EAAkB3oB,EACpH,EACE,kBAAMwT,QAAQC,SAAS,EAKrB+U,EAAS3gB,EAAT2gB,KACR,GAAIA,EAAM,CACN,MAA+B,mBAATA,EAChB,CAACU,EAAcE,GACf,CAACA,EAAoBF,GAAa,gBAFjCW,EAAK,KAAEC,EAAI,KAGlB,OAAOD,IAAQlW,KAAKmW,EACxB,CAEI,OAAOtW,QAAQ1E,IAAI,CAACoa,IAAgBE,EAAmBppB,EAAQwkB,QAEvE,CAIA,SAAS2E,GAAcj2B,EAAeiT,GAA0D,6DAAJ,CAAC,EAAC,IAA1Cqe,MAAAA,OAAK,IAAG,IAAC,EAAEyE,EAAkB,EAAlBA,mBAAoBvuB,EAAI,EAAJA,KAC/E,EAAsFxH,EAAcylB,qBAAqBxS,GAAW,IAA9H0B,WAAAA,OAAU,IAAG,EAAA3U,EAAc+zB,uBAAsB,EAAErf,EAAa,EAAbA,cAAkBzW,GAAM,cAC3E44B,EAAa72B,EAAcslB,SAAS,cACtCyQ,IACAphB,EAAaohB,GACjB,IAAMM,EAAa,GACbS,EAAqBtvB,GACvBxH,EAAcmB,gBACdnB,EAAcmB,eAAe41B,WAAWvvB,GAAM,cAE9C,IAAMzI,EAAQiB,EAAcslB,SAAS/hB,GAC/BqR,EAAc3W,EAAOsF,GAC3B,IAAKxE,QACesD,IAAhBuS,GACCkiB,GAyDb,SAA8B,EAAmCvzB,GAAK,IAAtCyzB,EAAa,EAAbA,cAAeC,EAAc,EAAdA,eACrCC,EAAcF,EAAcx4B,eAAe+E,KAAgC,IAAxB0zB,EAAe1zB,GAExE,OADA0zB,EAAe1zB,IAAO,EACf2zB,CACX,CA5DgBC,CAAqBL,EAAoBvzB,GAAO,iBAGxD,IAAMgxB,GAAkB,QAAEjD,MAAAA,EAAOxB,QAAS,GAAMnb,GAKhD,GAAI1T,OAAOC,0BAA4BnC,EAAM0gB,YAAa,CACtD,IAAM2X,EAAWp3B,EAAcyX,WAAWoO,IACtCuR,IACA7C,EAAgBzE,QAAU7uB,OAAOC,wBAAwBk2B,EAAU7zB,EAAKxE,EAAOmgB,GAAAA,IAEvF,CACA,IAAIrc,EAAY9D,EAAM2C,MAAM4yB,GAA2B/wB,EAAKxE,EAAO6V,EAAa5U,EAAcq3B,oBAAsB3wB,EAAeT,IAAI1C,GACjI,CAAEiE,MAAM,GACR+sB,IACF3O,GAAwBiR,KACxBA,EAAW/W,IAAIvc,GACfV,EAAYA,EAAU4d,MAAK,kBAAMoW,EAAWS,OAAO/zB,EAAI,KAE3D8yB,EAAW3Y,KAAK7a,EACpB,EA5BA,IAAK,IAAMU,KAAOtF,EAAM,KA6BxB,OAAOqiB,QAAQ1E,IAAIya,GAAY5V,MAAK,WAChC/L,GAAiB8Q,GAAUxlB,EAAe0U,EAC9C,GACJ,CAqBA,SAAS+hB,GAAgBrgB,EAAGC,GACxB,OAAOD,EAAEmhB,iBAAiBlhB,EAC9B,C,sCC3HMmhB,GAAuB,CACzBxhB,GAAcyhB,QACdzhB,GAAckG,OACdlG,GAAciC,MACdjC,GAAc4B,MACd5B,GAAcmE,IACdnE,GAAc0hB,KACd1hB,GAAc2hB,MAEZC,GAAuB,UAAIJ,IAAsBvO,UACjD4O,GAAoBL,GAAqB14B,OAC/C,SAASg5B,GAAY93B,GACjB,OAAO,SAACq2B,GAAU,OAAK/V,QAAQ1E,IAAIya,EAAWxT,KAAI,gBAAGhgB,EAAS,EAATA,UAAWiK,EAAO,EAAPA,QAAO,ODZ3E,SAA8B9M,EAAeiT,GAA0B,IAE/DpQ,EAFiDiK,EAAU,UAAH,6CAAG,CAAC,EAGhE,GAFA9M,EAAcqf,OAAO,iBAAkBpM,GAEnCjW,MAAMC,QAAQgW,GAAa,CAC3B,IAAMojB,EAAapjB,EAAW4P,KAAI,SAACiT,GAAO,OAAKD,GAAe71B,EAAe81B,EAAShpB,EAAQ,IAC9FjK,EAAYyd,QAAQ1E,IAAIya,EAC5B,MACK,GAA0B,kBAAfpjB,EACZpQ,EAAYgzB,GAAe71B,EAAeiT,EAAYnG,OAErD,CACD,IAAMirB,EAA2C,oBAAf9kB,EAC5BiS,GAAellB,EAAeiT,EAAYnG,EAAQlH,QAClDqN,EACNpQ,EAAYozB,GAAcj2B,EAAe+3B,EAAoBjrB,EACjE,CACA,OAAOjK,EAAU4d,MAAK,kBAAMzgB,EAAcqf,OAAO,oBAAqBpM,EAAW,GACrF,CCLkF+kB,CAAqBh4B,EAAe6C,EAAWiK,EAAQ,IAAE,CAC3I,CACA,SAASmrB,GAAqBj4B,GAC1B,IAAI6B,EAAUi2B,GAAY93B,GACpB4M,EAuSV,WAAuB,MACnB,OAAO,EAAP,cACKoJ,GAAcyhB,QAAUS,IAAgB,KAAK,UAC7CliB,GAAckG,OAASgc,OAAiB,UACxCliB,GAAc4B,MAAQsgB,OAAiB,UACvCliB,GAAcmE,IAAM+d,OAAiB,UACrCliB,GAAc0hB,KAAOQ,OAAiB,UACtCliB,GAAciC,MAAQigB,OAAiB,UACvCliB,GAAc2hB,KAAOO,MAAiB,CAE/C,CAjTkBC,GACVC,GAAkB,EAKhBC,EAA0B,SAACC,EAAKrlB,GAClC,IAAMwB,EAAWyQ,GAAellB,EAAeiT,GAC/C,GAAIwB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkBzW,GAAM,QAAKwW,EAAQ,IACzD6jB,GAAM,0BAAKA,GAAQr6B,GAAWyW,EAClC,CACA,OAAO4jB,CACX,EAkBA,SAASl3B,EAAe0L,EAASyrB,GA8B7B,IA7BA,IAAMz8B,EAAQkE,EAAcyX,WACtBrV,EAAUpC,EAAcw4B,mBAAkB,IAAS,CAAC,EAKpDnC,EAAa,GAKboC,EAAc,IAAI9xB,IAMpB+xB,EAAkB,CAAC,EAKnBC,EAAsBjG,IAC1B,aAOI,IAAMlrB,EAAOowB,GAAqBhqB,GAC5BgrB,EAAYhsB,EAAMpF,GAClB9E,OAAuBL,IAAhBvG,EAAM0L,GAAsB1L,EAAM0L,GAAQpF,EAAQoF,GACzDqxB,EAAgBt3B,EAAemB,GAK/Bo2B,EAActxB,IAAS+wB,EAAoBK,EAAUthB,SAAW,MAClD,IAAhBwhB,IACAH,EAAsB/qB,GAO1B,IAAImrB,EAAcr2B,IAASN,EAAQoF,IAAS9E,IAAS5G,EAAM0L,IAASqxB,EAepE,GAXIE,GACAX,GACAp4B,EAAcg5B,yBACdD,GAAc,GAMlBH,EAAU5B,eAAgB,UAAK0B,IAI7BE,EAAUthB,UAA4B,OAAhBwhB,IAElBp2B,IAASk2B,EAAUK,UAErBx3B,EAAoBiB,IACJ,mBAATA,EAAoB,iBAQ/B,IAAMw2B,EAyKlB,SAAgC/b,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAIngB,MAAMC,QAAQigB,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACX,CAjLqCgc,CAAuBP,EAAUK,SAAUv2B,GAChE02B,EAAoBF,GAEnB1xB,IAAS+wB,GACNK,EAAUthB,WACTyhB,GACDF,GAEHjrB,EAAI+qB,GAAuBE,EAK1BQ,EAAiBr8B,MAAMC,QAAQyF,GAAQA,EAAO,CAACA,GAKjD42B,EAAiBD,EAAe7iB,OAAO6hB,EAAyB,CAAC,IACjD,IAAhBS,IACAQ,EAAiB,CAAC,GAUtB,MAAoCV,EAA5BW,mBAAAA,OAAkB,IAAG,GAAC,EAAC,EACzBC,GAAU,kBACTD,GACAD,GAEDG,EAAgB,SAACl2B,GACnB61B,GAAoB,EACpBX,EAAYhd,OAAOlY,GACnBq1B,EAAU3B,eAAe1zB,IAAO,CACpC,EACA,IAAK,IAAMA,KAAOi2B,EAAS,CACvB,IAAMtc,EAAOoc,EAAe/1B,GACtB4Z,EAAOoc,EAAmBh2B,GAE5Bm1B,EAAgBl6B,eAAe+E,KAK/B2Z,IAASC,EAKL/J,GAAkB8J,IAAS9J,GAAkB+J,IACxCF,GAAeC,EAAMC,IAAS+b,EAC/BO,EAAcl2B,GAOdq1B,EAAU5B,cAAczzB,IAAO,OAGrBlB,IAAT6a,EAELuc,EAAcl2B,GAIdk1B,EAAY3Y,IAAIvc,QAGNlB,IAAT6a,GAAsBub,EAAYxyB,IAAI1C,GAK3Ck2B,EAAcl2B,GAOdq1B,EAAU5B,cAAczzB,IAAO,EAEvC,CAKAq1B,EAAUK,SAAWv2B,EACrBk2B,EAAUW,mBAAqBD,EAI3BV,EAAUthB,WACVohB,GAAkB,kBAAKA,GAAoBY,IAE3ClB,GAAmBp4B,EAAcS,wBACjC24B,GAAoB,GAOpBA,IAAsBL,GACtB1C,EAAW3Y,KAAI,MAAf2Y,GAAU,QAASgD,EAAexW,KAAI,SAAChgB,GAAS,MAAM,CAClDA,UAAWA,EACXiK,SAAS,QAAEtF,KAAAA,GAASsF,GACvB,KAET,EApKSc,EAAI,EAAGA,EAAIiqB,GAAmBjqB,IAAG,IA0K1C,GAAI6qB,EAAYpuB,KAAM,CAClB,IAAMqvB,EAAoB,CAAC,EAC3BjB,EAAYjkB,SAAQ,SAACjR,GACjB,IAAMo2B,EAAiB35B,EAAc45B,cAAcr2B,QAC5BlB,IAAnBs3B,IACAD,EAAkBn2B,GAAOo2B,EAEjC,IACAtD,EAAW3Y,KAAK,CAAE7a,UAAW62B,GACjC,CACA,IAAIG,EAAgB53B,QAAQo0B,EAAWv3B,QAOvC,OANIs5B,IACkB,IAAlBt8B,EAAM4E,UACLV,EAAcg5B,yBACfa,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBh4B,EAAQw0B,GAAc/V,QAAQC,SACzD,CAsBA,MAAO,CACHnf,eAAAA,EACAuW,UApBJ,SAAmBnQ,EAAM8P,EAAUxK,GAE/B,GAAIF,EAAMpF,GAAM8P,WAAaA,EACzB,OAAOgJ,QAAQC,UAEfvgB,EAAcm2B,iBACdn2B,EAAcm2B,gBAAgB3hB,SAAQ,SAAC6D,GACnCA,EAAMlX,gBACFkX,EAAMlX,eAAewW,UAAUnQ,EAAM8P,EAC7C,IAEJ1K,EAAMpF,GAAM8P,SAAWA,EACvB,IAAM+e,EAAaj1B,EAAe0L,EAAStF,GAC3C,IAAK,IAAMjE,KAAOqJ,EACdA,EAAMrJ,GAAKyzB,cAAgB,CAAC,EAEhC,OAAOX,CACX,EAIIyD,mBAhQJ,SAA4BC,GACxBl4B,EAAUk4B,EAAa/5B,EAC3B,EA+PI+2B,SAAU,kBAAMnqB,CAAK,EAE7B,CAUA,SAASsrB,KACL,MAAO,CACH5gB,SAF4B,UAAH,8CAGzB0f,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBsC,mBAAoB,CAAC,EAE7B,CC5TyC,IAEnCS,GAAgB,4CAMlB,WAAY7iB,GAAM,MAE4D,OAF5D,gBACd,cAAMA,GACNA,EAAKhW,iBAAmBgW,EAAKhW,eAAiB82B,GAAqB9gB,IAAO,CAC9E,CAqBa,OArBZ,4DACD,WACI,IAAQtV,EAAY5C,KAAKkY,KAAKM,WAAtB5V,QACR5C,KAAKqG,UACD7D,EAAoBI,KACpB5C,KAAKqG,QAAUzD,EAAQo4B,UAAUh7B,KAAKkY,MAE9C,GACA,mBAGA,WACIlY,KAAKi7B,qCACT,GAAC,oBACD,WACwBj7B,KAAKkY,KAAKM,WAAtB5V,WACyB5C,KAAKkY,KAAK/Z,WAAa,CAAC,GAAjDyE,SAEJ5C,KAAKi7B,qCAEb,GAAC,qBACD,WAAY,KAAC,EA9BK,CAAShjB,ICD3B5a,GAAK,EACH69B,GAAoB,4CACtB,aAAc,MAEK,OAFL,iBACV,eAASt7B,YACJvC,GAAKA,KAAK,CACnB,CAoBa,OApBZ,+BACD,WAAS,WACL,GAAK2C,KAAKkY,KAAKjX,gBAAf,CAEA,MAA8CjB,KAAKkY,KAAKjX,gBAAhDk6B,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAgBz0B,EAAM,EAANA,OAChB00B,GAAkBr7B,KAAKkY,KAAKojB,qBAAuB,CAAC,GAA/DH,UACR,GAAKn7B,KAAKkY,KAAKhW,gBAAkBi5B,IAAcE,EAA/C,CAGA,IAAME,EAAgBv7B,KAAKkY,KAAKhW,eAAewW,UAAU3B,GAAc2hB,MAAOyC,EAAW,CAAEx0B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAS3G,KAAKkY,KAAKM,WAAW7R,SACpKy0B,IAAmBD,GACnBI,EAAc/Z,MAAK,kBAAM4Z,EAAe,EAAK/9B,GAAG,GAHpD,CALU,CAUd,GAAC,mBACD,WACI,IAAQm+B,GAAax7B,KAAKkY,KAAKjX,iBAAmB,CAAC,GAA3Cu6B,SACJA,IACAx7B,KAAKqG,QAAUm1B,EAASx7B,KAAK3C,IAErC,GAAC,qBACD,WAAY,KAAC,EAxBS,CAAS4a,ICD7Bmf,GAAa,CACfxzB,UAAW,CACPqU,QAAS8iB,IAEbl3B,KAAM,CACFoU,QAASijB,KCRXruB,GAAW,SAACsK,EAAGC,GAAC,OAAKxO,KAAKuiB,IAAIhU,EAAIC,EAAE,ECS1C,IAGMqkB,GAAU,WACZ,WAAYjlB,EAAOklB,GAAuC,WAA3Bv7B,GAA2B,uDAAJ,CAAC,GAAxBA,mBA0D3B,IA1D6C,gBAI7CH,KAAKga,WAAa,KAIlBha,KAAK27B,cAAgB,KAIrB37B,KAAK47B,kBAAoB,KAIzB57B,KAAK07B,SAAW,CAAC,EACjB17B,KAAK67B,YAAc,WACf,GAAM,EAAKF,eAAiB,EAAKC,kBAAjC,CAEA,IAAMrjB,EAAOujB,GAAW,EAAKF,kBAAmB,EAAKG,SAC/CC,EAAmC,OAApB,EAAKhiB,WAIpBiiB,EDrClB,SAAoB9kB,EAAGC,GAEnB,IAAM8kB,EAASrvB,GAASsK,EAAEnP,EAAGoP,EAAEpP,GACzBm0B,EAAStvB,GAASsK,EAAElP,EAAGmP,EAAEnP,GAC/B,OAAOW,KAAKmf,KAAK,SAAAmU,EAAU,GAAC,SAAGC,EAAU,GAC7C,CCgC4CC,CAAW7jB,EAAK9H,OAAQ,CAAEzI,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAK+zB,GAAiBC,EAAtB,CAEA,IAAQnlB,EAAUyB,EAAVzB,MACAkJ,EAAcD,GAAAA,EAAAA,UACtB,EAAKgc,QAAQtd,MAAK,kBAAK3H,GAAK,IAAEkJ,UAAAA,KAC9B,MAA4B,EAAK0b,SAAzBW,EAAO,EAAPA,QAASC,EAAM,EAANA,OACZN,IACDK,GAAWA,EAAQ,EAAKV,cAAepjB,GACvC,EAAKyB,WAAa,EAAK2hB,eAE3BW,GAAUA,EAAO,EAAKX,cAAepjB,EAT3B,CARA,CAkBd,EACAvY,KAAKu8B,kBAAoB,SAAC/lB,EAAO+B,GAC7B,EAAKojB,cAAgBnlB,EACrB,EAAKolB,kBAAoBY,GAAejkB,EAAM,EAAKpY,oBAEnD8f,GAAAA,GAAAA,OAAY,EAAK4b,aAAa,EAClC,EACA77B,KAAKy8B,gBAAkB,SAACjmB,EAAO+B,GAE3B,GADA,EAAKmkB,MACC,EAAKf,eAAiB,EAAKC,kBAAjC,CAEA,MAAgC,EAAKF,SAA7BiB,EAAK,EAALA,MAAOC,EAAY,EAAZA,aACTC,EAAUf,GAA0B,kBAAftlB,EAAMjO,KAC3B,EAAKqzB,kBACLY,GAAejkB,EAAM,EAAKpY,oBAAqB,EAAK47B,SACtD,EAAK/hB,YAAc2iB,GACnBA,EAAMnmB,EAAOqmB,GAEjBD,GAAgBA,EAAapmB,EAAOqmB,EAR1B,CASd,EAEKtmB,GAAiBC,GAAtB,CAEAxW,KAAK07B,SAAWA,EAChB17B,KAAKG,mBAAqBA,EAC1B,IACM28B,EAAcN,GADP5lB,GAAiBJ,GACWxW,KAAKG,oBACtC2W,EAAUgmB,EAAVhmB,MACAkJ,EAAcD,GAAAA,EAAAA,UACtB/f,KAAK+7B,QAAU,EAAC,kBAAKjlB,GAAK,IAAEkJ,UAAAA,KAC5B,IAAQ+c,EAAmBrB,EAAnBqB,eACRA,GACIA,EAAevmB,EAAOslB,GAAWgB,EAAa98B,KAAK+7B,UACvD/7B,KAAKg9B,gBAAkB3lB,GAAKJ,GAAgBjV,OAAQ,cAAehC,KAAKu8B,mBAAoBtlB,GAAgBjV,OAAQ,YAAahC,KAAKy8B,iBAAkBxlB,GAAgBjV,OAAQ,gBAAiBhC,KAAKy8B,iBAX5L,CAYd,CAOC,OAPA,uCACD,SAAef,GACX17B,KAAK07B,SAAWA,CACpB,GAAC,iBACD,WACI17B,KAAKg9B,iBAAmBh9B,KAAKg9B,kBAC7BhM,GAAAA,GAAAA,OAAkBhxB,KAAK67B,YAC3B,KAAC,EA/EW,GAiFhB,SAASW,GAAejkB,EAAMpY,GAC1B,OAAOA,EAAqB,CAAE2W,MAAO3W,EAAmBoY,EAAKzB,QAAWyB,CAC5E,CACA,SAAS0kB,GAAc9lB,EAAGC,GACtB,MAAO,CAAEpP,EAAGmP,EAAEnP,EAAIoP,EAAEpP,EAAGC,EAAGkP,EAAElP,EAAImP,EAAEnP,EACtC,CACA,SAAS6zB,GAAW,EAAWC,GAAS,IAAlBjlB,EAAK,EAALA,MAClB,MAAO,CACHA,MAAAA,EACAgJ,MAAOmd,GAAcnmB,EAAOomB,GAAgBnB,IAC5CtrB,OAAQwsB,GAAcnmB,EAAOqmB,GAAiBpB,IAC9C7c,SAAUpX,GAAYi0B,EAAS,IAEvC,CACA,SAASoB,GAAiBpB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASmB,GAAgBnB,GACrB,OAAOA,EAAQA,EAAQl8B,OAAS,EACpC,CACA,SAASiI,GAAYi0B,EAAStc,GAC1B,GAAIsc,EAAQl8B,OAAS,EACjB,MAAO,CAAEmI,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAI0G,EAAIotB,EAAQl8B,OAAS,EACrBu9B,EAAmB,KACjBC,EAAYH,GAAgBnB,GAC3BptB,GAAK,IACRyuB,EAAmBrB,EAAQptB,KACvB0uB,EAAUrd,UAAYod,EAAiBpd,UACvC+G,GAAsBtH,MAG1B9Q,IAEJ,IAAKyuB,EACD,MAAO,CAAEp1B,EAAG,EAAGC,EAAG,GAEtB,IAAMq1B,GAAQD,EAAUrd,UAAYod,EAAiBpd,WAAa,IAClE,GAAa,IAATsd,EACA,MAAO,CAAEt1B,EAAG,EAAGC,EAAG,GAEtB,IAAMiM,EAAkB,CACpBlM,GAAIq1B,EAAUr1B,EAAIo1B,EAAiBp1B,GAAKs1B,EACxCr1B,GAAIo1B,EAAUp1B,EAAIm1B,EAAiBn1B,GAAKq1B,GAQ5C,OANIppB,EAAgBlM,IAAMyrB,MACtBvf,EAAgBlM,EAAI,GAEpBkM,EAAgBjM,IAAMwrB,MACtBvf,EAAgBjM,EAAI,GAEjBiM,CACX,CChJA,SAASqpB,GAAWC,GAChB,OAAOA,EAAK70B,IAAM60B,EAAK90B,GAC3B,CACA,SAAS+0B,GAAO39B,GAAuC,IAAhCd,EAAS,UAAH,6CAAG,EAAG0+B,EAAc,UAAH,6CAAG,IAC7C,OAAO90B,KAAKuiB,IAAIrrB,EAAQd,IAAW0+B,CACvC,CACA,SAASC,GAAc7d,EAAO7Q,EAAQjQ,GAAsB,IAAdwR,EAAS,UAAH,6CAAG,GACnDsP,EAAMtP,OAASA,EACfsP,EAAM8d,YAAcvpB,GAAIpF,EAAOvG,IAAKuG,EAAOtG,IAAKmX,EAAMtP,QACtDsP,EAAM7W,MAAQs0B,GAAWv+B,GAAUu+B,GAAWtuB,IAC1CwuB,GAAO3d,EAAM7W,MAAO,EAAG,OAAWoW,MAAMS,EAAM7W,UAC9C6W,EAAM7W,MAAQ,GAClB6W,EAAM+d,UACFxpB,GAAIrV,EAAO0J,IAAK1J,EAAO2J,IAAKmX,EAAMtP,QAAUsP,EAAM8d,aAClDH,GAAO3d,EAAM+d,YAAcxe,MAAMS,EAAM+d,cACvC/d,EAAM+d,UAAY,EAC1B,CACA,SAASC,GAAahe,EAAO7Q,EAAQjQ,EAAQwR,GACzCmtB,GAAc7d,EAAM9X,EAAGiH,EAAOjH,EAAGhJ,EAAOgJ,EAAGwI,EAASA,EAAOrD,aAAU/J,GACrEu6B,GAAc7d,EAAM7X,EAAGgH,EAAOhH,EAAGjJ,EAAOiJ,EAAGuI,EAASA,EAAOpD,aAAUhK,EACzE,CACA,SAAS26B,GAAiB/+B,EAAQg/B,EAAUn9B,GACxC7B,EAAO0J,IAAM7H,EAAO6H,IAAMs1B,EAASt1B,IACnC1J,EAAO2J,IAAM3J,EAAO0J,IAAM60B,GAAWS,EACzC,CAKA,SAASC,GAAyBj/B,EAAQoF,EAAQvD,GAC9C7B,EAAO0J,IAAMtE,EAAOsE,IAAM7H,EAAO6H,IACjC1J,EAAO2J,IAAM3J,EAAO0J,IAAM60B,GAAWn5B,EACzC,CACA,SAAS85B,GAAqBl/B,EAAQoF,EAAQvD,GAC1Co9B,GAAyBj/B,EAAOgJ,EAAG5D,EAAO4D,EAAGnH,EAAOmH,GACpDi2B,GAAyBj/B,EAAOiJ,EAAG7D,EAAO6D,EAAGpH,EAAOoH,EACxD,CCZA,SAASk2B,GAA4BX,EAAM90B,EAAKC,GAC5C,MAAO,CACHD,SAAatF,IAARsF,EAAoB80B,EAAK90B,IAAMA,OAAMtF,EAC1CuF,SAAavF,IAARuF,EACC60B,EAAK70B,IAAMA,GAAO60B,EAAK70B,IAAM60B,EAAK90B,UAClCtF,EAEd,CAcA,SAASg7B,GAA4BC,EAAYC,GAC7C,IAAI51B,EAAM41B,EAAgB51B,IAAM21B,EAAW31B,IACvCC,EAAM21B,EAAgB31B,IAAM01B,EAAW11B,IAG3C,GAAI21B,EAAgB31B,IAAM21B,EAAgB51B,IACtC21B,EAAW11B,IAAM01B,EAAW31B,IAAK,OACpB,CAACC,EAAKD,GAAlBA,EAAG,KAAEC,EAAG,IACb,CACA,MAAO,CAAED,IAAAA,EAAKC,IAAAA,EAClB,CAuCA,IAAM41B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHj2B,IAAKk2B,GAAoBH,EAAaC,GACtC/1B,IAAKi2B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,IAMMC,GAAc,WAAH,MAAU,CACvB92B,EAP2B,CAC3B61B,UAAW,EACX50B,MAAO,EACPuH,OAAQ,EACRotB,YAAa,GAIb31B,EAR2B,CAC3B41B,UAAW,EACX50B,MAAO,EACPuH,OAAQ,EACRotB,YAAa,GAKhB,EAEKmB,GAAY,WAAH,MAAU,CACrB/2B,EAFsB,CAAEU,IAAK,EAAGC,IAAK,GAGrCV,EAHsB,CAAES,IAAK,EAAGC,IAAK,GAIxC,ECdD,SAASq2B,GAAStjB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASujB,GAAwB,GAA+B,IAA7B5zB,EAAG,EAAHA,IAC/B,MAAO,CACHrD,EAAG,CAAEU,IAF+B,EAAJ8C,KAEhB7C,IAF2B,EAAL2C,OAGtCrD,EAAG,CAAES,IAAK2C,EAAK1C,IAHoC,EAAN4C,QAKrD,CCVA,SAAS2zB,GAAgBj2B,GACrB,YAAiB7F,IAAV6F,GAAiC,IAAVA,CAClC,CACA,SAASk2B,GAAS,GAA2B,IAAzBl2B,EAAK,EAALA,MAAOsD,EAAM,EAANA,OAAQC,EAAM,EAANA,OAC/B,OAAS0yB,GAAgBj2B,KACpBi2B,GAAgB3yB,KAChB2yB,GAAgB1yB,EACzB,CACA,SAAS0B,GAAa1Q,GAClB,OAAQ2hC,GAAS3hC,IACb4hC,GAAe5hC,IACfA,EAAO0K,GACP1K,EAAO2O,QACP3O,EAAO4O,SACP5O,EAAO6O,OACf,CACA,SAAS+yB,GAAe5hC,GACpB,OAAO6hC,GAAc7hC,EAAOwK,IAAMq3B,GAAc7hC,EAAOyK,EAC3D,CACA,SAASo3B,GAAcv/B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASw/B,GAAWxoB,EAAO7N,EAAO20B,GAG9B,OAAOA,EADQ30B,GADY6N,EAAQ8mB,EAGvC,CAIA,SAAS2B,GAAgBzoB,EAAO+mB,EAAW50B,EAAO20B,EAAa4B,GAI3D,YAHiBp8B,IAAbo8B,IACA1oB,EAAQwoB,GAAWxoB,EAAO0oB,EAAU5B,IAEjC0B,GAAWxoB,EAAO7N,EAAO20B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAAY,UAAH,6CAAG,EAAG50B,EAAQ,UAAH,6CAAG,EAAG20B,EAAW,uCAAE4B,EAAQ,uCACzEhC,EAAK90B,IAAM62B,GAAgB/B,EAAK90B,IAAKm1B,EAAW50B,EAAO20B,EAAa4B,GACpEhC,EAAK70B,IAAM42B,GAAgB/B,EAAK70B,IAAKk1B,EAAW50B,EAAO20B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAK,GAAU,IAAR33B,EAAC,EAADA,EAAGC,EAAC,EAADA,EAC7Bw3B,GAAeE,EAAI33B,EAAGA,EAAE61B,UAAW71B,EAAEiB,MAAOjB,EAAE41B,aAC9C6B,GAAeE,EAAI13B,EAAGA,EAAE41B,UAAW51B,EAAEgB,MAAOhB,EAAE21B,YAClD,CAuDA,SAASgC,GAAc32B,GACnB,OAAI42B,OAAOC,UAAU72B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS82B,GAAcvC,EAAM3wB,GACzB2wB,EAAK90B,IAAM80B,EAAK90B,IAAMmE,EACtB2wB,EAAK70B,IAAM60B,EAAK70B,IAAMkE,CAC1B,CAMA,SAASmzB,GAAcxC,EAAMyC,EAAY,GAA4B,oBAA3B37B,EAAG,KAAE47B,EAAQ,KAAEC,EAAS,KACxDC,OAAuCh9B,IAA1B68B,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAcvpB,GAAImpB,EAAK90B,IAAK80B,EAAK70B,IAAKy3B,GAE5CX,GAAejC,EAAMyC,EAAW37B,GAAM27B,EAAWC,GAAWtC,EAAaqC,EAAWh3B,MACxF,CAIA,IAAMo3B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKn3B,GACvBw3B,GAAcL,EAAI33B,EAAGQ,EAAW63B,IAChCL,GAAcL,EAAI13B,EAAGO,EAAW83B,GACpC,CCpHA,SAASE,GAAmBr6B,EAAUq2B,GAClC,OAAOyC,GHeX,SAA4BnoB,EAAO0lB,GAC/B,IAAKA,EACD,OAAO1lB,EACX,IAAM2pB,EAAUjE,EAAe,CAAEx0B,EAAG8O,EAAMtL,KAAMvD,EAAG6O,EAAMzL,MACnDq1B,EAAclE,EAAe,CAAEx0B,EAAG8O,EAAMxL,MAAOrD,EAAG6O,EAAMvL,SAC9D,MAAO,CACHF,IAAKo1B,EAAQx4B,EACbuD,KAAMi1B,EAAQz4B,EACduD,OAAQm1B,EAAYz4B,EACpBqD,MAAOo1B,EAAY14B,EAE3B,CG1BmC24B,CAAmBx6B,EAAS2P,wBAAyB0mB,GACxF,CCaA,IAAMoE,GAAsB,IAAItlB,QAK1BulB,GAAyB,WAC3B,WAAY9/B,IAAe,gBAIvBf,KAAK8gC,eAAiB,KACtB9gC,KAAK+gC,YAAa,EAClB/gC,KAAKghC,iBAAmB,KACxBhhC,KAAK49B,YAAc,CAAE51B,EAAG,EAAGC,EAAG,GAI9BjI,KAAKihC,aAAc,EACnBjhC,KAAKkhC,uBAAwB,EAI7BlhC,KAAKmhC,QAAUpC,KACf/+B,KAAKe,cAAgBA,CACzB,CAkYC,OAlYA,8BACD,SAAMqgC,GAA4C,WAAF,GAAE,uDAAJ,CAAC,GAA1BC,aAAAA,OAAY,IAAG,GAAK,EAI7BpgC,EAAoBjB,KAAKe,cAAzBE,gBACR,IAAIA,IAAiD,IAA9BA,EAAgBk6B,UAAvC,CAsFAn7B,KAAKshC,WAAa,IAAI7F,GAAW2F,EAAa,CAC1CrE,eArFmB,SAACvmB,GAGpB,EAAK+qB,gBACDF,GACA,EAAKA,aAAazqB,GAAiBJ,EAAO,QAAQM,MAE1D,EA+EIulB,QA9EY,SAAC7lB,EAAO+B,GAEpB,MAA+C,EAAKC,WAA5C1U,EAAI,EAAJA,KAAM09B,EAAe,EAAfA,gBAAiBC,EAAW,EAAXA,YAC/B,IAAI39B,GAAS09B,IACL,EAAKV,gBACL,EAAKA,iBACT,EAAKA,eAAiBlpB,GAAc9T,GAE/B,EAAKg9B,gBALd,CAQA,EAAKC,YAAa,EAClB,EAAKC,iBAAmB,KACxB,EAAKU,qBACD,EAAK3gC,cAAcoS,aACnB,EAAKpS,cAAcoS,WAAWwuB,oBAAqB,EACnD,EAAK5gC,cAAcoS,WAAWnU,YAASoE,GAK3C47B,IAAS,SAACxB,GACN,IAAIj8B,EAAU,EAAKqgC,mBAAmBpE,GAAM1+B,OAAS,EAIrD,GAAIgL,GAAQxC,KAAK/F,GAAU,CACvB,IAAQ4R,EAAe,EAAKpS,cAApBoS,WACR,GAAIA,GAAcA,EAAW/O,OAAQ,CACjC,IAAMy9B,EAAe1uB,EAAW/O,OAAO09B,UAAUtE,GACjD,GAAIqE,EAEAtgC,EADeg8B,GAAWsE,IACN94B,WAAWxH,GAAW,IAElD,CACJ,CACA,EAAKq8B,YAAYJ,GAAQj8B,CAC7B,IAEAkgC,GAAeA,EAAYjrB,EAAO+B,GAClC,IAAQrW,EAAmB,EAAKnB,cAAxBmB,eACRA,GAAkBA,EAAewW,UAAU3B,GAAc0hB,MAAM,EA/B/D,CAgCJ,EAqCI6D,OApCW,SAAC9lB,EAAO+B,GAEnB,MAAyE,EAAKC,WAAtEgpB,EAAe,EAAfA,gBAAiBO,EAAiB,EAAjBA,kBAAmBC,EAAe,EAAfA,gBAAiBC,EAAM,EAANA,OAE7D,GAAKT,GAAoB,EAAKV,eAA9B,CAEA,IAAQrwB,EAAW8H,EAAX9H,OAER,GAAIsxB,GAA+C,OAA1B,EAAKf,iBAM1B,OALA,EAAKA,iBA2UrB,SAA6BvwB,GAA4B,IAApByxB,EAAgB,UAAH,6CAAG,GAC7CrO,EAAY,KACZjrB,KAAKuiB,IAAI1a,EAAOxI,GAAKi6B,EACrBrO,EAAY,IAEPjrB,KAAKuiB,IAAI1a,EAAOzI,GAAKk6B,IAC1BrO,EAAY,KAEhB,OAAOA,CACX,CApVwCsO,CAAoB1xB,QAEd,OAA1B,EAAKuwB,kBACLgB,GAAmBA,EAAgB,EAAKhB,mBAKhD,EAAKoB,WAAW,IAAK7pB,EAAKzB,MAAOrG,GACjC,EAAK2xB,WAAW,IAAK7pB,EAAKzB,MAAOrG,GAOjC,EAAK1P,cAAcc,SAKnBogC,GAAUA,EAAOzrB,EAAO+B,EAzBd,CA0Bd,EAMIqkB,aALiB,SAACpmB,EAAO+B,GAAI,OAAK,EAAKwI,KAAKvK,EAAO+B,EAAK,GAMzD,CAAEpY,mBAAoBH,KAAKe,cAAcshC,yBA1FlC,CA2Fd,GAAC,kBACD,SAAK7rB,EAAO+B,GACR,IAAMwoB,EAAa/gC,KAAK+gC,WAExB,GADA/gC,KAAKi0B,SACA8M,EAAL,CAEA,IAAQ7hB,EAAa3G,EAAb2G,SACRlf,KAAKohB,eAAelC,GACpB,IAAQojB,EAActiC,KAAKwY,WAAnB8pB,UACRA,GAAaA,EAAU9rB,EAAO+B,EAJpB,CAKd,GAAC,oBACD,WACIvY,KAAK+gC,YAAa,EAClB,MAAuC/gC,KAAKe,cAApCoS,EAAU,EAAVA,WAAYjR,EAAc,EAAdA,eAChBiR,IACAA,EAAWwuB,oBAAqB,GAEpC3hC,KAAKshC,YAActhC,KAAKshC,WAAW5E,MACnC18B,KAAKshC,gBAAal+B,GACUpD,KAAKwY,WAAzBgpB,iBACgBxhC,KAAK8gC,iBACzB9gC,KAAK8gC,iBACL9gC,KAAK8gC,eAAiB,MAE1B5+B,GAAkBA,EAAewW,UAAU3B,GAAc0hB,MAAM,EACnE,GAAC,wBACD,SAAW+E,EAAM+E,EAAQ9xB,GACrB,IAAQ3M,EAAS9D,KAAKwY,WAAd1U,KAER,GAAK2M,GAAW+xB,GAAWhF,EAAM15B,EAAM9D,KAAKghC,kBAA5C,CAEA,IAAMyB,EAAYziC,KAAK4hC,mBAAmBpE,GACtCvf,EAAOje,KAAK49B,YAAYJ,GAAQ/sB,EAAO+sB,GAEvCx9B,KAAKihC,aAAejhC,KAAKihC,YAAYzD,KACrCvf,EPrKZ,SAA0BnH,EAAO,EAAcqqB,GAAS,IAArBz4B,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IASpC,YARYvF,IAARsF,GAAqBoO,EAAQpO,EAE7BoO,EAAQqqB,EAAU9sB,GAAI3L,EAAKoO,EAAOqqB,EAAQz4B,KAAOE,KAAKD,IAAImO,EAAOpO,QAEpDtF,IAARuF,GAAqBmO,EAAQnO,IAElCmO,EAAQqqB,EAAU9sB,GAAI1L,EAAKmO,EAAOqqB,EAAQx4B,KAAOC,KAAKF,IAAIoO,EAAOnO,IAE9DmO,CACX,CO2JmB4rB,CAAiBzkB,EAAMje,KAAKihC,YAAYzD,GAAOx9B,KAAKmhC,QAAQ3D,KAEvEiF,EAAUx7B,IAAIgX,EAPJ,CAQd,GAAC,gCACD,WAAqB,WACjB,EAAyCje,KAAKwY,WAAtCmqB,EAAe,EAAfA,gBAAiBlE,EAAW,EAAXA,YACjBr6B,GAAWpE,KAAKe,cAAcoS,YAAc,CAAC,GAA7C/O,OACFw+B,EAAkB5iC,KAAKihC,YACzB0B,GAAmBvgC,EAAYugC,GAC1B3iC,KAAKihC,cACNjhC,KAAKihC,YAAcjhC,KAAK6iC,yBAKxB7iC,KAAKihC,eADL0B,IAAmBv+B,IPvJnC,SAAiC09B,EAAW,GAA8B,IAA5Bz2B,EAAG,EAAHA,IAAKG,EAAI,EAAJA,KAAMD,EAAM,EAANA,OAAQD,EAAK,EAALA,MAC7D,MAAO,CACHtD,EAAGm2B,GAA4B2D,EAAU95B,EAAGwD,EAAMF,GAClDrD,EAAGk2B,GAA4B2D,EAAU75B,EAAGoD,EAAKE,GAEzD,COmJmCu3B,CAAwB1+B,EAAO09B,UAAWa,GAMrE3iC,KAAKmhC,QPhGb,WAA0D,IAA9B1C,EAAc,UAAH,6CAAGF,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHv2B,EAAGw2B,GAAmBC,EAAa,OAAQ,SAC3Cx2B,EAAGu2B,GAAmBC,EAAa,MAAO,UAElD,COqFuBsE,CAAmBtE,GAK9BmE,IAAoB5iC,KAAKihC,aACzB78B,GACApE,KAAKihC,cACJjhC,KAAKkhC,uBACNlC,IAAS,SAACxB,GACF,EAAKoE,mBAAmBpE,KACxB,EAAKyD,YAAYzD,GPzHrC,SAA+Bp5B,EAAQ68B,GACnC,IAAM+B,EAAsB,CAAC,EAO7B,YANwB5/B,IAApB69B,EAAYv4B,MACZs6B,EAAoBt6B,IAAMu4B,EAAYv4B,IAAMtE,EAAOsE,UAE/BtF,IAApB69B,EAAYt4B,MACZq6B,EAAoBr6B,IAAMs4B,EAAYt4B,IAAMvE,EAAOsE,KAEhDs6B,CACX,COgH6CC,CAAsB7+B,EAAO09B,UAAUtE,GAAO,EAAKyD,YAAYzD,IAEhG,GAER,GAAC,mCACD,WACI,MAAmEx9B,KAAKwY,WAA/CyoB,EAAW,EAA5B0B,gBAA8BO,EAAwB,EAAxBA,yBACtC,IAAKjC,IAAgB7+B,EAAY6+B,GAC7B,OAAO,EACX,IAAMkC,EAAqBlC,EAAY1/B,QACvCulB,GAAiC,OAAvBqc,EAA6B,0GACvC,IAAQhwB,EAAenT,KAAKe,cAApBoS,WAER,IAAKA,IAAeA,EAAW/O,OAC3B,OAAO,EACX,IAAMg/B,EDxNd,SAAwBnwB,EAASowB,EAAoBljC,GACjD,IAAMmjC,EAAc9C,GAAmBvtB,EAAS9S,GACxCojC,EAAWF,EAAXE,OAKR,OAJIA,IACAxD,GAAcuD,EAAYt7B,EAAGu7B,EAAO9yB,OAAOzI,GAC3C+3B,GAAcuD,EAAYr7B,EAAGs7B,EAAO9yB,OAAOxI,IAExCq7B,CACX,CCgN+BE,CAAeL,EAAoBhwB,EAAW4I,KAAM/b,KAAKe,cAAcshC,yBAC1FoB,EPlKZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACHp7B,EAAGo2B,GAA4B0D,EAAU95B,EAAGo7B,EAAep7B,GAC3DC,EAAGm2B,GAA4B0D,EAAU75B,EAAGm7B,EAAen7B,GAEnE,CO6JkCy7B,CAAwBvwB,EAAW/O,OAAO09B,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJ1NpC,SAAiC,GAAU,IAARl7B,EAAC,EAADA,EAAGC,EAAC,EAADA,EAClC,MAAO,CAAEoD,IAAKpD,EAAES,IAAK4C,MAAOtD,EAAEW,IAAK4C,OAAQtD,EAAEU,IAAK6C,KAAMxD,EAAEU,IAC9D,CIwN6Dk7B,CAAwBH,IACzEzjC,KAAKkhC,wBAA0ByC,EAC3BA,IACAF,EAAsBxE,GAAwB0E,GAEtD,CACA,OAAOF,CACX,GAAC,4BACD,SAAevkB,GAAU,WACrB,EAAoGlf,KAAKwY,WAAjG1U,EAAI,EAAJA,KAAM+/B,EAAY,EAAZA,aAAcpF,EAAW,EAAXA,YAAaqF,EAAc,EAAdA,eAAgBC,EAAgB,EAAhBA,iBAAkBC,EAAmB,EAAnBA,oBACrE/C,EAAcjhC,KAAKihC,aAAe,CAAC,EACnCgD,EAAqBjF,IAAS,SAACxB,GACjC,GAAKgF,GAAWhF,EAAM15B,EAAM,EAAKk9B,kBAAjC,CAGA,IAAItrB,EAAcurB,GAAeA,EAAYzD,IAAU,CAAC,EACpDuG,IACAruB,EAAa,CAAEhN,IAAK,EAAGC,IAAK,IAOhC,IAAMktB,EAAkB4I,EAAc,IAAM,IACtC3I,EAAgB2I,EAAc,GAAK,IACnCrI,GAAU,gBACZ7tB,KAAM,UACN2W,SAAU2kB,EAAe3kB,EAASse,GAAQ,EAC1C3H,gBAAAA,EACAC,cAAAA,EACAvF,aAAc,IACd3B,UAAW,EACXC,UAAW,IACRiV,GACApuB,GAKP,OAAO,EAAKwuB,wBAAwB1G,EAAMpH,EA1B1C,CA2BJ,IAEA,OAAO/U,QAAQ1E,IAAIsnB,GAAoBziB,KAAKwiB,EAChD,GAAC,qCACD,SAAwBxG,EAAM9nB,GAC1B,IAAM+sB,EAAYziC,KAAK4hC,mBAAmBpE,GAC1C,OAAOiF,EAAUhgC,MAAM4yB,GAA2BmI,EAAMiF,EAAW,EAAG/sB,GAC1E,GAAC,2BACD,WAAgB,WACZspB,IAAS,SAACxB,GAAI,OAAK,EAAKoE,mBAAmBpE,GAAMzc,MAAM,GAC3D,GACA,gCAMA,SAAmByc,GACf,IAAM2G,EAAU,QAAU3G,EAAK1pB,cACzBjX,EAAQmD,KAAKe,cAAcyX,WAC3B4rB,EAAsBvnC,EAAMsnC,GAClC,OAAOC,GAEDpkC,KAAKe,cAAcslB,SAASmX,GAAO3gC,EAAM4E,QAAU5E,EAAM4E,QAAQ+7B,QAAQp6B,IAAc,EACjG,GAAC,0BACD,SAAa0T,GAAO,WAChBkoB,IAAS,SAACxB,GAGN,GAAKgF,GAAWhF,EAFC,EAAKhlB,WAAd1U,KAEoB,EAAKk9B,kBAAjC,CAEA,IAAQ7tB,EAAe,EAAKpS,cAApBoS,WACFsvB,EAAY,EAAKb,mBAAmBpE,GAC1C,GAAIrqB,GAAcA,EAAW/O,OAAQ,CACjC,MAAqB+O,EAAW/O,OAAO09B,UAAUtE,GAAzC90B,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IACb85B,EAAUx7B,IAAI6P,EAAM0mB,GAAQnpB,GAAI3L,EAAKC,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,4CAKA,WAAiC,WAC7B,GAAK3I,KAAKe,cAAcQ,QAAxB,CAEA,MAAkCvB,KAAKwY,WAA/B1U,EAAI,EAAJA,KAAM6+B,EAAe,EAAfA,gBACNxvB,EAAenT,KAAKe,cAApBoS,WACR,GAAK/Q,EAAYugC,IAAqBxvB,GAAenT,KAAKihC,YAA1D,CAMAjhC,KAAKuhC,gBAKL,IAAM8C,EAAc,CAAEr8B,EAAG,EAAGC,EAAG,GAC/B+2B,IAAS,SAACxB,GACN,IAAMiF,EAAY,EAAKb,mBAAmBpE,GAC1C,GAAIiF,EAAW,CACX,IAAM6B,EAAS7B,EAAU3jC,MACzBulC,EAAY7G,GPxQ5B,SAAoBvuB,EAAQjQ,GACxB,IAAIwR,EAAS,GACP+zB,EAAehH,GAAWtuB,GAC1Bu1B,EAAejH,GAAWv+B,GAOhC,OANIwlC,EAAeD,EACf/zB,EAASiX,GAASzoB,EAAO0J,IAAK1J,EAAO2J,IAAM47B,EAAct1B,EAAOvG,KAE3D67B,EAAeC,IACpBh0B,EAASiX,GAASxY,EAAOvG,IAAKuG,EAAOtG,IAAM67B,EAAcxlC,EAAO0J,MAE7DD,EAAM,EAAG,EAAG+H,EACvB,CO6PoCD,CAAW,CAAE7H,IAAK47B,EAAQ37B,IAAK27B,GAAU,EAAKrD,YAAYzD,GAClF,CACJ,IAIA,IAAQ1vB,EAAsB9N,KAAKe,cAAcyX,WAAzC1K,kBACR9N,KAAKe,cAAcQ,QAAQwM,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNqF,EAAW4I,MAAQ5I,EAAW4I,KAAK0oB,eACnCtxB,EAAWuxB,eACX1kC,KAAK0hC,qBAKL1C,IAAS,SAACxB,GACN,GAAKgF,GAAWhF,EAAM15B,EAAM,MAA5B,CAKA,IAAM2+B,EAAY,EAAKb,mBAAmBpE,GAC1C,EAAqB,EAAKyD,YAAYzD,GAA9B90B,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IACb85B,EAAUx7B,IAAIoN,GAAI3L,EAAKC,EAAK07B,EAAY7G,IAN9B,CAOd,GAzCU,CAJA,CA8Cd,GAAC,0BACD,WAAe,WACX,GAAKx9B,KAAKe,cAAcQ,QAAxB,CAEAq/B,GAAoB35B,IAAIjH,KAAKe,cAAef,MAC5C,IAIM2kC,EAAsB1tB,GAJZjX,KAAKe,cAAcQ,QAIkB,eAAe,SAACiV,GACjE,MAAsC,EAAKgC,WAAnC1U,EAAI,EAAJA,KAAI,IAAE0L,aACd1L,SAD0B,IAAG,GAAI,IACT,EAAKrB,MAAM+T,EACvC,IACMouB,EAAyB,WAEvBxiC,EADwB,EAAKoW,WAAzBmqB,mBAEJ,EAAK1B,YAAc,EAAK4B,wBAEhC,EACQ1vB,EAAenT,KAAKe,cAApBoS,WACF0xB,EAA4B1xB,EAAWkD,iBAAiB,UAAWuuB,GACrEzxB,IAAeA,EAAW/O,SAC1B+O,EAAW4I,MAAQ5I,EAAW4I,KAAK0oB,eACnCtxB,EAAWuxB,gBAEfE,IAKA,IAAME,EAAqB7uB,GAAYjU,OAAQ,UAAU,kBAAM,EAAK+iC,gCAAgC,IAK9FC,EAA2B7xB,EAAWkD,iBAAiB,aAAc,YAAiC,IAA9ByJ,EAAK,EAALA,MAAOmlB,EAAgB,EAAhBA,iBAC7E,EAAKlE,YAAckE,IACnBjG,IAAS,SAACxB,GACN,IAAM3b,EAAc,EAAK+f,mBAAmBpE,GACvC3b,IAEL,EAAK+b,YAAYJ,IAAS1d,EAAM0d,GAAMK,UACtChc,EAAY5a,IAAI4a,EAAY/iB,MAAQghB,EAAM0d,GAAMK,WACpD,IACA,EAAK98B,cAAcc,SAE3B,IACA,OAAO,WACHijC,IACAH,IACAE,IACAG,GAA4BA,GAChC,CAjDU,CAkDd,GAAC,sBACD,WACI,IAAMnoC,EAAQmD,KAAKe,cAAcyX,WACjC,EAA0J3b,EAAlJiH,KAAAA,OAAI,IAAG,GAAK,IAAsIjH,EAApIklC,kBAAAA,OAAiB,IAAG,GAAK,IAA2GllC,EAAzG2kC,gBAAAA,OAAe,IAAG,GAAK,IAAkF3kC,EAAhF8lC,gBAAAA,OAAe,IAAG,GAAK,IAAyD9lC,EAAvD4hC,YAAAA,OAAW,IAAG,EAAAF,GAAc,IAA2B1hC,EAAzBgnC,aAAAA,OAAY,IAAG,GAAI,EACpJ,OAAO,kBACAhnC,GAAK,IACRiH,KAAAA,EACAi+B,kBAAAA,EACAP,gBAAAA,EACAmB,gBAAAA,EACAlE,YAAAA,EACAoF,aAAAA,GAER,KAAC,EArZ0B,GAuZ/B,SAASrB,GAAW3O,EAAW/vB,EAAMk9B,GACjC,QAAkB,IAATl9B,GAAiBA,IAAS+vB,KACT,OAArBmN,GAA6BA,IAAqBnN,EAC3D,CC/a4E,IAEtEqR,GAAW,4CACb,WAAYhtB,GAAM,MAIsC,OAJtC,iBACd,cAAMA,IACDitB,oBAAsB7rB,GAC3B,EAAK0jB,gBAAkB1jB,GACvB,EAAK8rB,SAAW,IAAIvE,GAA0B3oB,GAAM,CACxD,CAaC,OAbA,8BACD,WAGI,IAAQmtB,EAAiBrlC,KAAKkY,KAAKM,WAA3B6sB,aACJA,IACArlC,KAAKmlC,oBAAsBE,EAAarK,UAAUh7B,KAAKolC,WAE3DplC,KAAKg9B,gBAAkBh9B,KAAKolC,SAASE,gBAAkBhsB,EAC3D,GAAC,qBACD,WACItZ,KAAKmlC,sBACLnlC,KAAKg9B,iBACT,KAAC,EAnBY,CAAS/kB,ICCpBstB,GAAU,4CACZ,aAAc,MAE4B,OAF5B,iBACV,eAAS3lC,YACJ4lC,0BAA4BlsB,GAAK,CAC1C,CAyBC,OAzBA,sCACD,SAAcmsB,GACVzlC,KAAK0lC,QAAU,IAAIjK,GAAWgK,EAAkBzlC,KAAK2lC,oBAAqB,CAAExlC,mBAAoBH,KAAKkY,KAAKmqB,yBAC9G,GAAC,+BACD,WAAoB,WAChB,EAA2DriC,KAAKkY,KAAKM,WAA7DotB,EAAiB,EAAjBA,kBAAmBC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAC9C,MAAO,CACHhJ,eAAgB6I,EAChBvJ,QAASwJ,EACTvJ,OAAQwJ,EACRnJ,MAAO,SAACnmB,EAAO+B,UACJ,EAAKmtB,QACZK,GAAYA,EAASvvB,EAAO+B,EAChC,EAER,GAAC,mBACD,WAAQ,WACJvY,KAAKwlC,0BAA4BvuB,GAAgBjX,KAAKkY,KAAK3W,QAAS,eAAe,SAACiV,GAAK,OAAK,EAAKwvB,cAAcxvB,EAAM,GAC3H,GAAC,oBACD,WACIxW,KAAK0lC,SAAW1lC,KAAK0lC,QAAQO,eAAejmC,KAAK2lC,oBACrD,GAAC,qBACD,WACI3lC,KAAKwlC,4BACLxlC,KAAK0lC,SAAW1lC,KAAK0lC,QAAQhJ,KACjC,KAAC,EA7BW,CAASzkB,ICHzB,SAASiuB,GAAgBC,EAAQ3I,GAC7B,OAAIA,EAAK70B,MAAQ60B,EAAK90B,IACX,EACHy9B,GAAU3I,EAAK70B,IAAM60B,EAAK90B,KAAQ,GAC9C,CAQA,IAAM09B,GAAsB,CACxBC,QAAS,SAAC/B,EAAQpsB,GACd,IAAKA,EAAKlZ,OACN,OAAOslC,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIv6B,GAAGzC,KAAKg9B,GAIR,OAAOA,EAHPA,EAASv7B,WAAWu7B,EAK5B,CAKA,IAAMt8B,EAAIk+B,GAAgB5B,EAAQpsB,EAAKlZ,OAAOgJ,GACxCC,EAAIi+B,GAAgB5B,EAAQpsB,EAAKlZ,OAAOiJ,GAC9C,MAAO,GAAP,OAAUD,EAAC,aAAKC,EAAC,IACrB,GCnCJ,SAASI,GAAcvI,GACnB,MAAwB,kBAAVA,GAAsBA,EAAM8H,WAAW,SACzD,CAUA,IAAM0+B,GAAmB,uDAQzB,IAAMC,GAAW,EACjB,SAASC,GAAiBjlC,EAAS0R,GAAoB,IAAXwzB,EAAQ,UAAH,6CAAG,EAChD3f,GAAU2f,GAASF,GAAU,yDAAF,OAA2DhlC,EAAO,yDAC7F,MAVJ,SAA0BA,GACtB,IAAM6gB,EAAQkkB,GAAiBI,KAAKnlC,GACpC,IAAK6gB,EACD,MAAO,CAAC,GACZ,eAA4BA,EAAK,GACjC,MAAO,CADO,KAAU,KAE5B,CAI8BukB,CAAiBplC,GAAQ,gBAA5CqlC,EAAK,KAAEtpB,EAAQ,KAEtB,GAAKspB,EAAL,CAGA,IAAMpxB,EAAWxT,OAAO6kC,iBAAiB5zB,GAAS6zB,iBAAiBF,GACnE,OAAIpxB,EACOA,EAAS3G,OAEXxG,GAAciV,GAEZkpB,GAAiBlpB,EAAUrK,EAASwzB,EAAQ,GAG5CnpB,CAXD,CAad,CAMA,SAASypB,GAAoBhmC,EAAe,EAAe0U,GAAe,IAAzBzW,EAAM,kBC/CxC,SAAmCgoC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,CD6CuD,QAC7C/zB,EAAUlS,EAAcQ,QAC9B,KAAM0R,aAAmBigB,SACrB,MAAO,CAAEl0B,OAAAA,EAAQyW,cAAAA,GAiBrB,IAAK,IAAMnR,KAdPmR,IACAA,GAAgB,UAAKA,IAGzB1U,EAAcvD,OAAO+X,SAAQ,SAACzV,GAC1B,IAAMyB,EAAUzB,EAAMhB,MACtB,GAAKuJ,GAAc9G,GAAnB,CAEA,IAAMiU,EAAWgxB,GAAiBjlC,EAAS0R,GACvCuC,GACA1V,EAAMmH,IAAIuO,EAHJ,CAId,IAGkBxW,EAAQ,CACtB,IAAMuC,EAAUvC,EAAOsF,GACvB,GAAK+D,GAAc9G,GAAnB,CAEA,IAAMiU,EAAWgxB,GAAiBjlC,EAAS0R,GACtCuC,IAGLxW,EAAOsF,GAAOkR,EAIVC,QAAwCrS,IAAvBqS,EAAcnR,KAC/BmR,EAAcnR,GAAO/C,GAVb,CAYhB,CACA,MAAO,CAAEvC,OAAAA,EAAQyW,cAAAA,EACrB,CEhFA,IAAMyxB,GAAW,QACXC,GAAmB,CACrBd,QAAS,SAAC/B,EAAQ,GAAmC,IAAjC8C,EAAS,EAATA,UAAWC,EAAe,EAAfA,gBACrBC,EAAWhD,EAIXiD,EAAuBjD,EAAOl9B,SAAS,QACvCogC,EAAe,GACjBD,IACAjD,EAASA,EAAOvxB,QAAQuzB,IAAkB,SAAClkB,GAEvC,OADAolB,EAAa/oB,KAAK2D,GACX8kB,EACX,KAEJ,IAAMO,EAAStjB,GAAQrb,MAAMw7B,GAE7B,GAAImD,EAAO5nC,OAAS,EAChB,OAAOynC,EACX,IAAMve,EAAW5E,GAAQJ,kBAAkBugB,GACrC7zB,EAA8B,kBAAdg3B,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgBr/B,EAAEiB,MAAQm+B,EAAUp/B,EAC7C2/B,EAASN,EAAgBp/B,EAAEgB,MAAQm+B,EAAUn/B,EACnDw/B,EAAO,EAAIh3B,IAAWi3B,EACtBD,EAAO,EAAIh3B,IAAWk3B,EAOtB,IAAMC,EAAevzB,GAAIqzB,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAIh3B,KAClBg3B,EAAO,EAAIh3B,IAAWm3B,GAEQ,kBAAvBH,EAAO,EAAIh3B,KAClBg3B,EAAO,EAAIh3B,IAAWm3B,GAC1B,IAAI3jB,EAAS8E,EAAS0e,GACtB,GAAIF,EAAsB,CACtB,IAAI54B,EAAI,EACRsV,EAASA,EAAOlR,QAAQm0B,IAAU,WAC9B,IAAMW,EAAcL,EAAa74B,GAEjC,OADAA,IACOk5B,CACX,GACJ,CACA,OAAO5jB,CACX,GC3CE6jB,GAAwB,wGA8FzB,OA9FyB,0CAM1B,WAAoB,IvIfGC,EuIeH,OAChB,EAAoE/nC,KAAKnD,MAAjEkE,EAAa,EAAbA,cAAeinC,EAAW,EAAXA,YAAaC,EAAiB,EAAjBA,kBAAmBviC,EAAQ,EAARA,SAC/CyN,EAAepS,EAAfoS,WvIjBW40B,EuIkBDG,GvIjBtB7oC,OAAO8P,OAAO5H,EAAiBwgC,GuIkBvB50B,IACI60B,EAAYG,OACZH,EAAYG,MAAMtnB,IAAI1N,GACtB80B,GAAqBA,EAAkBzM,UAAY91B,GACnDuiC,EAAkBzM,SAASroB,GAE/BA,EAAW4I,KAAKqsB,YAChBj1B,EAAWkD,iBAAiB,qBAAqB,WAC7C,EAAKgyB,cACT,IACAl1B,EAAWm1B,YAAW,kBACfn1B,EAAWtF,SAAO,IACrButB,eAAgB,kBAAM,EAAKiN,cAAc,MAGjD7jC,EAAsBE,gBAAiB,CAC3C,GAAC,qCACD,SAAwBvG,GAAW,WAC/B,EAA6D6B,KAAKnD,MAA1D0rC,EAAgB,EAAhBA,iBAAkBxnC,EAAa,EAAbA,cAAe+C,EAAI,EAAJA,KAAMq3B,EAAS,EAATA,UACzChoB,EAAapS,EAAcoS,WACjC,OAAKA,GASLA,EAAWgoB,UAAYA,EACnBr3B,GACA3F,EAAUoqC,mBAAqBA,QACVnlC,IAArBmlC,EACAp1B,EAAWq1B,aAGXxoC,KAAKqoC,eAELlqC,EAAUg9B,YAAcA,IACpBA,EACAhoB,EAAWs1B,UAELt1B,EAAWu1B,YAMjBzoB,GAAAA,GAAAA,YAAgB,WACZ,IAAM0oB,EAAQx1B,EAAWy1B,WACpBD,GAAUA,EAAME,QAAQhpC,QACzB,EAAKwoC,cAEb,KAGD,MAnCI,IAoCf,GAAC,gCACD,WACI,IAAQl1B,EAAenT,KAAKnD,MAAMkE,cAA1BoS,WACJA,IACAA,EAAW4I,KAAKqsB,aACXj1B,EAAWyiB,kBAAoBziB,EAAW21B,UAC3C9oC,KAAKqoC,eAGjB,GAAC,kCACD,WACI,MAA2EroC,KAAKnD,MAAxEkE,EAAa,EAAbA,cAAeinC,EAAW,EAAXA,YAAgCe,EAAc,EAAjCd,kBAC5B90B,EAAepS,EAAfoS,WACJA,IACAA,EAAW61B,4BACPhB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAM9P,OAAOllB,GACzB41B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW91B,GAEtC,GAAC,0BACD,WACI,IAAQk1B,EAAiBroC,KAAKnD,MAAtBwrC,aACRA,GAAgBA,GACpB,GAAC,oBACD,WACI,OAAO,IACX,KAAC,EA9FyB,CAASa,EAAAA,WAgGvC,SAAS1jC,GAAc3I,GACnB,MCjFJ,WACI,IAAMsG,GAAUrC,EAAAA,EAAAA,YAAWI,EAAAA,GAC3B,GAAgB,OAAZiC,EACA,MAAO,EAAC,EAAM,MAClB,IAAQg4B,EAAwCh4B,EAAxCg4B,UAAWC,EAA6Bj4B,EAA7Bi4B,eAAgBI,EAAar4B,EAAbq4B,SAG7Bn+B,GAAK8rC,EAAAA,EAAAA,SAGX,OAFArnC,EAAAA,EAAAA,YAAU,kBAAM05B,EAASn+B,EAAG,GAAE,KAEtB89B,GAAaC,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAe/9B,EAAG,GACD,EAAC,EACnE,CDsEsC+rC,GAAa,gBAAxCjO,EAAS,KAAEkN,EAAY,KACxBL,GAAclnC,EAAAA,EAAAA,YAAW0F,EAAAA,GAC/B,OAAQ0iC,EAAAA,cAA6BpB,IAA0B,kBAAKjrC,GAAK,IAAEmrC,YAAaA,EAAaC,mBAAmBnnC,EAAAA,EAAAA,YAAW6D,GAA2Bw2B,UAAWA,EAAWkN,aAAcA,IACtM,CACA,IAAMH,GAAyB,CAC3Bx9B,cAAc,kBACP07B,IAAmB,IACtBiD,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRz+B,oBAAqBw7B,GACrBv7B,qBAAsBu7B,GACtBr7B,uBAAwBq7B,GACxBt7B,wBAAyBs7B,GACzBkD,UAAWnC,IEvHf,IAAMoC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ1pC,OACrB4pC,GAAW,SAAC3pC,GAAK,MAAsB,kBAAVA,EAAqBiJ,WAAWjJ,GAASA,CAAK,EAC3E4pC,GAAO,SAAC5pC,GAAK,MAAsB,kBAAVA,GAAsBiK,GAAGzC,KAAKxH,EAAM,EA0CnE,SAAS6pC,GAAUnsC,EAAQosC,GACvB,YAA8BxmC,IAAvB5F,EAAOosC,GACRpsC,EAAOosC,GACPpsC,EAAOkN,YACjB,CAwBA,IAAMm/B,GAAkBC,GAAS,EAAG,GAAKte,IACnCue,GAAmBD,GAAS,GAAK,IAAMxwB,IAC7C,SAASwwB,GAASphC,EAAKC,EAAKwe,GACxB,OAAO,SAAC/mB,GAEJ,OAAIA,EAAIsI,EACG,EACPtI,EAAIuI,EACG,EACJwe,EAAOM,GAAS/e,EAAKC,EAAKvI,GACrC,CACJ,CCrFA,SAAS4pC,GAAaxM,EAAMyM,GACxBzM,EAAK90B,IAAMuhC,EAAWvhC,IACtB80B,EAAK70B,IAAMshC,EAAWthC,GAC1B,CAMA,SAASuhC,GAAYvK,EAAKwK,GACtBH,GAAarK,EAAI33B,EAAGmiC,EAAUniC,GAC9BgiC,GAAarK,EAAI13B,EAAGkiC,EAAUliC,EAClC,CCVA,SAASmiC,GAAiBtzB,EAAO+mB,EAAW50B,EAAO20B,EAAa4B,GAM5D,OAJA1oB,EAAQwoB,GADRxoB,GAAS+mB,EACiB,EAAI50B,EAAO20B,QACpBx6B,IAAbo8B,IACA1oB,EAAQwoB,GAAWxoB,EAAO,EAAI0oB,EAAU5B,IAErC9mB,CACX,CAsBA,SAASuzB,GAAqB7M,EAAMyC,EAAY,EAA4BzvB,EAAQ85B,GAAY,oBAA/ChmC,EAAG,KAAE47B,EAAQ,KAAEC,EAAS,MAlBzE,SAAyB3C,GAA8F,IAAxFK,EAAY,UAAH,6CAAG,EAAG50B,EAAQ,UAAH,6CAAG,EAAGuH,EAAS,UAAH,6CAAG,GAAKgvB,EAAQ,uCAAEyK,EAAa,UAAH,6CAAGzM,EAAM8M,EAAa,UAAH,6CAAG9M,EAM7G,GALI1zB,GAAQxC,KAAKu2B,KACbA,EAAY90B,WAAW80B,GAEvBA,EADyBxpB,GAAIi2B,EAAW5hC,IAAK4hC,EAAW3hC,IAAKk1B,EAAY,KAC1CyM,EAAW5hC,KAErB,kBAAdm1B,EAAX,CAEA,IAAID,EAAcvpB,GAAI41B,EAAWvhC,IAAKuhC,EAAWthC,IAAK6H,GAClDgtB,IAASyM,IACTrM,GAAeC,GACnBL,EAAK90B,IAAM0hC,GAAiB5M,EAAK90B,IAAKm1B,EAAW50B,EAAO20B,EAAa4B,GACrEhC,EAAK70B,IAAMyhC,GAAiB5M,EAAK70B,IAAKk1B,EAAW50B,EAAO20B,EAAa4B,EAL3D,CAMd,CAMI+K,CAAgB/M,EAAMyC,EAAW37B,GAAM27B,EAAWC,GAAWD,EAAWE,GAAYF,EAAWh3B,MAAOuH,EAAQ85B,EAClH,CAIA,IAAMjK,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASkK,GAAoB7K,EAAKM,EAAYkK,EAAWM,GACrDJ,GAAqB1K,EAAI33B,EAAGi4B,EAAYI,GAAO8J,EAAYA,EAAUniC,OAAI5E,EAAWqnC,EAAYA,EAAUziC,OAAI5E,GAC9GinC,GAAqB1K,EAAI13B,EAAGg4B,EAAYK,GAAO6J,EAAYA,EAAUliC,OAAI7E,EAAWqnC,EAAYA,EAAUxiC,OAAI7E,EAClH,CCjDA,SAASsnC,GAAgB5qB,GACrB,OAA2B,IAApBA,EAAM+d,WAAmC,IAAhB/d,EAAM7W,KAC1C,CACA,SAAS0hC,GAAY7qB,GACjB,OAAO4qB,GAAgB5qB,EAAM9X,IAAM0iC,GAAgB5qB,EAAM7X,EAC7D,CACA,SAAS2iC,GAAUzzB,EAAGC,GAClB,OAAQD,EAAEnP,EAAEU,MAAQ0O,EAAEpP,EAAEU,KACpByO,EAAEnP,EAAEW,MAAQyO,EAAEpP,EAAEW,KAChBwO,EAAElP,EAAES,MAAQ0O,EAAEnP,EAAES,KAChByO,EAAElP,EAAEU,MAAQyO,EAAEnP,EAAEU,GACxB,CACA,SAASkiC,GAAYlL,GACjB,OAAOpC,GAAWoC,EAAI33B,GAAKu1B,GAAWoC,EAAI13B,EAC9C,CChBkE,IAE5D6iC,GAAS,WACX,cAAc,gBACV9qC,KAAK6oC,QAAU,EACnB,CAuGC,OAvGA,4BACD,SAAI3wB,GACAoG,GAActe,KAAK6oC,QAAS3wB,GAC5BA,EAAK6yB,gBACT,GAAC,oBACD,SAAO7yB,GAKH,GAJAwG,GAAW1e,KAAK6oC,QAAS3wB,GACrBA,IAASlY,KAAKgrC,WACdhrC,KAAKgrC,cAAW5nC,GAEhB8U,IAASlY,KAAKirC,KAAM,CACpB,IAAMD,EAAWhrC,KAAK6oC,QAAQ7oC,KAAK6oC,QAAQhpC,OAAS,GAChDmrC,GACAhrC,KAAKyoC,QAAQuC,EAErB,CACJ,GAAC,sBACD,SAAS9yB,GACL,IAMI8yB,EANEE,EAAclrC,KAAK6oC,QAAQsC,WAAU,SAACC,GAAM,OAAKlzB,IAASkzB,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAIv8B,EAAIu8B,EAAav8B,GAAK,EAAGA,IAAK,CACnC,IAAMy8B,EAASprC,KAAK6oC,QAAQl6B,GAC5B,IAAyB,IAArBy8B,EAAOjQ,UAAqB,CAC5B6P,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAhrC,KAAKyoC,QAAQuC,IACN,EAKf,GAAC,qBACD,SAAQ9yB,EAAMmzB,GACV,IAAML,EAAWhrC,KAAKirC,KAClB/yB,IAAS8yB,IAEbhrC,KAAKgrC,SAAWA,EAChBhrC,KAAKirC,KAAO/yB,EACZA,EAAKozB,OACDN,IACAA,EAAS7kC,UAAY6kC,EAASD,iBAC9B7yB,EAAK6yB,iBACL7yB,EAAKqzB,WAAaP,EACdK,IACAnzB,EAAKqzB,WAAWC,iBAAkB,GAElCR,EAASS,WACTvzB,EAAKuzB,SAAWT,EAASS,SACzBvzB,EAAKuzB,SAAS79B,aACVo9B,EAASU,iBAAmBV,EAASp9B,cAEzCsK,EAAK6D,MAAQ7D,EAAK6D,KAAK4vB,aACvBzzB,EAAK0zB,eAAgB,IAGP,IADI1zB,EAAKrK,QAAnBg+B,WAEJb,EAASc,QAerB,GAAC,mCACD,WACI9rC,KAAK6oC,QAAQtzB,SAAQ,SAAC2C,GAClB,IAAQrK,EAA0BqK,EAA1BrK,QAASk+B,EAAiB7zB,EAAjB6zB,aACjBl+B,EAAQutB,gBAAkBvtB,EAAQutB,iBAC9B2Q,GACAA,EAAal+B,QAAQutB,gBACjB2Q,EAAal+B,QAAQutB,gBAEjC,GACJ,GAAC,4BACD,WACIp7B,KAAK6oC,QAAQtzB,SAAQ,SAAC2C,GAClBA,EAAK/R,UAAY+R,EAAK6yB,gBAAe,EACzC,GACJ,GACA,gCAIA,WACQ/qC,KAAKirC,MAAQjrC,KAAKirC,KAAKQ,WACvBzrC,KAAKirC,KAAKQ,cAAWroC,EAE7B,KAAC,EA1GU,GCFf,SAAS4oC,GAAyBlsB,EAAOsnB,EAAW6E,GAChD,IAAIzjC,EAAY,GAOV0jC,EAAapsB,EAAM9X,EAAE61B,UAAYuJ,EAAUp/B,EAC3CmkC,EAAarsB,EAAM7X,EAAE41B,UAAYuJ,EAAUn/B,EAWjD,IAVIikC,GAAcC,KACd3jC,EAAY,eAAH,OAAkB0jC,EAAU,eAAOC,EAAU,YAMtC,IAAhB/E,EAAUp/B,GAA2B,IAAhBo/B,EAAUn/B,IAC/BO,GAAa,SAAJ,OAAa,EAAI4+B,EAAUp/B,EAAC,aAAK,EAAIo/B,EAAUn/B,EAAC,OAEzDgkC,EAAiB,CACjB,IAAQ9/B,EAA6B8/B,EAA7B9/B,OAAQC,EAAqB6/B,EAArB7/B,QAASC,EAAY4/B,EAAZ5/B,QACrBF,IACA3D,GAAa,UAAJ,OAAc2D,EAAM,UAC7BC,IACA5D,GAAa,WAAJ,OAAe4D,EAAO,UAC/BC,IACA7D,GAAa,WAAJ,OAAe6D,EAAO,SACvC,CAKA,IAAM+/B,EAAgBtsB,EAAM9X,EAAEiB,MAAQm+B,EAAUp/B,EAC1CqkC,EAAgBvsB,EAAM7X,EAAEgB,MAAQm+B,EAAUn/B,EAIhD,OAHsB,IAAlBmkC,GAAyC,IAAlBC,IACvB7jC,GAAa,SAAJ,OAAa4jC,EAAa,aAAKC,EAAa,MAElD7jC,GAAa,MACxB,CCvCA,IAAM8jC,GAAiB,SAACn1B,EAAGC,GAAC,OAAKD,EAAEsvB,MAAQrvB,EAAEqvB,KAAK,ECG5C8F,GAAQ,WACV,cAAc,gBACVvsC,KAAKvC,SAAW,GAChBuC,KAAKwsC,SAAU,CACnB,CAaC,OAbA,4BACD,SAAIpzB,GACAkF,GAActe,KAAKvC,SAAU2b,GAC7BpZ,KAAKwsC,SAAU,CACnB,GAAC,oBACD,SAAOpzB,GACHsF,GAAW1e,KAAKvC,SAAU2b,GAC1BpZ,KAAKwsC,SAAU,CACnB,GAAC,qBACD,SAAQ9wB,GACJ1b,KAAKwsC,SAAWxsC,KAAKvC,SAAS85B,KAAK+U,IACnCtsC,KAAKwsC,SAAU,EACfxsC,KAAKvC,SAAS8X,QAAQmG,EAC1B,KAAC,EAjBS,GCmBR+wB,GAAgB,CAAC,GAAI,IAAK,IAAK,KAK/BC,GAAkB,IACpBrvC,GAAK,EACT,SAASsvC,GAAqB,GAA4F,IAA1FC,EAAoB,EAApBA,qBAAsBC,EAAa,EAAbA,cAAeC,EAAa,EAAbA,cAAeC,EAAiB,EAAjBA,kBAAmBC,EAAc,EAAdA,eACnG,kBACI,WAAYC,GAAsH,WAA3Gr/B,EAAe,UAAH,6CAAG,CAAC,EAAG/M,EAAS,UAAH,6CAAqB,OAAlBgsC,QAA4C,IAAlBA,OAA2B,EAASA,KAAe,gBAI5H7sC,KAAK3C,GAAKA,KAIV2C,KAAKktC,YAAc,EAOnBltC,KAAKvC,SAAW,IAAIiK,IAKpB1H,KAAK6N,QAAU,CAAC,EAMhB7N,KAAKmtC,iBAAkB,EACvBntC,KAAK2hC,oBAAqB,EAO1B3hC,KAAK4rC,eAAgB,EACrB5rC,KAAKotC,kBAAmB,EAKxBptC,KAAKqtC,mBAAoB,EAIzBrtC,KAAKstC,uBAAwB,EAC7BttC,KAAKutC,uBAAwB,EAK7BvtC,KAAK2rC,YAAa,EAIlB3rC,KAAKwtC,OAAQ,EAKbxtC,KAAKytC,YAAa,EAIlBztC,KAAK0tC,sBAAuB,EAS5B1tC,KAAKonC,UAAY,CAAEp/B,EAAG,EAAGC,EAAG,GAI5BjI,KAAK2tC,cAAgB,IAAI7mC,IAEzB9G,KAAK4tC,eAAiB,IAAI9mC,IAC1B9G,KAAK6tC,kBAAoB,WACjB,EAAKlC,aACL,EAAKA,YAAa,EAClB,EAAKmC,oBAEb,EAMA9tC,KAAK+tC,iBAAmB,WACpB,EAAKlwC,MAAM0X,QAAQy4B,IACnB,EAAKnwC,MAAM0X,QAAQ04B,IACnB,EAAKpwC,MAAM0X,QAAQ24B,GACvB,EACAluC,KAAKmuC,cAAe,EACpBnuC,KAAKouC,WAAY,EACjBpuC,KAAKquC,kBAAoB,EAKzBruC,KAAKsuC,YAAc,IAAIxnC,IACvB9G,KAAKitC,UAAYA,EACjBjtC,KAAK4N,aAAeA,EACpB5N,KAAK+b,KAAOlb,EAASA,EAAOkb,MAAQlb,EAASb,KAC7CA,KAAKuuC,KAAO1tC,EAAS,GAAH,gBAAOA,EAAO0tC,MAAI,CAAE1tC,IAAU,GAChDb,KAAKa,OAASA,EACdb,KAAKymC,MAAQ5lC,EAASA,EAAO4lC,MAAQ,EAAI,EACzCwG,GAAajtC,KAAK+b,KAAKyyB,sBAAsBvB,EAAWjtC,MACxD,IAAK,IAAI2O,EAAI,EAAGA,EAAI3O,KAAKuuC,KAAK1uC,OAAQ8O,IAClC3O,KAAKuuC,KAAK5/B,GAAG++B,sBAAuB,EAEpC1tC,KAAK+b,OAAS/b,OACdA,KAAKnC,MAAQ,IAAI0uC,GACzB,CAy/BC,OAz/BA,yCACD,SAAiBzpC,EAAMqT,GAInB,OAHKnW,KAAK2tC,cAAc3mC,IAAIlE,IACxB9C,KAAK2tC,cAAc1mC,IAAInE,EAAM,IAAI+b,IAE9B7e,KAAK2tC,cAAc7uC,IAAIgE,GAAM+d,IAAI1K,EAC5C,GAAC,6BACD,SAAgBrT,GAC6C,IAAzD,IAAM2rC,EAAsBzuC,KAAK2tC,cAAc7uC,IAAIgE,GAAM,mBADpC4rC,EAAI,iCAAJA,EAAI,kBAEzBD,GAAuBA,EAAoBruB,OAAM,MAA1BquB,EAA8BC,EACzD,GAAC,0BACD,SAAa5rC,GACT,OAAO9C,KAAK2tC,cAAc3mC,IAAIlE,EAClC,GAAC,mCACD,SAAsBmqC,EAAW/0B,GAC7BlY,KAAK4tC,eAAe3mC,IAAIgmC,EAAW/0B,EACvC,GACA,mBAGA,SAAM/R,GAAiC,WAAvBylC,EAAgB,UAAH,8CACzB,IAAI5rC,KAAKmG,SAAT,CAEAnG,KAAKwtC,MACDrnC,aAAoBwoC,YAAmC,QAArBxoC,EAASxI,QAC/CqC,KAAKmG,SAAWA,EAChB,MAA4CnG,KAAK6N,QAAzCnI,EAAQ,EAARA,SAAUtB,EAAM,EAANA,OAAQrD,EAAa,EAAbA,cAU1B,GATIA,IAAkBA,EAAcQ,SAChCR,EAAcqF,MAAMD,GAExBnG,KAAK+b,KAAKle,MAAMgjB,IAAI7gB,MACpBA,KAAKa,QAAUb,KAAKa,OAAOpD,SAASojB,IAAI7gB,MACxCA,KAAKitC,WAAajtC,KAAK+b,KAAK6xB,eAAepxB,OAAOxc,KAAKitC,WACnDrB,IAAkBxnC,GAAUsB,KAC5B1F,KAAK4rC,eAAgB,GAErBgB,EAAsB,CACtB,IAAIgC,EACEC,EAAsB,WAAH,OAAU,EAAK9yB,KAAKwxB,uBAAwB,CAAK,EAC1EX,EAAqBzmC,GAAU,WAC3B,EAAK4V,KAAKwxB,uBAAwB,EAClCqB,GAAeA,IACfA,EAAcvc,GAAMwc,EAAqB,KACrCrqC,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/C,EAAK5G,MAAM0X,QAAQu5B,IAE3B,GACJ,CACIppC,GACA1F,KAAK+b,KAAKgzB,mBAAmBrpC,EAAU1F,OAGd,IAAzBA,KAAK6N,QAAQjL,SACb7B,IACC2E,GAAYtB,IACbpE,KAAKqW,iBAAiB,aAAa,YAA+E,IAA5EyJ,EAAK,EAALA,MAAOmlB,EAAgB,EAAhBA,iBAAkB+J,EAAwB,EAAxBA,yBAAkCC,EAAS,EAAjB7qC,OACrF,GAAI,EAAK8qC,yBAGL,OAFA,EAAKlwC,YAASoE,OACd,EAAK+rC,oBAAiB/rC,GAI1B,IAAMgsC,EAAmB,EAAKvhC,QAAQ6H,YAClC3U,EAAc+zB,wBACdua,GACJ,EAA+DtuC,EAAcyX,WAArE82B,EAAsB,EAAtBA,uBAAwBC,EAAyB,EAAzBA,0BAK1BC,GAAiB,EAAKC,eACvB7E,GAAU,EAAK6E,aAAcR,IAC9BD,EAMEU,GAAgCzK,GAAoB+J,EAC1D,GAAI,EAAKnhC,QAAQ8hC,YACZ,EAAKpE,YAAc,EAAKA,WAAWplC,UACpCupC,GACCzK,IACIuK,IAAkB,EAAK5Z,kBAAoB,CAC5C,EAAK2V,aACL,EAAKQ,aAAe,EAAKR,WACzB,EAAKQ,aAAaA,kBAAe3oC,GAErC,EAAKwsC,mBAAmB9vB,EAAO4vB,GAC/B,IAAMG,GAAmB,kBAClBza,GAAmBga,EAAkB,WAAS,IACjD1d,OAAQ4d,EACR1d,WAAY2d,KAEZxuC,EAAcq3B,oBACd,EAAKvqB,QAAQ8hC,cACbE,EAAiBxd,MAAQ,EACzBwd,EAAiBtnC,MAAO,GAE5B,EAAK6Y,eAAeyuB,EACxB,MAOS5K,GAC0B,IAA3B,EAAKoJ,mBACLS,GAAgB,GAEhB,EAAKhG,UAAY,EAAKj7B,QAAQutB,gBAC9B,EAAKvtB,QAAQutB,iBAGrB,EAAKqU,aAAeR,CACxB,GA/FM,CAiGd,GAAC,qBACD,WACIjvC,KAAK6N,QAAQnI,UAAY1F,KAAKwoC,aAC9BxoC,KAAK+b,KAAKle,MAAMw6B,OAAOr4B,MACvB,IAAM2oC,EAAQ3oC,KAAK4oC,WACnBD,GAASA,EAAMtQ,OAAOr4B,MACtBA,KAAKa,QAAUb,KAAKa,OAAOpD,SAAS+e,OAAOxc,MAC3CA,KAAKmG,cAAW/C,EAChB4tB,GAAAA,GAAAA,UAAqBhxB,KAAK+tC,iBAC9B,GACA,yBACA,WACI/tC,KAAKstC,uBAAwB,CACjC,GAAC,2BACD,WACIttC,KAAKstC,uBAAwB,CACjC,GAAC,6BACD,WACI,OAAOttC,KAAKstC,uBAAyBttC,KAAKutC,qBAC9C,GAAC,oCACD,WACI,OAAQvtC,KAAK2hC,oBACR3hC,KAAKa,QAAUb,KAAKa,OAAOquC,2BAC5B,CACR,GACA,yBACA,WACQlvC,KAAK8vC,oBAET9vC,KAAK2rC,YAAa,EAClB3rC,KAAKnC,OAASmC,KAAKnC,MAAM0X,QAAQw6B,IACjC/vC,KAAKktC,cACT,GAAC,kCACD,WACI,IAAQnsC,EAAkBf,KAAK6N,QAAvB9M,cACR,OAAOA,GAAiBA,EAAcyX,WAAW1K,iBACrD,GAAC,wBACD,WAAyC,IAA9BkiC,IAAwB,UAAH,+CAC5B,GAAIhwC,KAAK+b,KAAK+zB,kBACV9vC,KAAK6N,QAAQutB,gBAAkBp7B,KAAK6N,QAAQutB,sBAIhD,IADCp7B,KAAK+b,KAAK4vB,YAAc3rC,KAAK+b,KAAKk0B,eAC/BjwC,KAAK4rC,cAAT,CAEA5rC,KAAK4rC,eAAgB,EACrB,IAAK,IAAIj9B,EAAI,EAAGA,EAAI3O,KAAKuuC,KAAK1uC,OAAQ8O,IAAK,CACvC,IAAMuJ,EAAOlY,KAAKuuC,KAAK5/B,GACvBuJ,EAAKw1B,sBAAuB,EAC5Bx1B,EAAKusB,aAAa,YACdvsB,EAAKrK,QAAQ8hC,YACbz3B,EAAKswB,YAAW,EAExB,CACA,MAA6BxoC,KAAK6N,QAA1BnI,EAAQ,EAARA,SAAUtB,EAAM,EAANA,OAClB,QAAiBhB,IAAbsC,GAA2BtB,EAA/B,CAEA,IAAM0J,EAAoB9N,KAAKkwC,uBAC/BlwC,KAAKmwC,2BAA6BriC,EAC5BA,EAAkB9N,KAAK4N,aAAc,SACrCxK,EACNpD,KAAKowC,iBACLJ,GAAyBhwC,KAAKqwC,gBAAgB,aANpC,CAZA,CAmBd,GACA,uBACA,WAKI,GAJyBrwC,KAAK8vC,kBAQ1B,OAHA9vC,KAAKswC,gBACLtwC,KAAK8tC,yBACL9tC,KAAKnC,MAAM0X,QAAQg7B,IAGlBvwC,KAAK2rC,aAEV3rC,KAAK2rC,YAAa,EAOd3rC,KAAK4tC,eAAexiC,OACpBpL,KAAK4tC,eAAer4B,QAAQi7B,IAC5BxwC,KAAK4tC,eAAe3sB,SAKxBjhB,KAAKnC,MAAM0X,QAAQk7B,IAKnBzwC,KAAKnC,MAAM0X,QAAQmvB,IAKnB1kC,KAAKnC,MAAM0X,QAAQm7B,IACnB1wC,KAAK8tC,oBAEL6C,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,YACAA,GAAAA,GAAAA,SACJ,GAAC,+BACD,WACI3wC,KAAKnC,MAAM0X,QAAQq7B,IACnB5wC,KAAKsuC,YAAY/4B,QAAQs7B,GAC7B,GAAC,sCACD,WACI5wB,GAAAA,GAAAA,UAAejgB,KAAK+tC,kBAAkB,GAAO,EACjD,GAAC,uCACD,WAA4B,WAMxB9tB,GAAAA,GAAAA,YAAgB,WACR,EAAK2rB,cACL,EAAK7vB,KAAKqsB,YAGV,EAAKrsB,KAAK8xB,mBAElB,GACJ,GACA,4BAGA,YACQ7tC,KAAKyrC,UAAazrC,KAAKmG,WAE3BnG,KAAKyrC,SAAWzrC,KAAK8wC,UACzB,GAAC,0BACD,WACI,GAAK9wC,KAAKmG,WAGVnG,KAAKykC,eACCzkC,KAAK6N,QAAQkjC,qBAAuB/wC,KAAK8oC,UAC1C9oC,KAAK4rC,eADV,CAWA,GAAI5rC,KAAKurC,aAAevrC,KAAKurC,WAAWplC,SACpC,IAAK,IAAIwI,EAAI,EAAGA,EAAI3O,KAAKuuC,KAAK1uC,OAAQ8O,IAAK,CAC1B3O,KAAKuuC,KAAK5/B,GAClB81B,cACT,CAEJ,IAAMuM,EAAahxC,KAAKoE,OACxBpE,KAAKoE,OAASpE,KAAK8wC,SAAQ,GAC3B9wC,KAAKixC,gBAAkBlS,KACvB/+B,KAAK4rC,eAAgB,EACrB5rC,KAAKqnC,qBAAkBjkC,EACvBpD,KAAKqwC,gBAAgB,UAAWrwC,KAAKoE,OAAO09B,WAC5C,IAAQ/gC,EAAkBf,KAAK6N,QAAvB9M,cACRA,GACIA,EAAcqf,OAAO,gBAAiBpgB,KAAKoE,OAAO09B,UAAWkP,EAAaA,EAAWlP,eAAY1+B,EAtBrG,CAuBJ,GAAC,0BACD,WAAgC,IAAnB8tC,EAAQ,UAAH,6CAAG,UACbC,EAAmBnuC,QAAQhD,KAAK6N,QAAQujC,cAAgBpxC,KAAKmG,UAC7DnG,KAAKujC,QACLvjC,KAAKujC,OAAO2J,cAAgBltC,KAAK+b,KAAKmxB,aACtCltC,KAAKujC,OAAO2N,QAAUA,IACtBC,GAAmB,GAEnBA,IACAnxC,KAAKujC,OAAS,CACV2J,YAAaltC,KAAK+b,KAAKmxB,YACvBgE,MAAAA,EACAG,OAAQtE,EAAkB/sC,KAAKmG,UAC/BsK,OAAQq8B,EAAc9sC,KAAKmG,WAGvC,GAAC,4BACD,WACI,GAAK6mC,EAAL,CAEA,IAAMsE,EAAmBtxC,KAAK4rC,eAAiB5rC,KAAK0tC,qBAC9C6D,EAAgBvxC,KAAKqnC,kBAAoBsD,GAAY3qC,KAAKqnC,iBAC1Dv5B,EAAoB9N,KAAKkwC,uBACzBsB,EAAyB1jC,EACzBA,EAAkB9N,KAAK4N,aAAc,SACrCxK,EACAquC,EAA8BD,IAA2BxxC,KAAKmwC,2BAChEmB,IACCC,GACGrjC,GAAalO,KAAK4N,eAClB6jC,KACJzE,EAAehtC,KAAKmG,SAAUqrC,GAC9BxxC,KAAK0tC,sBAAuB,EAC5B1tC,KAAK+qC,iBAdC,CAgBd,GAAC,qBACD,WAAgC,IAk2BtBpL,EAl2BF+R,IAAkB,UAAH,+CACbC,EAAU3xC,KAAKwjC,iBACjB1B,EAAY9hC,KAAK4xC,oBAAoBD,GAUzC,OAJID,IACA5P,EAAY9hC,KAAK0xC,gBAAgB5P,IA01B7C+P,IADclS,EAv1BGmC,GAw1BH95B,GACd6pC,GAAUlS,EAAI13B,GAx1BC,CACHilC,YAAaltC,KAAK+b,KAAKmxB,YACvB4E,YAAaH,EACb7P,UAAAA,EACAl0B,aAAc,CAAC,EACfqB,OAAQjP,KAAK3C,GAErB,GAAC,4BACD,WACI,IAAQ0D,EAAkBf,KAAK6N,QAAvB9M,cACR,IAAKA,EACD,OAAOg+B,KACX,IAAMY,EAAM5+B,EAAcy/B,qBAElB+C,EAAWvjC,KAAK+b,KAAhBwnB,OAKR,OAJIA,IACAxD,GAAcJ,EAAI33B,EAAGu7B,EAAO9yB,OAAOzI,GACnC+3B,GAAcJ,EAAI13B,EAAGs7B,EAAO9yB,OAAOxI,IAEhC03B,CACX,GAAC,iCACD,SAAoBA,GAChB,IAAMoS,EAAmBhT,KACzBmL,GAAY6H,EAAkBpS,GAK9B,IAAK,IAAIhxB,EAAI,EAAGA,EAAI3O,KAAKuuC,KAAK1uC,OAAQ8O,IAAK,CACvC,IAAMuJ,EAAOlY,KAAKuuC,KAAK5/B,GACf40B,EAAoBrrB,EAApBqrB,OAAQ11B,EAAYqK,EAAZrK,QAChB,GAAIqK,IAASlY,KAAK+b,MAAQwnB,GAAU11B,EAAQujC,aAAc,CAKtD,GAAI7N,EAAO8N,OAAQ,CACfnH,GAAY6H,EAAkBpS,GAC9B,IAAgBqS,EAAehyC,KAAK+b,KAA5BwnB,OAKJyO,IACAjS,GAAcgS,EAAiB/pC,GAAIgqC,EAAWvhC,OAAOzI,GACrD+3B,GAAcgS,EAAiB9pC,GAAI+pC,EAAWvhC,OAAOxI,GAE7D,CACA83B,GAAcgS,EAAiB/pC,EAAGu7B,EAAO9yB,OAAOzI,GAChD+3B,GAAcgS,EAAiB9pC,EAAGs7B,EAAO9yB,OAAOxI,EACpD,CACJ,CACA,OAAO8pC,CACX,GAAC,4BACD,SAAepS,GAA4B,IAAvBsS,EAAgB,UAAH,8CACvBC,EAAiBnT,KACvBmL,GAAYgI,EAAgBvS,GAC5B,IAAK,IAAIhxB,EAAI,EAAGA,EAAI3O,KAAKuuC,KAAK1uC,OAAQ8O,IAAK,CACvC,IAAMuJ,EAAOlY,KAAKuuC,KAAK5/B,IAClBsjC,GACD/5B,EAAKrK,QAAQujC,cACbl5B,EAAKqrB,QACLrrB,IAASA,EAAK6D,MACdwkB,GAAa2R,EAAgB,CACzBlqC,GAAIkQ,EAAKqrB,OAAO9yB,OAAOzI,EACvBC,GAAIiQ,EAAKqrB,OAAO9yB,OAAOxI,IAG1BiG,GAAagK,EAAKtK,eAEvB2yB,GAAa2R,EAAgBh6B,EAAKtK,aACtC,CAIA,OAHIM,GAAalO,KAAK4N,eAClB2yB,GAAa2R,EAAgBlyC,KAAK4N,cAE/BskC,CACX,GAAC,6BACD,SAAgBvS,GACZ,IAAMwS,EAAsBpT,KAC5BmL,GAAYiI,EAAqBxS,GACjC,IAAK,IAAIhxB,EAAI,EAAGA,EAAI3O,KAAKuuC,KAAK1uC,OAAQ8O,IAAK,CACvC,IAAMuJ,EAAOlY,KAAKuuC,KAAK5/B,GACvB,GAAKuJ,EAAK/R,UAEL+H,GAAagK,EAAKtK,cAAvB,CAEAuxB,GAASjnB,EAAKtK,eAAiBsK,EAAKk4B,iBACpC,IAAM3F,EAAY1L,KAElBmL,GAAYO,EADIvyB,EAAKsrB,kBAErBgH,GAAoB2H,EAAqBj6B,EAAKtK,aAAcsK,EAAKuzB,SAAWvzB,EAAKuzB,SAAS3J,eAAY1+B,EAAWqnC,EALrG,CAMhB,CAIA,OAHIv8B,GAAalO,KAAK4N,eAClB48B,GAAoB2H,EAAqBnyC,KAAK4N,cAE3CukC,CACX,GACA,4BAGA,SAAeryB,GACX9f,KAAKoyC,YAActyB,EACnB9f,KAAKqtC,mBAAoB,EACzBrtC,KAAK+b,KAAKs2B,0BACd,GAAC,wBACD,SAAWxkC,GACP7N,KAAK6N,SAAU,0BACR7N,KAAK6N,SACLA,GAAO,IACVg+B,eAAiCzoC,IAAtByK,EAAQg+B,WAA0Bh+B,EAAQg+B,WAE7D,GAAC,+BACD,WACI7rC,KAAKujC,YAASngC,EACdpD,KAAKoE,YAAShB,EACdpD,KAAKyrC,cAAWroC,EAChBpD,KAAKmwC,gCAA6B/sC,EAClCpD,KAAKoyC,iBAAchvC,EACnBpD,KAAKhB,YAASoE,EACdpD,KAAK4rC,eAAgB,CACzB,GACA,gCAGA,WAMI,IAAMX,EAAOjrC,KAAKsyC,UAOlB,GANAtyC,KAAKqtC,oBAAsBrtC,KAAKqtC,kBAAoBpC,EAAKoC,mBACzDrtC,KAAKotC,mBAAqBptC,KAAKotC,iBAAmBnC,EAAKmC,kBAKlDptC,KAAKqtC,mBAAsBrtC,KAAKuyC,+BAArC,CAEA,MAA6BvyC,KAAK6N,QAA1BzJ,EAAM,EAANA,OAAQsB,EAAQ,EAARA,SAIhB,GAAK1F,KAAKoE,SAAYA,GAAUsB,GAAhC,CAQA,IAAK1F,KAAKoyC,cAAgBpyC,KAAKmvC,eAAgB,CAE3C,IAAMqD,EAAiBxyC,KAAKyyC,6BACxBD,GAAkBA,EAAepuC,QACjCpE,KAAKwyC,eAAiBA,EACtBxyC,KAAKmvC,eAAiBpQ,KACtB/+B,KAAK0yC,qBAAuB3T,KAC5Bb,GAAqBl+B,KAAK0yC,qBAAsB1yC,KAAKoE,OAAO09B,UAAW0Q,EAAepuC,OAAO09B,WAC7FoI,GAAYlqC,KAAKmvC,eAAgBnvC,KAAK0yC,uBAGtC1yC,KAAKwyC,eAAiBxyC,KAAKmvC,oBAAiB/rC,CAEpD,CzB5mBZ,IAAyBpE,EAAQg/B,EAAUn9B,EyBinB/B,GAAKb,KAAKmvC,gBAAmBnvC,KAAKoyC,YAwClC,GAnCKpyC,KAAKhB,SACNgB,KAAKhB,OAAS+/B,KACd/+B,KAAK2yC,qBAAuB5T,MAK5B/+B,KAAKmvC,gBACLnvC,KAAK0yC,sBACL1yC,KAAKwyC,gBACLxyC,KAAKwyC,eAAexzC,QzBhoBXA,EyBioBOgB,KAAKhB,OzBjoBJg/B,EyBioBYh+B,KAAKmvC,ezBjoBPtuC,EyBioBuBb,KAAKwyC,eAAexzC,OzBhoBlF++B,GAAiB/+B,EAAOgJ,EAAGg2B,EAASh2B,EAAGnH,EAAOmH,GAC9C+1B,GAAiB/+B,EAAOiJ,EAAG+1B,EAAS/1B,EAAGpH,EAAOoH,IyBooB7BjI,KAAKoyC,aACNpvC,QAAQhD,KAAK+rC,cAEb/rC,KAAKhB,OAASgB,KAAK4yC,eAAe5yC,KAAKoE,OAAO09B,WAG9CoI,GAAYlqC,KAAKhB,OAAQgB,KAAKoE,OAAO09B,WAEzCpC,GAAc1/B,KAAKhB,OAAQgB,KAAKoyC,cAMhClI,GAAYlqC,KAAKhB,OAAQgB,KAAKoE,OAAO09B,WAKrC9hC,KAAKuyC,+BAAgC,CACrCvyC,KAAKuyC,gCAAiC,EACtC,IAAMC,EAAiBxyC,KAAKyyC,6BACxBD,GACAxvC,QAAQwvC,EAAezG,gBACnB/oC,QAAQhD,KAAK+rC,gBAChByG,EAAe3kC,QAAQujC,cACxBoB,EAAexzC,QACfgB,KAAKwyC,eAAiBA,EACtBxyC,KAAKmvC,eAAiBpQ,KACtB/+B,KAAK0yC,qBAAuB3T,KAC5Bb,GAAqBl+B,KAAK0yC,qBAAsB1yC,KAAKhB,OAAQwzC,EAAexzC,QAC5EkrC,GAAYlqC,KAAKmvC,eAAgBnvC,KAAK0yC,uBAGtC1yC,KAAKwyC,eAAiBxyC,KAAKmvC,oBAAiB/rC,CAEpD,CAlFU,CANA,CAyFd,GAAC,wCACD,WACI,GAAKpD,KAAKa,SACNs+B,GAASn/B,KAAKa,OAAO+M,gBACrBwxB,GAAep/B,KAAKa,OAAO+M,cAG/B,OAAK5N,KAAKa,OAAOsuC,gBACbnvC,KAAKa,OAAOuxC,aACZpyC,KAAKa,OAAOgN,QAAQ8hC,aACpB3vC,KAAKa,OAAOuD,OACLpE,KAAKa,OAGLb,KAAKa,OAAO4xC,4BAE3B,GAAC,4BACD,WACI,IAAQpF,EAAwCrtC,KAAxCqtC,kBAAmBD,EAAqBptC,KAArBotC,iBAC3BptC,KAAKqtC,kBAAoBrtC,KAAKotC,kBAAmB,EACjD,IAAMnC,EAAOjrC,KAAKsyC,UACZO,EAAW7vC,QAAQhD,KAAK+rC,eAAiB/rC,OAASirC,EACpD6H,GAAU,EAKd,GAJIzF,IACAyF,GAAU,GACVD,GAAYzF,IACZ0F,GAAU,IACVA,EAAJ,CAEA,MAA6B9yC,KAAK6N,QAA1BzJ,EAAM,EAANA,OAAQsB,EAAQ,EAARA,SAWhB,GANA1F,KAAKmtC,gBAAkBnqC,QAAShD,KAAKa,QAAUb,KAAKa,OAAOssC,iBACvDntC,KAAK41B,kBACL51B,KAAK+yC,kBACJ/yC,KAAKmtC,kBACNntC,KAAKoyC,YAAcpyC,KAAKmvC,oBAAiB/rC,GAExCpD,KAAKoE,SAAYA,GAAUsB,GAAhC,CAMAwkC,GAAYlqC,KAAKixC,gBAAiBjxC,KAAKoE,OAAO09B,WnB5sB1D,SAAyBnC,EAAKyH,EAAW4L,GAAsC,IAA5BC,EAAqB,UAAH,8CAC3DC,EAAaF,EAASnzC,OAC5B,GAAKqzC,EAAL,CAIA,IAAIh7B,EACA4H,EAFJsnB,EAAUp/B,EAAIo/B,EAAUn/B,EAAI,EAG5B,IAAK,IAAI0G,EAAI,EAAGA,EAAIukC,EAAYvkC,IAAK,CAEjCmR,GADA5H,EAAO86B,EAASrkC,IACH04B,gBAKb,IAAMlhC,EAAW+R,EAAK/R,SAClBA,GACAA,EAAS4H,OACkB,aAA3B5H,EAAS4H,MAAMolC,UAGfF,GACA/6B,EAAKrK,QAAQujC,cACbl5B,EAAKqrB,QACLrrB,IAASA,EAAK6D,MACdwkB,GAAaZ,EAAK,CACd33B,GAAIkQ,EAAKqrB,OAAO9yB,OAAOzI,EACvBC,GAAIiQ,EAAKqrB,OAAO9yB,OAAOxI,IAG3B6X,IAEAsnB,EAAUp/B,GAAK8X,EAAM9X,EAAEiB,MACvBm+B,EAAUn/B,GAAK6X,EAAM7X,EAAEgB,MAEvBy2B,GAAcC,EAAK7f,IAEnBmzB,GAAsB/kC,GAAagK,EAAKtK,eACxC2yB,GAAaZ,EAAKznB,EAAKtK,cAE/B,CAKAw5B,EAAUp/B,EAAI43B,GAAcwH,EAAUp/B,GACtCo/B,EAAUn/B,EAAI23B,GAAcwH,EAAUn/B,EA3C5B,CA4Cd,CmBkqBYmrC,CAAgBpzC,KAAKixC,gBAAiBjxC,KAAKonC,UAAWpnC,KAAKuuC,KAAMsE,GACjE,IAAQ7zC,EAAWisC,EAAXjsC,OACR,GAAKA,EAAL,CAEKgB,KAAKqnC,kBACNrnC,KAAKqnC,gBAAkBvI,KACvB9+B,KAAKqzC,6BAA+BvU,MAExC,IAAMwU,EAAiBtzC,KAAKonC,UAAUp/B,EAChCurC,EAAiBvzC,KAAKonC,UAAUn/B,EAChCurC,EAA0BxzC,KAAKyzC,oBAUrC3V,GAAa99B,KAAKqnC,gBAAiBrnC,KAAKixC,gBAAiBjyC,EAAQgB,KAAK4N,cACtE5N,KAAKyzC,oBAAsBzH,GAAyBhsC,KAAKqnC,gBAAiBrnC,KAAKonC,WAC3EpnC,KAAKyzC,sBAAwBD,GAC7BxzC,KAAKonC,UAAUp/B,IAAMsrC,GACrBtzC,KAAKonC,UAAUn/B,IAAMsrC,IACrBvzC,KAAKmuC,cAAe,EACpBnuC,KAAK+qC,iBACL/qC,KAAKqwC,gBAAgB,mBAAoBrxC,GAxBnC,CAbA,CAbA,CAoDd,GAAC,kBACD,WACIgB,KAAKouC,WAAY,CAErB,GAAC,kBACD,WACIpuC,KAAKouC,WAAY,CAErB,GAAC,4BACD,WAAiC,IAAlBsF,IAAY,UAAH,+CAEpB,GADA1zC,KAAK6N,QAAQk9B,gBAAkB/qC,KAAK6N,QAAQk9B,iBACxC2I,EAAW,CACX,IAAM/K,EAAQ3oC,KAAK4oC,WACnBD,GAASA,EAAMoC,gBACnB,CACI/qC,KAAK+rC,eAAiB/rC,KAAK+rC,aAAa5lC,WACxCnG,KAAK+rC,kBAAe3oC,EAE5B,GAAC,gCACD,SAAmB0c,GAA6C,WAAtC4vB,EAA+B,UAAH,8CAC5CjE,EAAWzrC,KAAKyrC,SAChBkI,EAAuBlI,EACvBA,EAAS79B,aACT,CAAC,EACDgmC,GAAc,UAAK5zC,KAAK4N,cACxBwkC,EAActT,KACf9+B,KAAKwyC,gBACLxyC,KAAKwyC,eAAe3kC,QAAQ8hC,aAC7B3vC,KAAKmvC,eAAiBnvC,KAAK0yC,0BAAuBtvC,GAEtDpD,KAAKuyC,gCAAkC7C,EACvC,IAAMmE,EAAiB9U,KAGjB+U,GAFiBrI,EAAWA,EAASx8B,YAAS7L,MAC/BpD,KAAKoE,OAASpE,KAAKoE,OAAO6K,YAAS7L,GAElDulC,EAAQ3oC,KAAK4oC,WACbmL,GAAgBpL,GAASA,EAAME,QAAQhpC,QAAU,EACjDm0C,EAAyBhxC,QAAQ8wC,IAClCC,IAC0B,IAA3B/zC,KAAK6N,QAAQg+B,YACZ7rC,KAAKuuC,KAAK1rC,KAAKoxC,KACpBj0C,KAAKquC,kBAAoB,EACzBruC,KAAKk0C,eAAiB,SAAC5P,GACnB,IAwdArgB,EAAQyC,EAAMc,EAAIpnB,EAxdZqnB,EAAW6c,EAAS,IAC1B6P,GAAa/B,EAAYpqC,EAAG8X,EAAM9X,EAAGyf,GACrC0sB,GAAa/B,EAAYnqC,EAAG6X,EAAM7X,EAAGwf,GACrC,EAAK2sB,eAAehC,GAChB,EAAKjD,gBACL,EAAKuD,sBACL,EAAKtuC,QACL,EAAKouC,gBACL,EAAKA,eAAepuC,SACpB85B,GAAqB2V,EAAgB,EAAKzvC,OAAO09B,UAAW,EAAK0Q,eAAepuC,OAAO09B,WA+c3F7d,EA9cW,EAAKkrB,eA8cRzoB,EA9cwB,EAAKgsB,qBA8cvBlrB,EA9c6CqsB,EA8czCzzC,EA9cyDqnB,EA+cvF4sB,GAAQpwB,EAAOjc,EAAG0e,EAAK1e,EAAGwf,EAAGxf,EAAG5H,GAChCi0C,GAAQpwB,EAAOhc,EAAGye,EAAKze,EAAGuf,EAAGvf,EAAG7H,IA9chB0zC,IACA,EAAKpI,gBAAkBkI,ERp0B3C,SAAmB50C,EAAQs1C,EAAQrJ,EAAMxjB,EAAUusB,EAAwBD,GACnEC,GACAh1C,EAAOkO,QAAUmH,GAAI,OAEJjR,IAAjB6nC,EAAK/9B,QAAwB+9B,EAAK/9B,QAAU,EAAG28B,GAAgBpiB,IAC/DzoB,EAAOu1C,YAAclgC,QAAuBjR,IAAnBkxC,EAAOpnC,QAAwBonC,EAAOpnC,QAAU,EAAG,EAAG68B,GAAiBtiB,KAE3FssB,IACL/0C,EAAOkO,QAAUmH,QAAuBjR,IAAnBkxC,EAAOpnC,QAAwBonC,EAAOpnC,QAAU,OAAoB9J,IAAjB6nC,EAAK/9B,QAAwB+9B,EAAK/9B,QAAU,EAAGua,IAK3H,IAAK,IAAI9Y,EAAI,EAAGA,EAAI66B,GAAY76B,IAAK,CACjC,IAAM6lC,EAAc,SAAH,OAAYjL,GAAQ56B,GAAE,UACnC8lC,EAAe9K,GAAU2K,EAAQE,GACjCE,EAAa/K,GAAUsB,EAAMuJ,QACZpxC,IAAjBqxC,QAA6CrxC,IAAfsxC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAhL,GAAK+K,KAAkB/K,GAAKgL,IAE5B11C,EAAOw1C,GAAe5rC,KAAKD,IAAI0L,GAAIo1B,GAASgL,GAAehL,GAASiL,GAAajtB,GAAW,IACxF3d,GAAQxC,KAAKotC,IAAe5qC,GAAQxC,KAAKmtC,MACzCz1C,EAAOw1C,IAAgB,MAI3Bx1C,EAAOw1C,GAAeE,EAE9B,EAIIJ,EAAOnoC,QAAU8+B,EAAK9+B,UACtBnN,EAAOmN,OAASkI,GAAIigC,EAAOnoC,QAAU,EAAG8+B,EAAK9+B,QAAU,EAAGsb,GAElE,CQ6xBoBktB,CAAUf,EAAaD,EAAsB,EAAK/lC,aAAc6Z,EAAUusB,EAAwBD,IAEtG,EAAKh4B,KAAKs2B,2BACV,EAAKtH,iBACL,EAAKsD,kBAAoB5mB,CAC7B,EACAznB,KAAKk0C,eAAel0C,KAAK6N,QAAQ8hC,WAAa,IAAO,EACzD,GAAC,4BACD,SAAe9hC,GAAS,WACpB7N,KAAKqwC,gBAAgB,kBACrBrwC,KAAK41B,kBAAoB51B,KAAK41B,iBAAiB7U,OAC3C/gB,KAAK+rC,cAAgB/rC,KAAK+rC,aAAanW,kBACvC51B,KAAK+rC,aAAanW,iBAAiB7U,OAEnC/gB,KAAK+yC,mBACL/hB,GAAAA,GAAAA,OAAkBhxB,KAAK+yC,kBACvB/yC,KAAK+yC,sBAAmB3vC,GAO5BpD,KAAK+yC,iBAAmB9yB,GAAAA,GAAAA,QAAY,WAChCzb,EAAsBC,wBAAyB,EAC/C,EAAKmxB,iBCz0BrB,SAAiBlP,EAAMc,GAAqB,IAAjB9R,EAAa,UAAH,6CAAG,CAAC,EAC/B5V,EAAQ+H,EAAc6e,GAAQA,EAAO7E,GAAY6E,GAEvD,OADA5mB,EAAM2C,MAAM4yB,GAA2B,GAAIv1B,EAAO0nB,EAAI9R,IAC/C,CACHqL,KAAM,kBAAMjhB,EAAMihB,MAAM,EACxB6zB,YAAa,kBAAM90C,EAAM80C,aAAa,EAE9C,CDk0BwChyC,CAAQ,EAAG8pC,IAAiB,kBAC7C7+B,GAAO,IACVikB,SAAU,SAACwS,GACP,EAAK4P,eAAe5P,GACpBz2B,EAAQikB,UAAYjkB,EAAQikB,SAASwS,EACzC,EACA1S,WAAY,WACR/jB,EAAQ+jB,YAAc/jB,EAAQ+jB,aAC9B,EAAKijB,mBACT,KAEA,EAAK9I,eACL,EAAKA,aAAanW,iBAAmB,EAAKA,kBAE9C,EAAKmd,sBAAmB3vC,CAC5B,GACJ,GAAC,+BACD,WACQpD,KAAK+rC,eACL/rC,KAAK+rC,aAAanW,sBAAmBxyB,EACrCpD,KAAK+rC,aAAaP,qBAAkBpoC,GAExC,IAAMulC,EAAQ3oC,KAAK4oC,WACnBD,GAASA,EAAMmM,wBACf90C,KAAK+rC,aACD/rC,KAAK41B,iBACD51B,KAAK0rC,qBACDtoC,EACZpD,KAAKqwC,gBAAgB,oBACzB,GAAC,6BACD,WACQrwC,KAAK41B,mBACL51B,KAAKk0C,gBAAkBl0C,KAAKk0C,eAAexH,IAC3C1sC,KAAK41B,iBAAiB7U,QAE1B/gB,KAAK60C,mBACT,GAAC,qCACD,WACI,IAAM5J,EAAOjrC,KAAKsyC,UACZK,EAAuD1H,EAAvD0H,qBAAsB3zC,EAAiCisC,EAAjCjsC,OAAQoF,EAAyB6mC,EAAzB7mC,OAAQwJ,EAAiBq9B,EAAjBr9B,aAC5C,GAAK+kC,GAAyB3zC,GAAWoF,EAAzC,CAOA,GAAIpE,OAASirC,GACTjrC,KAAKoE,QACLA,GACA2wC,GAA0B/0C,KAAK6N,QAAQmnC,cAAeh1C,KAAKoE,OAAO09B,UAAW19B,EAAO09B,WAAY,CAChG9iC,EAASgB,KAAKhB,QAAU+/B,KACxB,IAAMkW,EAAU1X,GAAWv9B,KAAKoE,OAAO09B,UAAU95B,GACjDhJ,EAAOgJ,EAAEU,IAAMuiC,EAAKjsC,OAAOgJ,EAAEU,IAC7B1J,EAAOgJ,EAAEW,IAAM3J,EAAOgJ,EAAEU,IAAMusC,EAC9B,IAAMC,EAAU3X,GAAWv9B,KAAKoE,OAAO09B,UAAU75B,GACjDjJ,EAAOiJ,EAAES,IAAMuiC,EAAKjsC,OAAOiJ,EAAES,IAC7B1J,EAAOiJ,EAAEU,IAAM3J,EAAOiJ,EAAES,IAAMwsC,CAClC,CACAhL,GAAYyI,EAAsB3zC,GAMlCuhC,GAAaoS,EAAsB/kC,GAOnCkwB,GAAa99B,KAAKqzC,6BAA8BrzC,KAAKixC,gBAAiB0B,EAAsB/kC,EA/BlF,CAgCd,GAAC,gCACD,SAAmBlI,EAAUwS,GACpBlY,KAAKsuC,YAAYtnC,IAAItB,IACtB1F,KAAKsuC,YAAYrnC,IAAIvB,EAAU,IAAIolC,IAEzB9qC,KAAKsuC,YAAYxvC,IAAI4G,GAC7Bmb,IAAI3I,GACV,IAAMvD,EAASuD,EAAKrK,QAAQsnC,uBAC5Bj9B,EAAKuwB,QAAQ,CACT/yB,WAAYf,EAASA,EAAOe,gBAAatS,EACzCioC,sBAAuB12B,GAAUA,EAAOygC,4BAClCzgC,EAAOygC,4BAA4Bl9B,QACnC9U,GAEd,GAAC,oBACD,WACI,IAAMulC,EAAQ3oC,KAAK4oC,WACnB,OAAOD,GAAQA,EAAMsC,OAASjrC,IAClC,GAAC,qBACD,WACI,IAAI/C,EAEJ,OADqB+C,KAAK6N,QAAlBnI,WACsC,QAA1BzI,EAAK+C,KAAK4oC,kBAA+B,IAAP3rC,OAAgB,EAASA,EAAGguC,OAAgBjrC,IACtG,GAAC,yBACD,WACI,IAAI/C,EAEJ,OADqB+C,KAAK6N,QAAlBnI,SACqC,QAA1BzI,EAAK+C,KAAK4oC,kBAA+B,IAAP3rC,OAAgB,EAASA,EAAG+tC,cAAW5nC,CAChG,GAAC,sBACD,WACI,IAAQsC,EAAa1F,KAAK6N,QAAlBnI,SACR,GAAIA,EACA,OAAO1F,KAAK+b,KAAKuyB,YAAYxvC,IAAI4G,EACzC,GAAC,qBACD,WAAiE,6DAAJ,CAAC,EAApD+nC,EAAU,EAAVA,WAAY/3B,EAAU,EAAVA,WAAY21B,EAAqB,EAArBA,sBACxB1C,EAAQ3oC,KAAK4oC,WACfD,GACAA,EAAMF,QAAQzoC,KAAMqrC,GACpBoC,IACAztC,KAAKqnC,qBAAkBjkC,EACvBpD,KAAKytC,YAAa,GAElB/3B,GACA1V,KAAKsoC,WAAW,CAAE5yB,WAAAA,GAC1B,GAAC,sBACD,WACI,IAAMizB,EAAQ3oC,KAAK4oC,WACnB,QAAID,GACOA,EAAMD,SAAS1oC,KAK9B,GAAC,2BACD,WACI,IAAQe,EAAkBf,KAAK6N,QAAvB9M,cACR,GAAKA,EAAL,CAGA,IAAIs0C,GAAY,EAKRznC,EAAiB7M,EAAjB6M,aAQR,IAPIA,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACb+oC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZ3mC,EAAI,EAAGA,EAAI89B,GAAc5sC,OAAQ8O,IAAK,CAC3C,IAAMrK,EAAM,SAAWmoC,GAAc99B,GAEjCf,EAAatJ,KACbgxC,EAAYhxC,GAAOsJ,EAAatJ,GAChCvD,EAAcw0C,eAAejxC,EAAK,GAE1C,CAKA,IAAK,IAAMA,KAFXvD,EAAcc,SAEIyzC,EACdv0C,EAAcw0C,eAAejxC,EAAKgxC,EAAYhxC,IAIlDvD,EAAcgqC,gBApBJ,CAhBA,CAqCd,GAAC,iCACD,WAAoC,IAC5B9tC,EAAIS,EADQwV,EAAY,UAAH,6CAAG,CAAC,EAGvBsiC,EAAS,CAAC,EAChB,IAAKx1C,KAAKmG,UAAYnG,KAAKwtC,MACvB,OAAOgI,EACX,IAAKx1C,KAAKouC,UACN,MAAO,CAAEqH,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAM3nC,EAAoB9N,KAAKkwC,uBAC/B,GAAIlwC,KAAKytC,WAQL,OAPAztC,KAAKytC,YAAa,EAClB+H,EAAOtoC,QAAU,GACjBsoC,EAAOE,cACHlhC,GAAmBtB,EAAUwiC,gBAAkB,GACnDF,EAAOhtC,UAAYsF,EACbA,EAAkB9N,KAAK4N,aAAc,IACrC,OACC4nC,EAEX,IAAMvK,EAAOjrC,KAAKsyC,UAClB,IAAKtyC,KAAKqnC,kBAAoBrnC,KAAKoE,SAAW6mC,EAAKjsC,OAAQ,CACvD,IAAM22C,EAAc,CAAC,EAerB,OAdI31C,KAAK6N,QAAQnI,WACbiwC,EAAYzoC,aACsB9J,IAA9BpD,KAAK4N,aAAaV,QACZlN,KAAK4N,aAAaV,QAClB,EACVyoC,EAAYD,cACRlhC,GAAmBtB,EAAUwiC,gBAAkB,IAEnD11C,KAAKmuC,eAAiBjgC,GAAalO,KAAK4N,gBACxC+nC,EAAYntC,UAAYsF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN9N,KAAKmuC,cAAe,GAEjBwH,CACX,CACA,IAAMC,EAAiB3K,EAAKS,iBAAmBT,EAAKr9B,aACpD5N,KAAK61C,0BACLL,EAAOhtC,UAAYwjC,GAAyBhsC,KAAKqzC,6BAA8BrzC,KAAKonC,UAAWwO,GAC3F9nC,IACA0nC,EAAOhtC,UAAYsF,EAAkB8nC,EAAgBJ,EAAOhtC,YAEhE,MAAiBxI,KAAKqnC,gBAAdr/B,EAAC,EAADA,EAAGC,EAAC,EAADA,EA+BX,IAAK,IAAM3D,KA9BXkxC,EAAOvnC,gBAAkB,GAAH,OAAiB,IAAXjG,EAAEwI,OAAY,aAAgB,IAAXvI,EAAEuI,OAAY,OACzDy6B,EAAKS,gBAKL8J,EAAOtoC,QACH+9B,IAASjrC,KACiG,QAAnGtC,EAAuC,QAAjCT,EAAK24C,EAAe1oC,eAA4B,IAAPjQ,EAAgBA,EAAK+C,KAAK4N,aAAaV,eAA4B,IAAPxP,EAAgBA,EAAK,EACjIsC,KAAKwrC,gBACDxrC,KAAK4N,aAAaV,QAClB0oC,EAAerB,YAO7BiB,EAAOtoC,QACH+9B,IAASjrC,UACwBoD,IAA3BwyC,EAAe1oC,QACX0oC,EAAe1oC,QACf,QAC2B9J,IAA/BwyC,EAAerB,YACXqB,EAAerB,YACf,EAKAhtC,EACd,QAA4BnE,IAAxBwyC,EAAetxC,GAAnB,CAEA,MAA6BiD,EAAgBjD,GAArC+hC,EAAO,EAAPA,QAASgD,EAAO,EAAPA,QAOXyM,EAAiC,SAArBN,EAAOhtC,UACnBotC,EAAetxC,GACf+hC,EAAQuP,EAAetxC,GAAM2mC,GACnC,GAAI5B,EAEA,IADA,IAAM0M,EAAM1M,EAAQxpC,OACX8O,EAAI,EAAGA,EAAIonC,EAAKpnC,IACrB6mC,EAAOnM,EAAQ16B,IAAMmnC,OAIzBN,EAAOlxC,GAAOwxC,CAlBN,CAgChB,OANI91C,KAAK6N,QAAQnI,WACb8vC,EAAOE,cACHzK,IAASjrC,KACHwU,GAAmBtB,EAAUwiC,gBAAkB,GAC/C,QAEPF,CACX,GAAC,2BACD,WACIx1C,KAAKurC,WAAavrC,KAAKyrC,cAAWroC,CACtC,GACA,uBACA,WACIpD,KAAK+b,KAAKle,MAAM0X,SAAQ,SAAC2C,GAAW,IAAIjb,EAAI,OAAwC,QAAhCA,EAAKib,EAAK0d,wBAAqC,IAAP34B,OAAgB,EAASA,EAAG8jB,MAAQ,IAChI/gB,KAAK+b,KAAKle,MAAM0X,QAAQg7B,IACxBvwC,KAAK+b,KAAKuyB,YAAYrtB,OAC1B,KAAC,EA7mCL,EA+mCJ,CACA,SAASyjB,GAAaxsB,GAClBA,EAAKwsB,cACT,CACA,SAASgM,GAAmBx4B,GACxB,IAAIjb,EACEwuC,GAAuC,QAA1BxuC,EAAKib,EAAKqzB,kBAA+B,IAAPtuC,OAAgB,EAASA,EAAGwuC,WAAavzB,EAAKuzB,SACnG,GAAIvzB,EAAK4wB,UACL5wB,EAAK9T,QACLqnC,GACAvzB,EAAK89B,aAAa,aAAc,CAChC,MAA2D99B,EAAK9T,OAA7CA,EAAM,EAAjB09B,UAAgCmU,EAAc,EAA3BnE,YACnBkD,EAAkB98B,EAAKrK,QAAvBmnC,cACFnC,EAAWpH,EAASx8B,SAAWiJ,EAAK9T,OAAO6K,OAG3B,SAAlB+lC,EACAhW,IAAS,SAACxB,GACN,IAAM0Y,EAAerD,EACfpH,EAASqG,YAAYtU,GACrBiO,EAAS3J,UAAUtE,GACnB39B,EAAS09B,GAAW2Y,GAC1BA,EAAaxtC,IAAMtE,EAAOo5B,GAAM90B,IAChCwtC,EAAavtC,IAAMutC,EAAaxtC,IAAM7I,CAC1C,IAEKk1C,GAA0BC,EAAevJ,EAAS3J,UAAW19B,IAClE46B,IAAS,SAACxB,GACN,IAAM0Y,EAAerD,EACfpH,EAASqG,YAAYtU,GACrBiO,EAAS3J,UAAUtE,GACnB39B,EAAS09B,GAAWn5B,EAAOo5B,IACjC0Y,EAAavtC,IAAMutC,EAAaxtC,IAAM7I,CAC1C,IAEJ,IAAMs2C,EAAcrX,KACpBhB,GAAaqY,EAAa/xC,EAAQqnC,EAAS3J,WAC3C,IAAMsU,EAActX,KAChB+T,EACA/U,GAAasY,EAAal+B,EAAK06B,eAAeqD,GAAgB,GAAOxK,EAASqG,aAG9EhU,GAAasY,EAAahyC,EAAQqnC,EAAS3J,WAE/C,IAAMmD,GAAoB0F,GAAYwL,GAClCnH,GAA2B,EAC/B,IAAK92B,EAAKqzB,WAAY,CAClB,IAAMiH,EAAiBt6B,EAAKu6B,6BAK5B,GAAID,IAAmBA,EAAejH,WAAY,CAC9C,IAAkB8K,EAAyC7D,EAAnD/G,SAAkC6K,EAAiB9D,EAAzBpuC,OAClC,GAAIiyC,GAAkBC,EAAc,CAChC,IAAMC,EAAmBxX,KACzBb,GAAqBqY,EAAkB9K,EAAS3J,UAAWuU,EAAevU,WAC1E,IAAM+R,EAAiB9U,KACvBb,GAAqB2V,EAAgBzvC,EAAQkyC,EAAaxU,WACrD8I,GAAU2L,EAAkB1C,KAC7B7E,GAA2B,GAE3BwD,EAAe3kC,QAAQ8hC,aACvBz3B,EAAKi3B,eAAiB0E,EACtB37B,EAAKw6B,qBAAuB6D,EAC5Br+B,EAAKs6B,eAAiBA,EAE9B,CACJ,CACJ,CACAt6B,EAAKm4B,gBAAgB,YAAa,CAC9BjsC,OAAAA,EACAqnC,SAAAA,EACA3rB,MAAOs2B,EACPD,YAAAA,EACAlR,iBAAAA,EACA+J,yBAAAA,GAER,MACK,GAAI92B,EAAK4wB,SAAU,CACpB,IAAQ1N,EAAmBljB,EAAKrK,QAAxButB,eACRA,GAAkBA,GACtB,CAMAljB,EAAKrK,QAAQ6H,gBAAatS,CAC9B,CACA,SAAS4qC,GAAoB91B,GAKzBA,EAAKm1B,oBAAsBn1B,EAAKm1B,kBAAoBrqC,QAAQkV,EAAKrX,QAAUqX,EAAKrX,OAAOwsC,oBAIvFn1B,EAAKk1B,mBAAqBl1B,EAAKk1B,iBAAmBpqC,QAAQkV,EAAKrX,QAAUqX,EAAKrX,OAAOusC,kBACzF,CACA,SAASwD,GAAc14B,GACnBA,EAAK04B,eACT,CACA,SAASL,GAAkBr4B,GACvBA,EAAKq4B,mBACT,CACA,SAASE,GAAoBv4B,GACzB,IAAQnX,EAAkBmX,EAAKrK,QAAvB9M,cACJA,GAAiBA,EAAcyX,WAAWg+B,uBAC1Cz1C,EAAcqf,OAAO,uBAEzBlI,EAAK80B,gBACT,CACA,SAAS8B,GAAgB52B,GACrBA,EAAK42B,kBACL52B,EAAKk6B,YAAcl6B,EAAKi3B,eAAiBj3B,EAAKlZ,YAASoE,CAC3D,CACA,SAAS6qC,GAAmB/1B,GACxBA,EAAK+1B,oBACT,CACA,SAASC,GAAeh2B,GACpBA,EAAKg2B,gBACT,CACA,SAAS6B,GAAc73B,GACnBA,EAAK63B,eACT,CACA,SAASc,GAAoBlI,GACzBA,EAAM8N,oBACV,CACA,SAAStC,GAAalwB,EAAQnE,EAAO1f,GACjC6jB,EAAO4Z,UAAYxpB,GAAIyL,EAAM+d,UAAW,EAAGz9B,GAC3C6jB,EAAOhb,MAAQoL,GAAIyL,EAAM7W,MAAO,EAAG7I,GACnC6jB,EAAOzT,OAASsP,EAAMtP,OACtByT,EAAO2Z,YAAc9d,EAAM8d,WAC/B,CACA,SAASyW,GAAQpwB,EAAQyC,EAAMc,EAAIpnB,GAC/B6jB,EAAOvb,IAAM2L,GAAIqS,EAAKhe,IAAK8e,EAAG9e,IAAKtI,GACnC6jB,EAAOtb,IAAM0L,GAAIqS,EAAK/d,IAAK6e,EAAG7e,IAAKvI,EACvC,CAKA,SAAS6zC,GAAoB/7B,GACzB,OAAQA,EAAKwzB,sBAAwDtoC,IAArC8U,EAAKwzB,gBAAgB6I,WACzD,CACA,IAAMlF,GAA0B,CAC5B/iB,SAAU,IACVjD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAASmnB,GAAet4B,EAAM+0B,GAM1B,IADA,IAAIyJ,EAAax+B,EAAK6D,KACbpN,EAAIuJ,EAAKq2B,KAAK1uC,OAAS,EAAG8O,GAAK,EAAGA,IACvC,GAAI3L,QAAQkV,EAAKq2B,KAAK5/B,GAAGxI,UAAW,CAChCuwC,EAAax+B,EAAKq2B,KAAK5/B,GACvB,KACJ,CAEJ,IACMsE,GADgByjC,GAAcA,IAAex+B,EAAK6D,KAAO26B,EAAWvwC,SAAW8V,UACvD06B,cAAc,wBAAD,OAAyB1J,EAAS,OACzEh6B,GACAiF,EAAK9R,MAAM6M,GAAS,EAC5B,CACA,SAAS4+B,GAAUrU,GACfA,EAAK90B,IAAME,KAAKQ,MAAMo0B,EAAK90B,KAC3B80B,EAAK70B,IAAMC,KAAKQ,MAAMo0B,EAAK70B,IAC/B,CAKA,SAASosC,GAA0BC,EAAevJ,EAAUrnC,GACxD,MAA0B,aAAlB4wC,GACe,oBAAlBA,IACIvX,GAAOoN,GAAYY,GAAWZ,GAAYzmC,GAAS,GAChE,CE9zCA,ICoBIwyC,GDpBEC,GAAyBlK,GAAqB,CAChDC,qBAAsB,SAACvqC,EAAK+d,GAAM,OAAKnK,GAAY5T,EAAK,SAAU+d,EAAO,EACzE0sB,cAAe,iBAAO,CAClB9kC,EAAGiU,SAAS66B,gBAAgBC,YAAc96B,SAAS+6B,KAAKD,WACxD9uC,EAAGgU,SAAS66B,gBAAgBG,WAAah7B,SAAS+6B,KAAKC,UAC1D,EACDlK,kBAAmB,kBAAM,CAAI,IEN3B1J,GAAqB,CACvB9hC,aAAS6B,GAEP8zC,GAAqBvK,GAAqB,CAC5CG,cAAe,SAAC3mC,GAAQ,MAAM,CAC1B6B,EAAG7B,EAAS4wC,WACZ9uC,EAAG9B,EAAS8wC,UACf,EACDpK,cAAe,WACX,IAAKxJ,GAAmB9hC,QAAS,CAC7B,IAAM41C,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAa/wC,MAAMpE,QACnBm1C,EAAa7O,WAAW,CAAE8I,cAAc,IACxC/N,GAAmB9hC,QAAU41C,CACjC,CACA,OAAO9T,GAAmB9hC,OAC9B,EACAyrC,eAAgB,SAAC7mC,EAAUrG,GACvBqG,EAAS4H,MAAMvF,eAAsBpF,IAAVtD,EAAsBA,EAAQ,MAC7D,EACAitC,kBAAmB,SAAC5mC,GAAQ,OAAKnD,QAAuD,UAA/ChB,OAAO6kC,iBAAiB1gC,GAAUixC,SAAqB,IClB9FtzC,GAAO,CACTI,IAAK,CACD+T,QAASstB,IAEbzhC,KAAM,CACFmU,QAASitB,GACTmS,eAAgBH,GAChB1xC,cAAAA,KFJF8xC,GAAiB,IAAI5vC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEE6vC,GAAkB,SAACjzC,GAAG,OAAKgzC,GAAetwC,IAAI1C,EAAI,EAClDkzC,GAAmB,SAACx4C,GACtB,OAAOK,OAAOuS,KAAK5S,GAAQ6D,KAAK00C,GACpC,EACME,GAAgB,SAACl1C,GAAC,OAAKA,IAAMsG,GAAUtG,IAAMwH,EAAE,GAErD,SAAW6sC,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,QACpC,CAPD,CAOGA,KAAyBA,GAAuB,CAAC,IACpD,IAAMc,GAAmB,SAACC,EAAQC,GAAG,OAAK7uC,WAAW4uC,EAAO/tC,MAAM,MAAMguC,GAAK,EACvEC,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAO,GAAkB,IAAhBxvC,EAAS,EAATA,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMyvC,EAAWzvC,EAAU4Z,MAAM,sBACjC,GAAI61B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAASnvC,EAAU4Z,MAAM,oBAC/B,OAAIu1B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAIxwC,IAAI,CAAC,IAAK,IAAK,MACnCywC,GAAgC3wC,EAAmBod,QAAO,SAACtgB,GAAG,OAAM4zC,GAAclxC,IAAI1C,EAAI,IAehG,IAAM8zC,GAAmB,CAErBptC,MAAO,kBAAGhD,EAAC,EAADA,EAAC,IAAM6D,YAAAA,OAAW,IAAG,MAAG,MAAEF,aAAAA,OAAY,IAAG,MAAG,SAAO3D,EAAEW,IAAMX,EAAEU,IAAMK,WAAW8C,GAAe9C,WAAW4C,EAAa,EAC/HT,OAAQ,kBAAGjD,EAAC,EAADA,EAAC,IAAMyD,WAAAA,OAAU,IAAG,MAAG,MAAEE,cAAAA,OAAa,IAAG,MAAG,SAAO3D,EAAEU,IAAMV,EAAES,IAAMK,WAAW2C,GAAc3C,WAAW6C,EAAc,EAChIP,IAAK,SAAC2sC,EAAO,GAAF,IAAI3sC,EAAG,EAAHA,IAAG,OAAOtC,WAAWsC,EAAI,EACxCG,KAAM,SAACwsC,EAAO,GAAF,IAAIxsC,EAAI,EAAJA,KAAI,OAAOzC,WAAWyC,EAAK,EAC3CD,OAAQ,kBAAGtD,EAAC,EAADA,EAAOoD,EAAG,EAAHA,IAAG,OAAOtC,WAAWsC,IAAQpD,EAAEU,IAAMV,EAAES,IAAI,EAC7D4C,MAAO,kBAAGtD,EAAC,EAADA,EAAOwD,EAAI,EAAJA,KAAI,OAAOzC,WAAWyC,IAASxD,EAAEW,IAAMX,EAAEU,IAAI,EAE9DV,EAAG6vC,GAAuB,EAAG,IAC7B5vC,EAAG4vC,GAAuB,EAAG,KAE3BQ,GAA2B,SAACr5C,EAAQ+B,EAAeu3C,GACrD,IAAMC,EAAax3C,EAAcy/B,qBAC3BvtB,EAAUlS,EAAcQ,QACxBi3C,EAAuB3R,iBAAiB5zB,GACtCkgC,EAAYqF,EAAZrF,QACF3iC,EAAS,CAAC,EAGA,SAAZ2iC,GACApyC,EAAcw0C,eAAe,UAAWv2C,EAAOm0C,SAAW,SAK9DmF,EAAY/iC,SAAQ,SAACjR,GACjBkM,EAAOlM,GAAO8zC,GAAiB9zC,GAAKi0C,EAAYC,EACpD,IAEAz3C,EAAcc,SACd,IAAM42C,EAAa13C,EAAcy/B,qBAQjC,OAPA8X,EAAY/iC,SAAQ,SAACjR,GAGjB,IAAMxE,EAAQiB,EAAcslB,SAAS/hB,GACrCxE,GAASA,EAAM44C,KAAKloC,EAAOlM,IAC3BtF,EAAOsF,GAAO8zC,GAAiB9zC,GAAKm0C,EAAYD,EACpD,IACOx5C,CACX,EACM25C,GAAmC,SAAC53C,EAAe/B,GAA4C,IAApCwR,EAAS,UAAH,6CAAG,CAAC,EAAGiF,EAAgB,UAAH,6CAAG,CAAC,EAC3FzW,GAAS,UAAKA,GACdyW,GAAgB,UAAKA,GACrB,IAAMmjC,EAAuBv5C,OAAOuS,KAAK5S,GAAQ4lB,OAAO2yB,IAGpDsB,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GA4E7B,GA3EAH,EAAqBrjC,SAAQ,SAACjR,GAC1B,IAAMxE,EAAQiB,EAAcslB,SAAS/hB,GACrC,GAAKvD,EAAcqlB,SAAS9hB,GAA5B,CAEA,IAGI00C,EAHAtyB,EAAOlW,EAAOlM,GACd20C,EAAWpzB,GAAuBa,GAChCc,EAAKxoB,EAAOsF,GAMlB,GAAI6P,GAAkBqT,GAAK,CACvB,IAAM0xB,EAAe1xB,EAAG3nB,OAClBs5C,EAAsB,OAAV3xB,EAAG,GAAc,EAAI,EACvCd,EAAOc,EAAG2xB,GACVF,EAAWpzB,GAAuBa,GAClC,IAAK,IAAI/X,EAAIwqC,EAAWxqC,EAAIuqC,EAAcvqC,IACjCqqC,EAMDlyB,GAAUjB,GAAuB2B,EAAG7Y,MAAQqqC,EAAQ,2CALpDA,EAASnzB,GAAuB2B,EAAG7Y,IACnCmY,GAAUkyB,IAAWC,GAChBxB,GAAcwB,IAAaxB,GAAcuB,GAAU,gEAMpE,MAEIA,EAASnzB,GAAuB2B,GAEpC,GAAIyxB,IAAaD,EAGb,GAAIvB,GAAcwB,IAAaxB,GAAcuB,GAAS,CAClD,IAAMz3C,EAAUzB,EAAMhB,MACC,kBAAZyC,GACPzB,EAAMmH,IAAI8B,WAAWxH,IAEP,kBAAPimB,EACPxoB,EAAOsF,GAAOyE,WAAWye,GAEpBzpB,MAAMC,QAAQwpB,IAAOwxB,IAAWjvC,KACrC/K,EAAOsF,GAAOkjB,EAAG5D,IAAI7a,YAE7B,MACuB,OAAbkwC,QAAkC,IAAbA,OAAsB,EAASA,EAASzwC,aACvD,OAAXwwC,QAA8B,IAAXA,OAAoB,EAASA,EAAOxwC,aAC9C,IAATke,GAAqB,IAAPc,GAGF,IAATd,EACA5mB,EAAMmH,IAAI+xC,EAAOxwC,UAAUke,IAG3B1nB,EAAOsF,GAAO20C,EAASzwC,UAAUgf,IAMhCsxB,IACDD,EA9HpB,SAAyC93C,GACrC,IAAMq4C,EAAoB,GAW1B,OAVAjB,GAA8B5iC,SAAQ,SAACjR,GACnC,IAAMxE,EAAQiB,EAAcslB,SAAS/hB,QACvBlB,IAAVtD,IACAs5C,EAAkB36B,KAAK,CAACna,EAAKxE,EAAMhB,QACnCgB,EAAMmH,IAAI3C,EAAIsD,WAAW,SAAW,EAAI,GAEhD,IAEIwxC,EAAkBv5C,QAClBkB,EAAcc,SACXu3C,CACX,CAkHwBC,CAAgCt4C,GACpC+3C,GAAsC,GAE1CC,EAAqBt6B,KAAKna,GAC1BmR,EAAcnR,QACalB,IAAvBqS,EAAcnR,GACRmR,EAAcnR,GACdtF,EAAOsF,GACjBxE,EAAM44C,KAAKlxB,GApET,CAuEd,IACIuxB,EAAqBl5C,OAAQ,CAC7B,IAAMy5C,EAAUP,EAAqB1xC,QAAQ,WAAa,EACpDrF,OAAOu3C,YACP,KACAC,EAAkBnB,GAAyBr5C,EAAQ+B,EAAeg4C,GAaxE,OAXIF,EAAuBh5C,QACvBg5C,EAAuBtjC,SAAQ,YAAkB,oBAAhBjR,EAAG,KAAExE,EAAK,KACvCiB,EAAcslB,SAAS/hB,GAAK2C,IAAInH,EACpC,IAGJiB,EAAcc,SAEViE,EAAAA,GAAyB,OAAZwzC,GACbt3C,OAAOy3C,SAAS,CAAEpuC,IAAKiuC,IAEpB,CAAEt6C,OAAQw6C,EAAiB/jC,cAAAA,EACtC,CAEI,MAAO,CAAEzW,OAAAA,EAAQyW,cAAAA,EAEzB,EG9MA,IAAMikC,GAAkB,SAAC34C,EAAe/B,EAAQwR,EAAQiF,GACpD,IAAMD,EAAWuxB,GAAoBhmC,EAAe/B,EAAQyW,GAG5D,OHkNJ,SAAwB1U,EAAe/B,EAAQwR,EAAQiF,GACnD,OAAO+hC,GAAiBx4C,GAClB25C,GAAiC53C,EAAe/B,EAAQwR,EAAQiF,GAChE,CAAEzW,OAAAA,EAAQyW,cAAAA,EACpB,CGtNWkkC,CAAe54C,EAFtB/B,EAASwW,EAASxW,OAE2BwR,EAD7CiF,EAAgBD,EAASC,cAE7B,ECXMmkC,GAAuB,CAAEr4C,QAAS,MAClCs4C,GAA2B,CAAEt4C,SAAS,G,sCCiBtCu4C,GAAez6C,OAAOuS,KAAKvN,GAC3B01C,GAAcD,GAAaj6C,OAC3Bm6C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMEC,GAAa,WACf,cAAiG,WAAnFp5C,EAAM,EAANA,OAAQhE,EAAK,EAALA,MAAOoE,EAAe,EAAfA,gBAAiBE,EAAmB,EAAnBA,oBAAqBR,EAAW,EAAXA,YAAgBkN,EAAU,UAAH,6CAAG,CAAC,GAAC,gBAK3F7N,KAAKuB,QAAU,KAIfvB,KAAKvC,SAAW,IAAIiK,IAIpB1H,KAAK+C,eAAgB,EACrB/C,KAAK2C,uBAAwB,EAQ7B3C,KAAKo4B,mBAAqB,KAM1Bp4B,KAAKxC,OAAS,IAAIsJ,IAIlB9G,KAAKmF,SAAW,CAAC,EAKjBnF,KAAKk6C,mBAAqB,IAAIpzC,IAM9B9G,KAAKm6C,iBAAmB,CAAC,EAIzBn6C,KAAK4f,OAAS,CAAC,EAMf5f,KAAKo6C,uBAAyB,CAAC,EAC/Bp6C,KAAKq6C,aAAe,kBAAM,EAAKj6B,OAAO,SAAU,EAAKxS,aAAa,EAClE5N,KAAK6B,OAAS,WACL,EAAKN,UAEV,EAAK+4C,eACL,EAAKC,eAAe,EAAKh5C,QAAS,EAAKiS,YAAa,EAAK3W,MAAMkR,MAAO,EAAKoF,YAC/E,EACAnT,KAAK+qC,eAAiB,kBAAM9qB,GAAAA,GAAAA,OAAY,EAAKpe,QAAQ,GAAO,EAAK,EACjE,IAAQ+L,EAA8BjN,EAA9BiN,aAAc4F,EAAgB7S,EAAhB6S,YACtBxT,KAAK4N,aAAeA,EACpB5N,KAAKw6C,YAAa,UAAK5sC,GACvB5N,KAAKy6C,cAAgB59C,EAAM4E,SAAU,UAAKmM,GAAiB,CAAC,EAC5D5N,KAAKwT,YAAcA,EACnBxT,KAAKa,OAASA,EACdb,KAAKnD,MAAQA,EACbmD,KAAKiB,gBAAkBA,EACvBjB,KAAKymC,MAAQ5lC,EAASA,EAAO4lC,MAAQ,EAAI,EACzCzmC,KAAKmB,oBAAsBA,EAC3BnB,KAAK6N,QAAUA,EACf7N,KAAK2C,sBAAwBA,EAAsB9F,GACnDmD,KAAK+C,cAAgBA,EAAclG,GAC/BmD,KAAK+C,gBACL/C,KAAKk3B,gBAAkB,IAAIxvB,KAE/B1H,KAAK+5B,uBAAyB/2B,QAAQnC,GAAUA,EAAOU,SAWvD,MAA+CvB,KAAK2T,4BAA4B9W,EAAO,CAAC,GAAhF+6B,EAAU,EAAVA,WAAe8iB,GAAmB,cAC1C,IAAK,IAAMp2C,KAAOo2C,EAAqB,CACnC,IAAM56C,EAAQ46C,EAAoBp2C,QACRlB,IAAtBwK,EAAatJ,IAAsBuD,EAAc/H,KACjDA,EAAMmH,IAAI2G,EAAatJ,IAAM,GACzBqiB,GAAwBiR,IACxBA,EAAW/W,IAAIvc,GAG3B,CACJ,CA4WC,OA3WD,oDAOA,SAA4Bq2C,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,mBACD,SAAMz0C,GAAU,WACZnG,KAAKuB,QAAU4E,EACXnG,KAAKmT,YACLnT,KAAKmT,WAAW/M,MAAMD,GAEtBnG,KAAKa,QAAUb,KAAK+C,gBAAkB/C,KAAK2C,wBAC3C3C,KAAK66C,sBAAwB76C,KAAKa,OAAOi6C,gBAAgB96C,OAE7DA,KAAKxC,OAAO+X,SAAQ,SAACzV,EAAOwE,GAAG,OAAK,EAAKy2C,kBAAkBz2C,EAAKxE,EAAM,IACjE+5C,GAAyBt4C,SCvJtC,WAEI,GADAs4C,GAAyBt4C,SAAU,EAC9BuE,EAAAA,EAEL,GAAI9D,OAAOg5C,WAAY,CACnB,IAAMC,EAAmBj5C,OAAOg5C,WAAW,4BACrCE,EAA8B,WAAH,OAAUtB,GAAqBr4C,QAAU05C,EAAiBliC,OAAO,EAClGkiC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEItB,GAAqBr4C,SAAU,CAEvC,CD2IY65C,GAEJp7C,KAAKo4B,mBAC4B,UAA7Bp4B,KAAKmB,sBAE8B,WAA7BnB,KAAKmB,qBAEDy4C,GAAqBr4C,SAI/BvB,KAAKa,QACLb,KAAKa,OAAOpD,SAASojB,IAAI7gB,MAC7BA,KAAK2B,OAAO3B,KAAKnD,MAAOmD,KAAKiB,gBACjC,GAAC,qBACD,WAOI,IAAK,IAAMqD,KANXtE,KAAKmT,YAAcnT,KAAKmT,WAAW9M,UACnC2qB,GAAAA,GAAAA,OAAkBhxB,KAAKq6C,cACvBrpB,GAAAA,GAAAA,OAAkBhxB,KAAK6B,QACvB7B,KAAKk6C,mBAAmB3kC,SAAQ,SAAC8iB,GAAM,OAAKA,GAAQ,IACpDr4B,KAAK66C,uBAAyB76C,KAAK66C,wBACnC76C,KAAKa,QAAUb,KAAKa,OAAOpD,SAAS+e,OAAOxc,MACzBA,KAAK4f,OACnB5f,KAAK4f,OAAOtb,GAAK2c,QAErB,IAAK,IAAM3c,KAAOtE,KAAKmF,SACnBnF,KAAKmF,SAASb,GAAK+B,UAEvBrG,KAAKuB,QAAU,IACnB,GAAC,+BACD,SAAkB+C,EAAKxE,GAAO,WACpBu7C,EAAmB5zC,EAAeT,IAAI1C,GACtCg3C,EAAiBx7C,EAAM6gB,GAAG,UAAU,SAAC46B,GACvC,EAAK3tC,aAAatJ,GAAOi3C,EACzB,EAAK1+C,MAAMi1B,UACP7R,GAAAA,GAAAA,OAAY,EAAKo6B,cAAc,GAAO,GACtCgB,GAAoB,EAAKloC,aACzB,EAAKA,WAAWi6B,kBAAmB,EAE3C,IACMoO,EAAwB17C,EAAM6gB,GAAG,gBAAiB3gB,KAAK+qC,gBAC7D/qC,KAAKk6C,mBAAmBjzC,IAAI3C,GAAK,WAC7Bg3C,IACAE,GACJ,GACJ,GAAC,8BACD,SAAiBC,GAIb,OAAKz7C,KAAKuB,SACLvB,KAAK07C,0BACN17C,KAAKuI,OAASkzC,EAAMlzC,KAGjBvI,KAAK07C,yBAAyB17C,KAAKuB,QAASk6C,EAAMl6C,SAF9C,CAGf,GAAC,0BACD,WAA6CyE,EAAUhB,EAAmBY,EAAcG,GAepF,IAf8G,IAC1G41C,EACAn2C,EAF0G,OAAtFo2C,GAAL,EAARn+C,UAA0B,eAe5BkR,EAAI,EAAGA,EAAIorC,GAAaprC,IAAK,CAClC,IAAM7L,EAAOg3C,GAAanrC,GAC1B,EAA2GtK,EAAmBvB,GAAtHyB,EAAS,EAATA,UAAoBs3C,EAAkB,EAA3B5jC,QAA6Bo/B,EAAc,EAAdA,eAA+ByE,EAAsB,EAArCt2C,cAC5D6xC,IACAsE,EAA4BtE,GAC5B9yC,EAAUq3C,MACL57C,KAAKmF,SAASrC,IAAS+4C,IACxB77C,KAAKmF,SAASrC,GAAQ,IAAI+4C,EAAmB77C,OAE7C87C,IACAt2C,EAAgBs2C,GAG5B,CACA,IAAK97C,KAAKmT,YAAcwoC,EAA2B,CAC/C37C,KAAKmT,WAAa,IAAIwoC,EAA0B/1C,EAAc5F,KAAK4N,aAAc5N,KAAKa,QAAUb,KAAKa,OAAOsS,YAC5G,IAAQzN,EAAuEk2C,EAAvEl2C,SAAUtB,EAA6Dw3C,EAA7Dx3C,OAAQN,EAAqD83C,EAArD93C,KAAM6+B,EAA+CiZ,EAA/CjZ,gBAAiByO,EAA8BwK,EAA9BxK,aAAczB,EAAgBiM,EAAhBjM,WAC/D3vC,KAAKmT,WAAWm1B,WAAW,CACvB5iC,SAAAA,EACAtB,OAAAA,EACA2sC,oBAAqB/tC,QAAQc,IACxB6+B,GAAmBvgC,EAAYugC,GACpC5hC,cAAef,KACf+qC,eAAgB,kBAAM,EAAKA,gBAAgB,EAQ3CiK,cAAiC,kBAAX5wC,EAAsBA,EAAS,OACrD+wC,uBAAwBpvC,EACxBqrC,aAAAA,EACAzB,WAAAA,GAER,CACA,OAAOnqC,CACX,GAAC,4BACD,WACI,IAAK,IAAMlB,KAAOtE,KAAKmF,SAAU,CAC7B,IAAM42C,EAAU/7C,KAAKmF,SAASb,GAC1By3C,EAAQ5jC,UACR4jC,EAAQp6C,OAAO3B,KAAKnD,MAAOmD,KAAK7B,YAGhC49C,EAAQ31C,QACR21C,EAAQ5jC,WAAY,EAE5B,CACJ,GAAC,0BACD,WACInY,KAAKg8C,MAAMh8C,KAAKwT,YAAaxT,KAAK4N,aAAc5N,KAAK6N,QAAS7N,KAAKnD,MACvE,GACA,gCAKA,WACI,OAAOmD,KAAKuB,QACNvB,KAAKi8C,2BAA2Bj8C,KAAKuB,QAASvB,KAAKnD,OACnDkiC,IACV,GAAC,4BACD,SAAez6B,GACX,OAAOtE,KAAK4N,aAAatJ,EAC7B,GAAC,4BACD,SAAeA,EAAKxE,GAChBE,KAAK4N,aAAatJ,GAAOxE,CAC7B,GACA,kCAOA,SAAqBd,GAA0B,IAAlBk9C,IAAY,UAAH,+CAClC,OAAOl8C,KAAKm8C,iCAAiCn9C,EAAQgB,KAAKnD,MAAOq/C,EACrE,GACA,oBAIA,SAAOr/C,EAAOoE,IACNpE,EAAMiR,mBAAqB9N,KAAKnD,MAAMiR,oBACtC9N,KAAK+qC,iBAET/qC,KAAK7B,UAAY6B,KAAKnD,MACtBmD,KAAKnD,MAAQA,EACbmD,KAAKs7B,oBAAsBt7B,KAAKiB,gBAChCjB,KAAKiB,gBAAkBA,EAIvB,IAAK,IAAI0N,EAAI,EAAGA,EAAIqrC,GAAkBn6C,OAAQ8O,IAAK,CAC/C,IAAMrK,EAAM01C,GAAkBrrC,GAC1B3O,KAAKo6C,uBAAuB91C,KAC5BtE,KAAKo6C,uBAAuB91C,YACrBtE,KAAKo6C,uBAAuB91C,IAEvC,IAAM83C,EAAWv/C,EAAM,KAAOyH,GAC1B83C,IACAp8C,KAAKo6C,uBAAuB91C,GAAOtE,KAAK2gB,GAAGrc,EAAK83C,GAExD,CACAp8C,KAAKm6C,iBExUb,SAAqClnC,EAASgL,EAAMC,GAChD,IAAQ0Z,EAAe3Z,EAAf2Z,WACR,IAAK,IAAMtzB,KAAO2Z,EAAM,CACpB,IAAMo+B,EAAYp+B,EAAK3Z,GACjBg4C,EAAYp+B,EAAK5Z,GACvB,GAAIuD,EAAcw0C,GAKdppC,EAAQqT,SAAShiB,EAAK+3C,GAClB11B,GAAwBiR,IACxBA,EAAW/W,IAAIvc,QAUlB,GAAIuD,EAAcy0C,GAKnBrpC,EAAQqT,SAAShiB,EAAKud,GAAYw6B,EAAW,CAAE57B,MAAOxN,KAClD0T,GAAwBiR,IACxBA,EAAWS,OAAO/zB,QAGrB,GAAIg4C,IAAcD,EAMnB,GAAIppC,EAAQmT,SAAS9hB,GAAM,CACvB,IAAMi4C,EAAgBtpC,EAAQoT,SAAS/hB,IAEtCi4C,EAAc/7B,aAAe+7B,EAAct1C,IAAIo1C,EACpD,KACK,CACD,IAAMd,EAActoC,EAAQupC,eAAel4C,GAC3C2O,EAAQqT,SAAShiB,EAAKud,QAA4Bze,IAAhBm4C,EAA4BA,EAAcc,EAAW,CAAE57B,MAAOxN,IACpG,CAER,CAEA,IAAK,IAAM3O,KAAO4Z,OACI9a,IAAd6a,EAAK3Z,IACL2O,EAAQwpC,YAAYn4C,GAE5B,OAAO2Z,CACX,CFiRgCy+B,CAA4B18C,KAAMA,KAAK2T,4BAA4B9W,EAAOmD,KAAK7B,WAAY6B,KAAKm6C,kBACpHn6C,KAAK28C,wBACL38C,KAAK28C,wBAEb,GAAC,sBACD,WACI,OAAO38C,KAAKnD,KAChB,GACA,wBAGA,SAAWiG,GACP,OAAO9C,KAAKnD,MAAMoG,SAAWjD,KAAKnD,MAAMoG,SAASH,QAAQM,CAC7D,GACA,kCAGA,WACI,OAAOpD,KAAKnD,MAAM6Y,UACtB,GAAC,mCACD,WACI,OAAO1V,KAAKnD,MAAMsD,kBACtB,GAAC,mCACD,WACI,OAAOH,KAAK+C,cACN/C,KACAA,KAAKa,OACDb,KAAKa,OAAO+7C,6BACZx5C,CACd,GAAC,+BACD,WACI,GAD8B,UAAH,8CAEvB,OAAOpD,KAAKa,OAASb,KAAKa,OAAO04B,yBAAsBn2B,EAE3D,IAAKpD,KAAK2C,sBAAuB,CAC7B,IAAMQ,EAAUnD,KAAKa,QACfb,KAAKa,OAAO04B,qBACZ,CAAC,EAIP,YAH2Bn2B,IAAvBpD,KAAKnD,MAAM4E,UACX0B,EAAQ1B,QAAUzB,KAAKnD,MAAM4E,SAE1B0B,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACRwL,EAAI,EAAGA,EAAIkuC,GAAiBluC,IAAK,CACtC,IAAM7L,EAAOJ,GAAaiM,GACpBlL,EAAOzD,KAAKnD,MAAMiG,IACpBR,EAAemB,KAAkB,IAATA,KACxBN,EAAQL,GAAQW,EAExB,CACA,OAAON,CACX,GACA,6BAGA,SAAgBiW,GACZ,IAAM0jC,EAAqB98C,KAAK48C,wBAChC,GAAIE,EAGA,OAFAA,EAAmB5lB,iBACf4lB,EAAmB5lB,gBAAgBrW,IAAIzH,GACpC,kBAAM0jC,EAAmB5lB,gBAAgB1a,OAAOpD,EAAM,CAErE,GACA,sBAGA,SAAS9U,EAAKxE,GAENA,IAAUE,KAAKxC,OAAOsB,IAAIwF,KAC1BtE,KAAKy8C,YAAYn4C,GACjBtE,KAAK+6C,kBAAkBz2C,EAAKxE,IAEhCE,KAAKxC,OAAOyJ,IAAI3C,EAAKxE,GACrBE,KAAK4N,aAAatJ,GAAOxE,EAAMhB,KACnC,GACA,yBAGA,SAAYwF,GACRtE,KAAKxC,OAAOgf,OAAOlY,GACnB,IAAMsc,EAAc5gB,KAAKk6C,mBAAmBp7C,IAAIwF,GAC5Csc,IACAA,IACA5gB,KAAKk6C,mBAAmB19B,OAAOlY,WAE5BtE,KAAK4N,aAAatJ,GACzBtE,KAAK+8C,2BAA2Bz4C,EAAKtE,KAAKwT,YAC9C,GACA,sBAGA,SAASlP,GACL,OAAOtE,KAAKxC,OAAOwJ,IAAI1C,EAC3B,GAAC,sBACD,SAASA,EAAKogB,GACV,GAAI1kB,KAAKnD,MAAMW,QAAUwC,KAAKnD,MAAMW,OAAO8G,GACvC,OAAOtE,KAAKnD,MAAMW,OAAO8G,GAE7B,IAAIxE,EAAQE,KAAKxC,OAAOsB,IAAIwF,GAK5B,YAJclB,IAAVtD,QAAwCsD,IAAjBshB,IACvB5kB,EAAQ+hB,GAAY6C,EAAc,CAAEjE,MAAOzgB,OAC3CA,KAAKsmB,SAAShiB,EAAKxE,IAEhBA,CACX,GACA,uBAKA,SAAUwE,GACN,YAAkClB,IAA3BpD,KAAK4N,aAAatJ,IAAuBtE,KAAKuB,QAE/CvB,KAAKg9C,sBAAsBh9C,KAAKuB,QAAS+C,EAAKtE,KAAK6N,SADnD7N,KAAK4N,aAAatJ,EAE5B,GACA,2BAIA,SAAcA,EAAKxE,GACfE,KAAKw6C,WAAWl2C,GAAOxE,CAC3B,GACA,2BAIA,SAAcwE,GACV,IAAIrH,EACIwE,EAAYzB,KAAKnD,MAAjB4E,QACFw7C,EAAsC,kBAAZx7C,GAA2C,kBAAZA,EACD,QAAvDxE,EAAK8W,GAAwB/T,KAAKnD,MAAO4E,UAA6B,IAAPxE,OAAgB,EAASA,EAAGqH,QAC5FlB,EAIN,GAAI3B,QAAgC2B,IAArB65C,EACX,OAAOA,EAMX,IAAMj+C,EAASgB,KAAKk9C,uBAAuBl9C,KAAKnD,MAAOyH,GACvD,YAAelB,IAAXpE,GAAyB6I,EAAc7I,QAMRoE,IAA5BpD,KAAKy6C,cAAcn2C,SACDlB,IAArB65C,OACE75C,EACApD,KAAKw6C,WAAWl2C,GARXtF,CASf,GAAC,gBACD,SAAGkX,EAAWwF,GAIV,OAHK1b,KAAK4f,OAAO1J,KACblW,KAAK4f,OAAO1J,GAAa,IAAI2I,IAE1B7e,KAAK4f,OAAO1J,GAAW2K,IAAInF,EACtC,GAAC,oBACD,SAAOxF,GACH,GAAIlW,KAAK4f,OAAO1J,GAAY,8BADXw4B,EAAI,iCAAJA,EAAI,mBAEjB,EAAA1uC,KAAK4f,OAAO1J,IAAWkK,OAAM,QAAIsuB,EACrC,CACJ,KAAC,EAhdc,GAkdbhsC,GAAe,CAAC,WAAS,gBAAK61B,KAC9BskB,GAAkBn6C,GAAa7C,O,kCGjf/Bs9C,GAAgB,wGAwCjB,OAxCiB,iDAClB,SAAyBhmC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEimC,wBAAwBhmC,GAAS,GAAK,CACnD,GAAC,oCACD,SAAuBva,EAAOyH,GAC1B,OAAOzH,EAAMkR,MAAQlR,EAAMkR,MAAMzJ,QAAOlB,CAC5C,GAAC,wCACD,SAA2BkB,EAAK,GAAiB,IAAf0J,EAAI,EAAJA,KAAMD,EAAK,EAALA,aAC7BC,EAAK1J,UACLyJ,EAAMzJ,EACjB,GAAC,8CACD,aAAgG6T,GAAW,IAAxEzC,EAAU,EAAVA,WAAYD,EAAa,EAAbA,cAAkBzW,GAAM,cAAMqQ,EAAe,EAAfA,gBACrEmB,EjFqFZ,SAAmBxR,EAAQ0W,EAAY3U,GACnC,IAAMyP,EAAS,CAAC,EAChB,IAAK,IAAMlM,KAAOtF,EAAQ,CACtB,IAAMq+C,EAAmB52B,GAAwBniB,EAAKoR,GACtD,QAAyBtS,IAArBi6C,EACA7sC,EAAOlM,GAAO+4C,MAEb,CACD,IAAMv9C,EAAQiB,EAAcslB,SAAS/hB,GACjCxE,IACA0Q,EAAOlM,GAAOxE,EAAMhB,MAE5B,CACJ,CACA,OAAO0R,CACX,CiFpGqB8sC,CAAUt+C,EAAQ0W,GAAc,CAAC,EAAG1V,MAYjD,GARIqP,IACIoG,IACAA,EAAgBpG,EAAgBoG,IAChCzW,IACAA,EAASqQ,EAAgBrQ,IACzBwR,IACAA,EAASnB,EAAgBmB,KAE7B2H,EAAW,EjFoBvB,SAAiCpX,EAAe/B,EAAQwR,GACpD,IAAIvT,EAAIS,EACF6/C,EAAel+C,OAAOuS,KAAK5S,GAAQ4lB,QAAO,SAACtgB,GAAG,OAAMvD,EAAcqlB,SAAS9hB,EAAI,IAC/Ek5C,EAAeD,EAAa19C,OAClC,GAAK29C,EAEL,IAAK,IAAI7uC,EAAI,EAAGA,EAAI6uC,EAAc7uC,IAAK,CACnC,IAAMrK,EAAMi5C,EAAa5uC,GACnB8uC,EAAcz+C,EAAOsF,GACvBxE,EAAQ,KAKR/B,MAAMC,QAAQy/C,KACd39C,EAAQ29C,EAAY,IAOV,OAAV39C,IACAA,EAAoG,QAA3FpC,EAA4B,QAAtBT,EAAKuT,EAAOlM,UAAyB,IAAPrH,EAAgBA,EAAK8D,EAAc28C,UAAUp5C,UAAyB,IAAP5G,EAAgBA,EAAKsB,EAAOsF,SAM9HlB,IAAVtD,GAAiC,OAAVA,IAEN,kBAAVA,IACNse,GAAkBte,IAAUue,GAAkBve,IAE/CA,EAAQiJ,WAAWjJ,IAEbkmB,GAAclmB,IAAUqkB,GAAQ7c,KAAKm2C,KAC3C39C,EAAQskB,GAAkB9f,EAAKm5C,IAEnC18C,EAAculB,SAAShiB,EAAKud,GAAY/hB,EAAO,CAAE2gB,MAAO1f,UACpCqC,IAAhBoN,EAAOlM,KACPkM,EAAOlM,GAAOxE,GAEJ,OAAVA,GACAiB,EAAc48C,cAAcr5C,EAAKxE,GACzC,CACJ,CiFjEY89C,CAAwB59C,KAAMhB,EAAQwR,GACtC,IAAM6T,EAASq1B,GAAgB15C,KAAMhB,EAAQwR,EAAQiF,GACrDA,EAAgB4O,EAAO5O,cACvBzW,EAASqlB,EAAOrlB,MACpB,CACA,OAAO,QACH0W,WAAAA,EACAD,cAAAA,GACGzW,EAEX,KAAC,EAxCiB,CAASi7C,ICQ9B,IACK4D,GAAiB,wGAsClB,OAtCkB,8CACnB,SAAsB13C,EAAU7B,GAC5B,GAAImD,EAAeT,IAAI1C,GAAM,CACzB,IAAMw5C,EAAcr4B,GAAoBnhB,GACxC,OAAOw5C,GAAcA,EAAY50C,SAAe,CACpD,CAEI,IAVc+J,EAUR8qC,GAVQ9qC,EAUyB9M,EATxCnE,OAAO6kC,iBAAiB5zB,IAUjBnT,GAASuI,EAAc/D,GACvBy5C,EAAcjX,iBAAiBxiC,GAC/By5C,EAAcz5C,KAAS,EAC7B,MAAwB,kBAAVxE,EAAqBA,EAAM+O,OAAS/O,CAE1D,GAAC,wCACD,SAA2BqG,EAAU,GACjC,OAAOq6B,GAAmBr6B,EAD2B,EAAlBhG,mBAEvC,GAAC,mBACD,SAAMqT,EAAa5F,EAAcC,EAAShR,GACtC6Q,GAAgB8F,EAAa5F,EAAcC,EAAShR,EAAMiR,kBAC9D,GAAC,yCACD,SAA4BjR,EAAOsB,GAC/B,OAAOwV,GAA4B9W,EAAOsB,EAC9C,GAAC,oCACD,WAAyB,WACjB6B,KAAKg+C,oBACLh+C,KAAKg+C,2BACEh+C,KAAKg+C,mBAEhB,IAAQvgD,EAAauC,KAAKnD,MAAlBY,SACJoK,EAAcpK,KACduC,KAAKg+C,kBAAoBvgD,EAASkjB,GAAG,UAAU,SAAC2jB,GACxC,EAAK/iC,UACL,EAAKA,QAAQ08C,YAAc,GAAH,OAAM3Z,GACtC,IAER,GAAC,4BACD,SAAen+B,EAAUqN,EAAaN,EAAWC,GAC7CH,GAAW7M,EAAUqN,EAAaN,EAAWC,EACjD,KAAC,EAtCkB,CAASgqC,I,sBCF1Be,GAAgB,4CAClB,aAAc,MAEY,OAFZ,iBACV,eAASt+C,YACJkR,UAAW,EAAM,CAC1B,CA2BC,OA3BA,+CACD,SAAuBjU,EAAOyH,GAC1B,OAAOzH,EAAMyH,EACjB,GAAC,mCACD,SAAsB6B,EAAU7B,GAC5B,GAAImD,EAAeT,IAAI1C,GAAM,CACzB,IAAMw5C,EAAcr4B,GAAoBnhB,GACxC,OAAOw5C,GAAcA,EAAY50C,SAAe,CACpD,CAEA,OADA5E,EAAOgP,GAAoBtM,IAAI1C,GAA0BA,EAAnBuO,GAAYvO,GAC3C6B,EAASg4C,aAAa75C,EACjC,GAAC,wCACD,WACI,OAAOy6B,IACX,GAAC,yCACD,SAA4BliC,EAAOsB,GAC/B,OAAOwV,GAA4B9W,EAAOsB,EAC9C,GAAC,mBACD,SAAMqV,EAAa5F,EAAcC,EAAShR,GACtCgU,GAAc2C,EAAa5F,EAAcC,EAAS7N,KAAK8Q,SAAUjU,EAAMiR,kBAC3E,GAAC,4BACD,SAAe3H,EAAUqN,EAAaN,EAAWC,GAC7CI,GAAUpN,EAAUqN,EAAaN,EAAWC,EAChD,GAAC,mBACD,SAAMhN,GACFnG,KAAK8Q,SAAWA,GAAS3K,EAASxI,UAClC,sDAAYwI,EAChB,KAAC,EA/BiB,CAASg3C,ICPzBiB,GAAyB,SAACxgD,EAAWiQ,GACvC,OAAO1G,EAAevJ,GAChB,IAAIsgD,GAAiBrwC,EAAS,CAAEW,4BAA4B,IAC5D,IAAIqvC,GAAkBhwC,EAAS,CAAEW,4BAA4B,GACvE,ECLMpK,GAAS,CACXA,OAAQ,CACJizC,eAAgBH,GAChB1xC,cAAAA,KCGFR,IAAoB,kCACnBoyB,IACArZ,IACAja,IACAM,IAQDi6C,GAAuB53C,GAAkB,SAAC7I,EAAW+W,GAAM,OChBjE,SAA+B/W,EAAW,EAAgCoH,EAAmBpE,GAAqB,QAAtE0R,mBAAAA,OAAkB,IAAG,GAAK,EAC5DgsC,EAAan3C,EAAevJ,GAC5BgY,GACAI,GACN,OAAO,kBACAsoC,GAAU,IACbt5C,kBAAAA,EACAC,UAAWoN,GAAgBC,GAC3B1R,oBAAAA,EACAhD,UAAAA,GAER,CDKsE2gD,CAAsB3gD,EAAW+W,EAAQ3P,GAAmBo5C,GAAuB,G","sources":["../node_modules/react-intl/lib/src/components/message.js","../node_modules/react-intl/lib/src/components/useIntl.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["FormattedMessage","props","intl","useIntl","formatMessage","_a","textComponent","Text","React","id","description","defaultMessage","values","children","_b","tagName","Component","nodes","ignoreTag","Array","isArray","displayName","MemoizedFormattedMessage","prevProps","nextProps","otherProps","__rest","nextValues","nextOtherProps","shallowEqual","Context","invariantIntlContext","_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","isVariantLabel","v","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","AnimationType","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","Hover","HoverGesture","FocusGesture","isFocusVisible","matches","Focus","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","Tap","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","requestAnimationFrame","onViewportEnter","InView","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","viewportFallback","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","addUniqueItem","arr","item","push","removeItem","index","splice","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","delta","frameData","timestamp","sync","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","add","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","cancelSync","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","cancel","setWithVelocity","timeout","performance","now","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","BoundingBoxDimension","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}