{"version":3,"file":"static/js/489.0005d6ec.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Ui-Kit/Button/Button.styled.js","components/Ui-Kit/Button/Button.jsx","components/Ui-Kit/Input/Input.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  typography,\n  color,\n  space,\n  layout,\n  shadow,\n  border,\n  flexbox,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  typography,\n  color,\n  space,\n  layout,\n  shadow,\n  border,\n  flexbox,\n  grid\n);\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  max-width: 480px;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  ${theme.mq.tablet} {\n    width: ${({ theme }) => theme.breakpoints[1]};\n    max-width: 100%;\n    padding-right: ${({ theme }) => theme.space[6]};\n    padding-left: ${({ theme }) => theme.space[6]};\n  }\n\n  ${theme.mq.desktop} {\n    width: ${({ theme }) => theme.breakpoints[2]};\n    max-width: 100%;\n    padding-right: ${({ theme }) => theme.space[3]};\n    padding-left: ${({ theme }) => theme.space[3]};\n  }\n`;\n","import { Box } from 'components/Box/Box';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContainerStyled } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerStyled>{children}</ContainerStyled>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  margin: 0 auto;\n  padding-top: 42px;\n  padding-bottom: 100px;\n\n  ${theme.mq.tablet} {\n    padding-top: 90px;\n  }\n  ${theme.mq.desktop} {\n    padding-top: 60px;\n    padding-bottom: 200px;\n  }\n`;\n","import React from 'react';\nimport Container from 'components/Container';\nimport PropTypes from 'prop-types';\nimport { SectionStyled } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return (\n    <SectionStyled>\n      <Container>{children}</Container>\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  display: block;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  cursor: pointer;\n  width: ${({ theme, width }) => (width ? width : 'auto')};\n  padding-left: 28px;\n  padding-right: 28px;\n  padding-top: 9px;\n  padding-bottom: 9px;\n  border-radius: 40px;\n  border: 2px solid ${({ theme }) => theme.colors.accent};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, name }) =>\n    name === 'filled' ? theme.colors.accent : 'transparent'};\n  color: ${({ theme, name }) => {\n    switch (name) {\n      case 'transparent':\n        return theme.colors.mainText;\n      case 'filled':\n        return theme.colors.lightText;\n      case 'learnMore':\n        return theme.colors.accent;\n      default:\n        return theme.colors.lightText;\n    }\n  }};\n\n  transition: color ${({ theme }) => theme.transitionTiming},\n    background-color ${({ theme }) => theme.transitionTiming},\n    border-color ${({ theme }) => theme.transitionTiming};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme, name }) =>\n      name === 'learnMore' ? 'transparent' : theme.colors.hover};\n    border-color: ${({ theme, name }) =>\n      name === 'learnMore' ? theme.colors.secondaryHover : theme.colors.hover};\n    color: ${({ theme, name }) =>\n      name === 'learnMore'\n        ? theme.colors.secondaryHover\n        : theme.colors.lightText};\n  }\n`;\n","import React from 'react';\nimport { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\n// name: 'transparent' | 'filled' | 'learnMore'\nconst Button = ({ type = 'button', onClick, children, name, width }) => {\n  return (\n    <ButtonStyled name={name} type={type} onClick={onClick} width={width}>\n      {children}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  width: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  type: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst InputField = ({ label, name, type, placeholder, id }) => {\n  return (\n    <>\n      <label htmlFor={name}>{label}</label>\n      <Field type={type} name={name} id={id} placeholder={placeholder} />\n      <ErrorMessage name={name} component=\"div\" />\n    </>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n};\n","import styled from \"styled-components\";\nimport { Form } from \"formik\";\n\nexport const ModalWrapper = styled.div`\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10vh;\n`;\n\nexport const ModalContent = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  width: 400px;\n  height: 380px;\n`;\n\nexport const FormWrapper = styled(Form)`\n    display:flex;\n    flex-direction: column;\n    gap: 10px;\n`","import React from \"react\";\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from \"formik\";\nimport { ModalContent, ModalWrapper, FormWrapper } from \"./LoginForm.styled\";\nimport * as Yup from \"yup\";\nimport InputField from \"../Ui-Kit/Input/Input\";\nimport { NavLink } from \"react-router-dom\";\nimport { useLoginUserMutation } from \"redux/api/userApi\";\nimport { useSelector } from \"react-redux\";\nimport Button from 'components/Ui-Kit/Button';\n\nconst initialValues = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n\n};\n\nconst validationSchema = Yup.object().shape({\n\n    email: Yup.string()\n        .email(\"Invalid email address\")\n        .required(\"Email is required\"),\n    password: Yup.string()\n        .min(8, \"Password must be at least 8 characters long\")\n        .required(\"Password is required\"),\n});\n\nconst LoginForm = () => {\n\n    const [loginUser, { isError }] = useLoginUserMutation();\n    const navigate = useNavigate();\n    const { isAuth } = useSelector(state => state.user);\n    const handleSubmit = (values) => {\n\n        const credentials = {\n            email: values.email,\n            password: values.password,\n        };\n        loginUser(credentials);\n    };\n\n    useEffect(() => {\n    if (isAuth) {\n      console.log('Congratulations! You are successfully signed up!');\n      navigate('/');\n    }\n  });\n\n    return (\n        <ModalWrapper>\n            <ModalContent>\n                <h1>Login</h1>\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={handleSubmit}\n                >\n                    {({ isSubmitting }) => (\n                        <FormWrapper>\n             \n                            <InputField name=\"email\" type=\"email\" placeholder=\"Email\" />\n                            <InputField name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            <Button name=\"filled\" type=\"submit\" disabled={isSubmitting}>\n                                Submit\n                            </Button>\n                        </FormWrapper>\n                    )}\n                </Formik>\n                <p>Don&apos;t have an account? <NavLink to=\"/register\">Regiser</NavLink></p>\n            </ModalContent>\n        </ModalWrapper>\n    );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport { logout } from '../../redux/user/userSlice';\nimport Section from 'components/Section';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { isAuth } = useSelector(state => state.user);\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Section>\n      {isAuth ? <button onClick={handleLogout}>Logout</button> : <LoginForm />}\n    </Section>\n  );\n};\n\nexport default Login;\n"],"names":["Box","styled","typography","color","space","layout","shadow","border","flexbox","grid","ContainerStyled","theme","breakpoints","children","SectionStyled","Container","ButtonStyled","width","colors","accent","name","mainText","lightText","transitionTiming","hover","secondaryHover","type","onClick","label","placeholder","id","htmlFor","component","ModalWrapper","ModalContent","FormWrapper","Form","initialValues","email","password","confirmPassword","validationSchema","Yup","shape","required","min","useLoginUserMutation","loginUser","navigate","isError","useNavigate","isAuth","useSelector","state","user","useEffect","console","log","onSubmit","values","credentials","isSubmitting","Input","Button","disabled","to","dispatch","useDispatch","Section","logout"],"sourceRoot":""}